{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1463378369000},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1463378369000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1463378369000},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1463378369000},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1463378369000},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1463378369000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1463378369000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1463378369000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1463378369000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1463378369000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1463378369000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1463378369000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1463378369000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1463378369000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1463378369000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1463378369000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1463378369000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1463378369000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1463378369000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1463378369000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1463378369000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1463378369000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1463378369000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1463378369000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1463378369000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1463378369000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1463378369000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1463378369000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1463378369000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1463378369000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1463378369000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1463378369000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1463378369000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1463378369000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1463378369000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1463378369000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1463378369000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1463378369000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1463378369000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1463378369000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1463378369000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1463378369000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1463378369000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1463378369000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1463378369000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1463378369000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1463378369000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1463378370000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1463378369000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1463378370000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1463378370000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1463378370000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1463378370000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1463378370000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1463378370000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1463378370000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1463378370000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1463378370000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1463378370000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1463378370000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1463378370000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1463378370000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1463378370000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1463378370000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1463378370000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1463378370000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1463378370000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"36eefe6332b86b66023a9884b754d305235846b4","modified":1463378370000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1463378370000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1463378370000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1463378370000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1463378370000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1463378370000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1463378370000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1463378370000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1463378370000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1463378370000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1463378370000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1463378370000},{"_id":"source/_posts/AFNetworking学习笔记-1.md","hash":"7bdde31ce4c623f667a3059fa4187f563a5c8932","modified":1463378626000},{"_id":"source/_posts/Baidu网盘的内容作为外链使用.md","hash":"6dfab5a6d50a958a4ffe92fe1c99b28ab23a3272","modified":1463378626000},{"_id":"source/_posts/CentOS-下Lamp环境的快速搭建.md","hash":"9c1e8e2371e85c88e1091b0ff012debbde9618e9","modified":1463378626000},{"_id":"source/_posts/Git-安装.md","hash":"99a90bfa5e30776773740c85afaea3a385268907","modified":1463378626000},{"_id":"source/_posts/Git-查询远端分支.md","hash":"52bc9edc316edde0099952d612aaebcbddfe7fdc","modified":1463378626000},{"_id":"source/_posts/Git-获取远端分支.md","hash":"e7ab934eb62e8d2f24bca02e12925918080c7967","modified":1463378626000},{"_id":"source/_posts/Github图片外链设置.md","hash":"d4f1cc3f1bcdb0bc90f11ab204f4e9fa12df5297","modified":1463378626000},{"_id":"source/_posts/IOS-Key-Value-Code-的基本操作.md","hash":"80bbc4bf5de58ddbf5848686b66afd40e36a2c9d","modified":1463378626000},{"_id":"source/_posts/IOS-Location-After-8-0.md","hash":"e9c7aead2da2fbaa475f29631d373c2b00004a2f","modified":1463378626000},{"_id":"source/_posts/IOS-Storyboard.md","hash":"7cd03e73ca84084bbe7693f7da6769cba9313e33","modified":1463378626000},{"_id":"source/_posts/IOS-本地音乐播放.md","hash":"e9da54d8531453057edfe07bfe31ee9546b00187","modified":1463378626000},{"_id":"source/_posts/KVC-字典对象和数组对象的键值编码.md","hash":"f7e7aef732f62fd56a97b364d2d32ac8407ff7f9","modified":1463378626000},{"_id":"source/_posts/KVC-键值设置编码的行为.md","hash":"c793817910974a831a5dbe876855bb82365c28a4","modified":1463378626000},{"_id":"source/_posts/KVC-键值访问编码的行为.md","hash":"bfcd569b0ff51dc492b2728211946bbe043c9593","modified":1463378626000},{"_id":"source/_posts/KVC-键路径的访问.md","hash":"5471f506f21095f2e765f989c6470127db920f20","modified":1463378626000},{"_id":"source/_posts/KVO.md","hash":"69c81d62782a86953d670768b28d70da6bdf38c9","modified":1463378626000},{"_id":"source/_posts/Linux-文件属性的结构体.md","hash":"82e3301bf65ca65055d8efc11968eea05c4973ea","modified":1463378626000},{"_id":"source/_posts/Linux-文件属性读取.md","hash":"ac45a925c54471f034bdd16bfda0f1d257403fd5","modified":1463378626000},{"_id":"source/_posts/Linux-目录内容的结构.md","hash":"ab32bc3d36f2a5ea3ef4d501e24872a82d82e6b2","modified":1463378626000},{"_id":"source/_posts/Linux-目录操作.md","hash":"0211b5f64950dd3d6d6e78055d9ba6696e6f52d8","modified":1463378626000},{"_id":"source/_posts/Mac-键盘快捷键.md","hash":"41691945b235dbc60e718c7c6866752128659cbe","modified":1463378626000},{"_id":"source/_posts/Man为什么查不到和书上的相似的结果.md","hash":"75c8239c9ed519e398b7c7ce08c9d3c56b11b7b4","modified":1463378626000},{"_id":"source/_posts/Mysql-建立数据库和删除数据库.md","hash":"8ad6d1472e0c2e817abf48791e011c0ad78e7189","modified":1463378626000},{"_id":"source/_posts/Mysql-建立表和删除表.md","hash":"3209e69b59ae2cb7e0a7e86115878c3d49d58c1a","modified":1463378626000},{"_id":"source/_posts/Mysql-数据类型.md","hash":"2e14316dca09858a3ea4a9a8db30f76c08daafbf","modified":1463378626000},{"_id":"source/_posts/Mysql-数据类型的属性.md","hash":"185c3e537a910f519eccb1600013ec26a8e05fa8","modified":1463378626000},{"_id":"source/_posts/Mysql-表内容的插入.md","hash":"0305846bb9257b72b857c2459f4fac4361aafcb4","modified":1463378626000},{"_id":"source/_posts/Mysql-视图创建.md","hash":"930b5679f558230c4efb5b66337c82f2c4ca8bf9","modified":1463378626000},{"_id":"source/_posts/Mysql-连接数据库.md","hash":"0113ced172e6609120ae96ade86899f3365f6d63","modified":1463378626000},{"_id":"source/_posts/Python-Error-TypeError-string-indices-must-be-integers-not-str.md","hash":"2f408c1c1bf1e049c32389693037f75defd77228","modified":1463378626000},{"_id":"source/_posts/Python-setattr-使用和分析.md","hash":"7b3812cf1bbe958acff1ee483303d5296ae8ba6c","modified":1463378626000},{"_id":"source/_posts/Python-utf-8编码的16进制字符串转换成对应的文字.md","hash":"eb5c5dbf14be07b9f64b21d605c99f085ba69043","modified":1463378626000},{"_id":"source/_posts/Python-函数返回多值的分析.md","hash":"75a7c8a72fc9471a6d9f110d6d60d302d463d437","modified":1463378626000},{"_id":"source/_posts/Python-字典.md","hash":"28ddf64535c453422d2d0d351c95aa717cdf5b7c","modified":1463378626000},{"_id":"source/_posts/Python-字符串转换成字典.md","hash":"c024ef676d1d2a850e6f83e59075ac80e3a473fa","modified":1463378626000},{"_id":"source/_posts/Python-类型判断.md","hash":"c23f2761ccfdee52492e85af29f6be1b192d72d0","modified":1463378626000},{"_id":"source/_posts/Python-解析配置模块-ConfigParser.md","hash":"788aaee9e6e46d51c1636cb65476a6dcc012d26a","modified":1463378626000},{"_id":"source/_posts/Python-连接-Mysql-数据库.md","hash":"f4535e53478c13749e8bd8c29e2dba15e05fb787","modified":1463378626000},{"_id":"source/_posts/XML-Parsing-IOS.md","hash":"d672afafec59d3f8d56230dae8dd68b4fa778d73","modified":1463378626000},{"_id":"source/_posts/first-Blog.md","hash":"5d32b3e31f74e242c82240421db8fa6546f4e780","modified":1463378626000},{"_id":"source/_posts/git从远程库同步到本地仓库.md","hash":"b55b04e8e0dca2cbcb9efaafa5bf84181469bfa6","modified":1463378626000},{"_id":"source/_posts/node-安装.md","hash":"718db01c01608015d3c2cf380e11cff7e887744e","modified":1463378626000},{"_id":"source/_posts/软件下载的网站.md","hash":"0d1528e78319d01b4ab7a403b98781388f115c70","modified":1463378626000}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-05-16T05:59:29.000Z","updated":"2016-05-16T05:59:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9lsoo10000p23q3miil8pr","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"CentOS 下Lamp环境的快速搭建","date":"2016-03-24T00:15:29.000Z","_content":"","source":"_posts/CentOS-下Lamp环境的快速搭建.md","raw":"title: CentOS 下Lamp环境的快速搭建\ndate: 2016-03-24 08:15:29\ntags:\n---\n","slug":"CentOS-下Lamp环境的快速搭建","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzaj0000pe3q42iliqe8","content":"","excerpt":"","more":""},{"title":"Baidu网盘的内容作为外链使用","date":"2016-02-27T10:57:13.000Z","_content":"\n# 目录\n\n1.[百度网盘的优势](#positive)\n2.[利用百度网盘](#usage)\n3.[实现外链的使用](#outLink)\n\n- [Warning](#Warning)\n\n> 如果想直接完成设置，不想了解过程，可以直接跳到 [实现外链的使用](#outLink)\n\n# <span id = \"positive\">百度网盘的优势</span>\n\n- 百度网盘免费提供了 `2T` 的免费的云空间（多么好的事情，嘻嘻）\n- 然后在速度方面，可以说是国内可以的了。\n- 没有广告，后台很硬。百度的技术能力你们懂的。。。。。\n\n- 百度云是由百度公司出品的一款云服务产品,不仅为用户提供免费存储空间,还可以将视频、照片、文档、通讯录数据在移动设备和PC端之间跨平台同步、备份等,百度云还支持添加好友、创建群组,和伙伴们快乐分享, 目前已上线:Android、iPhone、iPad、百度云管家、网页端等.\n\n\n**百度云盘的优点** ( 来源于 [百度百科](http://baike.baidu.com/view/8194353.htm?wtp=tt) )\n\n- 数据共享\n  + 支持Web，PC，Android、iPhone、WindowsPhone手机客户端等多个平台，[3]  进行跨平台、跨终端的文件共享，随时随地访问。用户上传的文件都会保存在云端，在访问文件时，无论登录哪个平台都可以访问到所有平台存储的文件；存储随意，访问方便。\n\n- 文件分类浏览\n  + 自动对用户文件进行分类，浏览查找更方便。按照用户存储的文件类型对用户上传文件进行自动分类，极大方便了用户浏览以及对文件的管理，独具特色。\n\n- 快速上传\n  + Web版支持最大1GB 单文件上传，PC客户端最大支持4GB单文件上传，上传不限速；可进行批量操作，轻松便利。网络速度有多快上传速度就有多快。同时，还可以批量操作上传，方便实用。上传文件时，自动将要上传的文件与云端资源库进行匹配，如果匹配成功，则可以秒传，最大限度节省您的上传时间。\n\n- 离线下载\n  + 只需输入你需要下载的文件链接，服务器将自动帮你下载到网盘中。最大限度节省用户将文件存至网盘的时间。\n\n- 数据安全\n  + 百度强大的云存储集群，是目前最具优势的存储机制，提供了完善高效的服务：高效的云端存储速度，以及稳定可靠的数据安全。完善的文件访问控制机制，提供了必备的数据安全屏障。依托百度大规模可靠存储，一份文件多份备份，防范一切意外。数据传输加密，有效防止数据窃取。\n\n- 轻松好友分享\n  + 轻松进行文件及文件夹的分享，支持短信、邮件、链接、秘密分享等分享方式，让你的好友和你一起High起来。好友分享时，设有相应的提取码，只有输入相应的提取码才能访问分享的文件，有效确保了隐私安全。\n\n- 闪电互传\n  + 闪电互传是百度云推出的数据传输功能，使用“闪电互传”在2台及多台移动设备上（主要是：手机、IPad），相互传输电影、视频、游戏等，无需网络、WiFi，真正的零流量传输，传输文件的速度比蓝牙快70倍，同时支持安卓、苹果自由互传。\n\n# <span id = \"usage\">利用百度网盘</span>\n\n写了自己的博客，然后发现一些资源需要上传到网上，但是我们需要一个由外往地址的服务器。这个对于一个学生党来说是一笔不小的开销哦。所以我们可以使用免费的东西来实现我们想要的外部链接，就是用百度云盘来实现的。\n\n# <span id = \"outLink\">实现外链的使用</span>\n\n- 前提是你要有 `百度网盘` 的账号, 不然一切都免谈啦。。。\n\n## 网盘上有一个可供分享链接的文件\n  - 网盘已经有文件\n    \\>\n    ![B_1](https://cloud.githubusercontent.com/assets/9689132/13394432/34cab124-df23-11e5-85ac-dad9e374f883.png)\n    \\>\n    ![B_2](https://cloud.githubusercontent.com/assets/9689132/13394430/34aac9ea-df23-11e5-81ed-fd227e79b147.png)\n    \\>\n    ![B_3](https://cloud.githubusercontent.com/assets/9689132/13394431/34adc4c4-df23-11e5-9b55-adbb51de8a1f.png)\n    \\>\n    ![B_4](https://cloud.githubusercontent.com/assets/9689132/13394429/34a4714e-df23-11e5-9172-c278a3404420.png)\n    \\>\n\n    **然后复制链接到浏览器**\n\n    ![B_5](https://cloud.githubusercontent.com/assets/9689132/13394428/34a2bef8-df23-11e5-8fef-6419d1950415.png)\n    **但是需要注意哦，应该单个文件的创建共享，不然就会变成这样**\n\n    ![B_6](https://cloud.githubusercontent.com/assets/9689132/13394426/347badfe-df23-11e5-9c4f-45a0c86be7eb.png)\n\n  - 网盘没有文件\n    \\>\n    **那就上传一个吧**\n\n    ![B_7](https://cloud.githubusercontent.com/assets/9689132/13394427/347c0d12-df23-11e5-83a3-3103f0bf53fd.png)\n\n    ![B_8](https://cloud.githubusercontent.com/assets/9689132/13394424/3479a04a-df23-11e5-8e2c-165e32246222.png)\n\n    ![B_9](https://cloud.githubusercontent.com/assets/9689132/13394425/347b5a20-df23-11e5-9f8a-cbee1c604f38.png)\n\n\n## 复制图片的链接，形成外链\n   \\>\n   ![B_10](https://cloud.githubusercontent.com/assets/9689132/13394422/34766236-df23-11e5-9ddc-3613385357d8.png)\n\n   **然后在你需要的地方，把这个链接复制上去就可以了**\n\n   ![B_11](https://cloud.githubusercontent.com/assets/9689132/13394423/3479249e-df23-11e5-9b91-fd693841634c.png)\n\n\n# 总结\n\n## 文章参考\n\n- [当前可用的百度网盘图片和MP3音乐外链方法](http://www.freehao123.com/baidu-pan-mp3/)\n- [使用百度网盘外链图片](http://www.360doc.com/content/13/1026/00/7863900_324242288.shtml)\n- [百度网盘 - 百度百科](http://baike.baidu.com/view/8194353.htm?wtp=tt)\n- [百度搜索 - 1](https://www.baidu.com/s?wd=%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9A%84%E4%BC%98%E7%82%B9&rsv_spt=1&rsv_iqid=0x8d2391e6000cbfab&issp=1&f=8&rsv_bp=1&rsv_idx=2&ie=utf-8&tn=93288332_hao_pg&rsv_enter=1&oq=%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98&rsv_t=db90PQ%2FAXqyYpgtNbUIxxa1HXTilzUrAgpL7lRM%2B17%2BSNANTmgK9NxAKtJFdB09XxxeO0bS8&inputT=2994&rsv_pq=dd44aa2c003c71fd&rsv_sug3=79&rsv_sug1=44&rsv_sug7=100&bs=%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98)\n- [百度搜索 - 2](https://www.baidu.com/s?wd=%E7%BD%91%E7%9B%98&rsv_spt=1&rsv_iqid=0xbc73fc8d000175f7&issp=1&f=3&rsv_bp=1&rsv_idx=2&ie=utf-8&tn=baiduhome_pg&rsv_enter=1&oq=git%20%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81%E5%88%B0%E6%9C%AC%E5%9C%B0&rsv_t=7957VIgrsFOIVxqFRHTGeRJBaVhWtzG4ja58ZkH8%2B0C1T28hpVwyv3wIhrU0eSvrFr8y&inputT=1825&rsv_pq=ae40f2f50001059c&rsv_sug3=33&rsv_sug2=0&prefixsug=%E7%BD%91%E7%9B%98&rsp=0&rsv_sug4=1826&bs=git%20%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81%E5%88%B0%E6%9C%AC%E5%9C%B0&rsv_jmp=fail)\n- [百度云 如何直接 使用 图片链接。。。](http://zhidao.baidu.com/link?url=V9LhKlTjeFy4k8UCD48fJf6iSRvBZGuzHWh6phHM_g47ZQ__86u1l9si3O4BxnZWZF0K5sv_hWuYXiJodXn_wnzyCorCRNFluNmfHEDoSgK)\n\n## 个人意见\n\n因为在七牛使用的空间有限，特意想到这个，实践证明可行。\n\n## <span id=\"Warning\">Warning</span>\n **这种方法图片只能使用一天而已，然后链接就失效了。**\n\n [参考一个在Github上的外链设置](http://scofieldwyq.github.io/2016/02/29/Github%E5%9B%BE%E7%89%87%E5%A4%96%E9%93%BE%E8%AE%BE%E7%BD%AE/)\n","source":"_posts/Baidu网盘的内容作为外链使用.md","raw":"title: Baidu网盘的内容作为外链使用\ndate: 2016-02-27 18:57:13\ntags:\n- 百度网盘\n- 外部链接\n\n---\n\n# 目录\n\n1.[百度网盘的优势](#positive)\n2.[利用百度网盘](#usage)\n3.[实现外链的使用](#outLink)\n\n- [Warning](#Warning)\n\n> 如果想直接完成设置，不想了解过程，可以直接跳到 [实现外链的使用](#outLink)\n\n# <span id = \"positive\">百度网盘的优势</span>\n\n- 百度网盘免费提供了 `2T` 的免费的云空间（多么好的事情，嘻嘻）\n- 然后在速度方面，可以说是国内可以的了。\n- 没有广告，后台很硬。百度的技术能力你们懂的。。。。。\n\n- 百度云是由百度公司出品的一款云服务产品,不仅为用户提供免费存储空间,还可以将视频、照片、文档、通讯录数据在移动设备和PC端之间跨平台同步、备份等,百度云还支持添加好友、创建群组,和伙伴们快乐分享, 目前已上线:Android、iPhone、iPad、百度云管家、网页端等.\n\n\n**百度云盘的优点** ( 来源于 [百度百科](http://baike.baidu.com/view/8194353.htm?wtp=tt) )\n\n- 数据共享\n  + 支持Web，PC，Android、iPhone、WindowsPhone手机客户端等多个平台，[3]  进行跨平台、跨终端的文件共享，随时随地访问。用户上传的文件都会保存在云端，在访问文件时，无论登录哪个平台都可以访问到所有平台存储的文件；存储随意，访问方便。\n\n- 文件分类浏览\n  + 自动对用户文件进行分类，浏览查找更方便。按照用户存储的文件类型对用户上传文件进行自动分类，极大方便了用户浏览以及对文件的管理，独具特色。\n\n- 快速上传\n  + Web版支持最大1GB 单文件上传，PC客户端最大支持4GB单文件上传，上传不限速；可进行批量操作，轻松便利。网络速度有多快上传速度就有多快。同时，还可以批量操作上传，方便实用。上传文件时，自动将要上传的文件与云端资源库进行匹配，如果匹配成功，则可以秒传，最大限度节省您的上传时间。\n\n- 离线下载\n  + 只需输入你需要下载的文件链接，服务器将自动帮你下载到网盘中。最大限度节省用户将文件存至网盘的时间。\n\n- 数据安全\n  + 百度强大的云存储集群，是目前最具优势的存储机制，提供了完善高效的服务：高效的云端存储速度，以及稳定可靠的数据安全。完善的文件访问控制机制，提供了必备的数据安全屏障。依托百度大规模可靠存储，一份文件多份备份，防范一切意外。数据传输加密，有效防止数据窃取。\n\n- 轻松好友分享\n  + 轻松进行文件及文件夹的分享，支持短信、邮件、链接、秘密分享等分享方式，让你的好友和你一起High起来。好友分享时，设有相应的提取码，只有输入相应的提取码才能访问分享的文件，有效确保了隐私安全。\n\n- 闪电互传\n  + 闪电互传是百度云推出的数据传输功能，使用“闪电互传”在2台及多台移动设备上（主要是：手机、IPad），相互传输电影、视频、游戏等，无需网络、WiFi，真正的零流量传输，传输文件的速度比蓝牙快70倍，同时支持安卓、苹果自由互传。\n\n# <span id = \"usage\">利用百度网盘</span>\n\n写了自己的博客，然后发现一些资源需要上传到网上，但是我们需要一个由外往地址的服务器。这个对于一个学生党来说是一笔不小的开销哦。所以我们可以使用免费的东西来实现我们想要的外部链接，就是用百度云盘来实现的。\n\n# <span id = \"outLink\">实现外链的使用</span>\n\n- 前提是你要有 `百度网盘` 的账号, 不然一切都免谈啦。。。\n\n## 网盘上有一个可供分享链接的文件\n  - 网盘已经有文件\n    \\>\n    ![B_1](https://cloud.githubusercontent.com/assets/9689132/13394432/34cab124-df23-11e5-85ac-dad9e374f883.png)\n    \\>\n    ![B_2](https://cloud.githubusercontent.com/assets/9689132/13394430/34aac9ea-df23-11e5-81ed-fd227e79b147.png)\n    \\>\n    ![B_3](https://cloud.githubusercontent.com/assets/9689132/13394431/34adc4c4-df23-11e5-9b55-adbb51de8a1f.png)\n    \\>\n    ![B_4](https://cloud.githubusercontent.com/assets/9689132/13394429/34a4714e-df23-11e5-9172-c278a3404420.png)\n    \\>\n\n    **然后复制链接到浏览器**\n\n    ![B_5](https://cloud.githubusercontent.com/assets/9689132/13394428/34a2bef8-df23-11e5-8fef-6419d1950415.png)\n    **但是需要注意哦，应该单个文件的创建共享，不然就会变成这样**\n\n    ![B_6](https://cloud.githubusercontent.com/assets/9689132/13394426/347badfe-df23-11e5-9c4f-45a0c86be7eb.png)\n\n  - 网盘没有文件\n    \\>\n    **那就上传一个吧**\n\n    ![B_7](https://cloud.githubusercontent.com/assets/9689132/13394427/347c0d12-df23-11e5-83a3-3103f0bf53fd.png)\n\n    ![B_8](https://cloud.githubusercontent.com/assets/9689132/13394424/3479a04a-df23-11e5-8e2c-165e32246222.png)\n\n    ![B_9](https://cloud.githubusercontent.com/assets/9689132/13394425/347b5a20-df23-11e5-9f8a-cbee1c604f38.png)\n\n\n## 复制图片的链接，形成外链\n   \\>\n   ![B_10](https://cloud.githubusercontent.com/assets/9689132/13394422/34766236-df23-11e5-9ddc-3613385357d8.png)\n\n   **然后在你需要的地方，把这个链接复制上去就可以了**\n\n   ![B_11](https://cloud.githubusercontent.com/assets/9689132/13394423/3479249e-df23-11e5-9b91-fd693841634c.png)\n\n\n# 总结\n\n## 文章参考\n\n- [当前可用的百度网盘图片和MP3音乐外链方法](http://www.freehao123.com/baidu-pan-mp3/)\n- [使用百度网盘外链图片](http://www.360doc.com/content/13/1026/00/7863900_324242288.shtml)\n- [百度网盘 - 百度百科](http://baike.baidu.com/view/8194353.htm?wtp=tt)\n- [百度搜索 - 1](https://www.baidu.com/s?wd=%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9A%84%E4%BC%98%E7%82%B9&rsv_spt=1&rsv_iqid=0x8d2391e6000cbfab&issp=1&f=8&rsv_bp=1&rsv_idx=2&ie=utf-8&tn=93288332_hao_pg&rsv_enter=1&oq=%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98&rsv_t=db90PQ%2FAXqyYpgtNbUIxxa1HXTilzUrAgpL7lRM%2B17%2BSNANTmgK9NxAKtJFdB09XxxeO0bS8&inputT=2994&rsv_pq=dd44aa2c003c71fd&rsv_sug3=79&rsv_sug1=44&rsv_sug7=100&bs=%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98)\n- [百度搜索 - 2](https://www.baidu.com/s?wd=%E7%BD%91%E7%9B%98&rsv_spt=1&rsv_iqid=0xbc73fc8d000175f7&issp=1&f=3&rsv_bp=1&rsv_idx=2&ie=utf-8&tn=baiduhome_pg&rsv_enter=1&oq=git%20%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81%E5%88%B0%E6%9C%AC%E5%9C%B0&rsv_t=7957VIgrsFOIVxqFRHTGeRJBaVhWtzG4ja58ZkH8%2B0C1T28hpVwyv3wIhrU0eSvrFr8y&inputT=1825&rsv_pq=ae40f2f50001059c&rsv_sug3=33&rsv_sug2=0&prefixsug=%E7%BD%91%E7%9B%98&rsp=0&rsv_sug4=1826&bs=git%20%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81%E5%88%B0%E6%9C%AC%E5%9C%B0&rsv_jmp=fail)\n- [百度云 如何直接 使用 图片链接。。。](http://zhidao.baidu.com/link?url=V9LhKlTjeFy4k8UCD48fJf6iSRvBZGuzHWh6phHM_g47ZQ__86u1l9si3O4BxnZWZF0K5sv_hWuYXiJodXn_wnzyCorCRNFluNmfHEDoSgK)\n\n## 个人意见\n\n因为在七牛使用的空间有限，特意想到这个，实践证明可行。\n\n## <span id=\"Warning\">Warning</span>\n **这种方法图片只能使用一天而已，然后链接就失效了。**\n\n [参考一个在Github上的外链设置](http://scofieldwyq.github.io/2016/02/29/Github%E5%9B%BE%E7%89%87%E5%A4%96%E9%93%BE%E8%AE%BE%E7%BD%AE/)\n","slug":"Baidu网盘的内容作为外链使用","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzar0001pe3q1aetkcj8","content":"<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><p>1.<a href=\"#positive\">百度网盘的优势</a><br>2.<a href=\"#usage\">利用百度网盘</a><br>3.<a href=\"#outLink\">实现外链的使用</a></p>\n<ul>\n<li><a href=\"#Warning\">Warning</a></li>\n</ul>\n<blockquote>\n<p>如果想直接完成设置，不想了解过程，可以直接跳到 <a href=\"#outLink\">实现外链的使用</a></p>\n</blockquote>\n<h1 id=\"百度网盘的优势\"><a href=\"#百度网盘的优势\" class=\"headerlink\" title=\"百度网盘的优势\"></a><span id=\"positive\">百度网盘的优势</span></h1><ul>\n<li>百度网盘免费提供了 <code>2T</code> 的免费的云空间（多么好的事情，嘻嘻）</li>\n<li>然后在速度方面，可以说是国内可以的了。</li>\n<li><p>没有广告，后台很硬。百度的技术能力你们懂的。。。。。</p>\n</li>\n<li><p>百度云是由百度公司出品的一款云服务产品,不仅为用户提供免费存储空间,还可以将视频、照片、文档、通讯录数据在移动设备和PC端之间跨平台同步、备份等,百度云还支持添加好友、创建群组,和伙伴们快乐分享, 目前已上线:Android、iPhone、iPad、百度云管家、网页端等.</p>\n</li>\n</ul>\n<p><strong>百度云盘的优点</strong> ( 来源于 <a href=\"http://baike.baidu.com/view/8194353.htm?wtp=tt\" target=\"_blank\" rel=\"external\">百度百科</a> )</p>\n<ul>\n<li><p>数据共享</p>\n<ul>\n<li>支持Web，PC，Android、iPhone、WindowsPhone手机客户端等多个平台，[3]  进行跨平台、跨终端的文件共享，随时随地访问。用户上传的文件都会保存在云端，在访问文件时，无论登录哪个平台都可以访问到所有平台存储的文件；存储随意，访问方便。</li>\n</ul>\n</li>\n<li><p>文件分类浏览</p>\n<ul>\n<li>自动对用户文件进行分类，浏览查找更方便。按照用户存储的文件类型对用户上传文件进行自动分类，极大方便了用户浏览以及对文件的管理，独具特色。</li>\n</ul>\n</li>\n<li><p>快速上传</p>\n<ul>\n<li>Web版支持最大1GB 单文件上传，PC客户端最大支持4GB单文件上传，上传不限速；可进行批量操作，轻松便利。网络速度有多快上传速度就有多快。同时，还可以批量操作上传，方便实用。上传文件时，自动将要上传的文件与云端资源库进行匹配，如果匹配成功，则可以秒传，最大限度节省您的上传时间。</li>\n</ul>\n</li>\n<li><p>离线下载</p>\n<ul>\n<li>只需输入你需要下载的文件链接，服务器将自动帮你下载到网盘中。最大限度节省用户将文件存至网盘的时间。</li>\n</ul>\n</li>\n<li><p>数据安全</p>\n<ul>\n<li>百度强大的云存储集群，是目前最具优势的存储机制，提供了完善高效的服务：高效的云端存储速度，以及稳定可靠的数据安全。完善的文件访问控制机制，提供了必备的数据安全屏障。依托百度大规模可靠存储，一份文件多份备份，防范一切意外。数据传输加密，有效防止数据窃取。</li>\n</ul>\n</li>\n<li><p>轻松好友分享</p>\n<ul>\n<li>轻松进行文件及文件夹的分享，支持短信、邮件、链接、秘密分享等分享方式，让你的好友和你一起High起来。好友分享时，设有相应的提取码，只有输入相应的提取码才能访问分享的文件，有效确保了隐私安全。</li>\n</ul>\n</li>\n<li><p>闪电互传</p>\n<ul>\n<li>闪电互传是百度云推出的数据传输功能，使用“闪电互传”在2台及多台移动设备上（主要是：手机、IPad），相互传输电影、视频、游戏等，无需网络、WiFi，真正的零流量传输，传输文件的速度比蓝牙快70倍，同时支持安卓、苹果自由互传。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"利用百度网盘\"><a href=\"#利用百度网盘\" class=\"headerlink\" title=\"利用百度网盘\"></a><span id=\"usage\">利用百度网盘</span></h1><p>写了自己的博客，然后发现一些资源需要上传到网上，但是我们需要一个由外往地址的服务器。这个对于一个学生党来说是一笔不小的开销哦。所以我们可以使用免费的东西来实现我们想要的外部链接，就是用百度云盘来实现的。</p>\n<h1 id=\"实现外链的使用\"><a href=\"#实现外链的使用\" class=\"headerlink\" title=\"实现外链的使用\"></a><span id=\"outLink\">实现外链的使用</span></h1><ul>\n<li>前提是你要有 <code>百度网盘</code> 的账号, 不然一切都免谈啦。。。</li>\n</ul>\n<h2 id=\"网盘上有一个可供分享链接的文件\"><a href=\"#网盘上有一个可供分享链接的文件\" class=\"headerlink\" title=\"网盘上有一个可供分享链接的文件\"></a>网盘上有一个可供分享链接的文件</h2><ul>\n<li><p>网盘已经有文件<br>><br><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394432/34cab124-df23-11e5-85ac-dad9e374f883.png\" alt=\"B_1\"><br>><br><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394430/34aac9ea-df23-11e5-81ed-fd227e79b147.png\" alt=\"B_2\"><br>><br><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394431/34adc4c4-df23-11e5-9b55-adbb51de8a1f.png\" alt=\"B_3\"><br>><br><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394429/34a4714e-df23-11e5-9172-c278a3404420.png\" alt=\"B_4\"><br>></p>\n<p><strong>然后复制链接到浏览器</strong></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394428/34a2bef8-df23-11e5-8fef-6419d1950415.png\" alt=\"B_5\"><br><strong>但是需要注意哦，应该单个文件的创建共享，不然就会变成这样</strong></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394426/347badfe-df23-11e5-9c4f-45a0c86be7eb.png\" alt=\"B_6\"></p>\n</li>\n<li><p>网盘没有文件<br>><br><strong>那就上传一个吧</strong></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394427/347c0d12-df23-11e5-83a3-3103f0bf53fd.png\" alt=\"B_7\"></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394424/3479a04a-df23-11e5-8e2c-165e32246222.png\" alt=\"B_8\"></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394425/347b5a20-df23-11e5-9f8a-cbee1c604f38.png\" alt=\"B_9\"></p>\n</li>\n</ul>\n<h2 id=\"复制图片的链接，形成外链\"><a href=\"#复制图片的链接，形成外链\" class=\"headerlink\" title=\"复制图片的链接，形成外链\"></a>复制图片的链接，形成外链</h2><p>   ><br>   <img src=\"https://cloud.githubusercontent.com/assets/9689132/13394422/34766236-df23-11e5-9ddc-3613385357d8.png\" alt=\"B_10\"></p>\n<p>   <strong>然后在你需要的地方，把这个链接复制上去就可以了</strong></p>\n<p>   <img src=\"https://cloud.githubusercontent.com/assets/9689132/13394423/3479249e-df23-11e5-9b91-fd693841634c.png\" alt=\"B_11\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><h2 id=\"文章参考\"><a href=\"#文章参考\" class=\"headerlink\" title=\"文章参考\"></a>文章参考</h2><ul>\n<li><a href=\"http://www.freehao123.com/baidu-pan-mp3/\" target=\"_blank\" rel=\"external\">当前可用的百度网盘图片和MP3音乐外链方法</a></li>\n<li><a href=\"http://www.360doc.com/content/13/1026/00/7863900_324242288.shtml\" target=\"_blank\" rel=\"external\">使用百度网盘外链图片</a></li>\n<li><a href=\"http://baike.baidu.com/view/8194353.htm?wtp=tt\" target=\"_blank\" rel=\"external\">百度网盘 - 百度百科</a></li>\n<li><a href=\"https://www.baidu.com/s?wd=%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9A%84%E4%BC%98%E7%82%B9&amp;rsv_spt=1&amp;rsv_iqid=0x8d2391e6000cbfab&amp;issp=1&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=2&amp;ie=utf-8&amp;tn=93288332_hao_pg&amp;rsv_enter=1&amp;oq=%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98&amp;rsv_t=db90PQ%2FAXqyYpgtNbUIxxa1HXTilzUrAgpL7lRM%2B17%2BSNANTmgK9NxAKtJFdB09XxxeO0bS8&amp;inputT=2994&amp;rsv_pq=dd44aa2c003c71fd&amp;rsv_sug3=79&amp;rsv_sug1=44&amp;rsv_sug7=100&amp;bs=%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98\" target=\"_blank\" rel=\"external\">百度搜索 - 1</a></li>\n<li><a href=\"https://www.baidu.com/s?wd=%E7%BD%91%E7%9B%98&amp;rsv_spt=1&amp;rsv_iqid=0xbc73fc8d000175f7&amp;issp=1&amp;f=3&amp;rsv_bp=1&amp;rsv_idx=2&amp;ie=utf-8&amp;tn=baiduhome_pg&amp;rsv_enter=1&amp;oq=git%20%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81%E5%88%B0%E6%9C%AC%E5%9C%B0&amp;rsv_t=7957VIgrsFOIVxqFRHTGeRJBaVhWtzG4ja58ZkH8%2B0C1T28hpVwyv3wIhrU0eSvrFr8y&amp;inputT=1825&amp;rsv_pq=ae40f2f50001059c&amp;rsv_sug3=33&amp;rsv_sug2=0&amp;prefixsug=%E7%BD%91%E7%9B%98&amp;rsp=0&amp;rsv_sug4=1826&amp;bs=git%20%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81%E5%88%B0%E6%9C%AC%E5%9C%B0&amp;rsv_jmp=fail\" target=\"_blank\" rel=\"external\">百度搜索 - 2</a></li>\n<li><a href=\"http://zhidao.baidu.com/link?url=V9LhKlTjeFy4k8UCD48fJf6iSRvBZGuzHWh6phHM_g47ZQ__86u1l9si3O4BxnZWZF0K5sv_hWuYXiJodXn_wnzyCorCRNFluNmfHEDoSgK\" target=\"_blank\" rel=\"external\">百度云 如何直接 使用 图片链接。。。</a></li>\n</ul>\n<h2 id=\"个人意见\"><a href=\"#个人意见\" class=\"headerlink\" title=\"个人意见\"></a>个人意见</h2><p>因为在七牛使用的空间有限，特意想到这个，实践证明可行。</p>\n<h2 id=\"Warning\"><a href=\"#Warning\" class=\"headerlink\" title=\"Warning\"></a><span id=\"Warning\">Warning</span></h2><p> <strong>这种方法图片只能使用一天而已，然后链接就失效了。</strong></p>\n<p> <a href=\"http://scofieldwyq.github.io/2016/02/29/Github%E5%9B%BE%E7%89%87%E5%A4%96%E9%93%BE%E8%AE%BE%E7%BD%AE/\" target=\"_blank\" rel=\"external\">参考一个在Github上的外链设置</a></p>\n","excerpt":"","more":"<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><p>1.<a href=\"#positive\">百度网盘的优势</a><br>2.<a href=\"#usage\">利用百度网盘</a><br>3.<a href=\"#outLink\">实现外链的使用</a></p>\n<ul>\n<li><a href=\"#Warning\">Warning</a></li>\n</ul>\n<blockquote>\n<p>如果想直接完成设置，不想了解过程，可以直接跳到 <a href=\"#outLink\">实现外链的使用</a></p>\n</blockquote>\n<h1 id=\"百度网盘的优势\"><a href=\"#百度网盘的优势\" class=\"headerlink\" title=\"百度网盘的优势\"></a><span id = \"positive\">百度网盘的优势</span></h1><ul>\n<li>百度网盘免费提供了 <code>2T</code> 的免费的云空间（多么好的事情，嘻嘻）</li>\n<li>然后在速度方面，可以说是国内可以的了。</li>\n<li><p>没有广告，后台很硬。百度的技术能力你们懂的。。。。。</p>\n</li>\n<li><p>百度云是由百度公司出品的一款云服务产品,不仅为用户提供免费存储空间,还可以将视频、照片、文档、通讯录数据在移动设备和PC端之间跨平台同步、备份等,百度云还支持添加好友、创建群组,和伙伴们快乐分享, 目前已上线:Android、iPhone、iPad、百度云管家、网页端等.</p>\n</li>\n</ul>\n<p><strong>百度云盘的优点</strong> ( 来源于 <a href=\"http://baike.baidu.com/view/8194353.htm?wtp=tt\">百度百科</a> )</p>\n<ul>\n<li><p>数据共享</p>\n<ul>\n<li>支持Web，PC，Android、iPhone、WindowsPhone手机客户端等多个平台，[3]  进行跨平台、跨终端的文件共享，随时随地访问。用户上传的文件都会保存在云端，在访问文件时，无论登录哪个平台都可以访问到所有平台存储的文件；存储随意，访问方便。</li>\n</ul>\n</li>\n<li><p>文件分类浏览</p>\n<ul>\n<li>自动对用户文件进行分类，浏览查找更方便。按照用户存储的文件类型对用户上传文件进行自动分类，极大方便了用户浏览以及对文件的管理，独具特色。</li>\n</ul>\n</li>\n<li><p>快速上传</p>\n<ul>\n<li>Web版支持最大1GB 单文件上传，PC客户端最大支持4GB单文件上传，上传不限速；可进行批量操作，轻松便利。网络速度有多快上传速度就有多快。同时，还可以批量操作上传，方便实用。上传文件时，自动将要上传的文件与云端资源库进行匹配，如果匹配成功，则可以秒传，最大限度节省您的上传时间。</li>\n</ul>\n</li>\n<li><p>离线下载</p>\n<ul>\n<li>只需输入你需要下载的文件链接，服务器将自动帮你下载到网盘中。最大限度节省用户将文件存至网盘的时间。</li>\n</ul>\n</li>\n<li><p>数据安全</p>\n<ul>\n<li>百度强大的云存储集群，是目前最具优势的存储机制，提供了完善高效的服务：高效的云端存储速度，以及稳定可靠的数据安全。完善的文件访问控制机制，提供了必备的数据安全屏障。依托百度大规模可靠存储，一份文件多份备份，防范一切意外。数据传输加密，有效防止数据窃取。</li>\n</ul>\n</li>\n<li><p>轻松好友分享</p>\n<ul>\n<li>轻松进行文件及文件夹的分享，支持短信、邮件、链接、秘密分享等分享方式，让你的好友和你一起High起来。好友分享时，设有相应的提取码，只有输入相应的提取码才能访问分享的文件，有效确保了隐私安全。</li>\n</ul>\n</li>\n<li><p>闪电互传</p>\n<ul>\n<li>闪电互传是百度云推出的数据传输功能，使用“闪电互传”在2台及多台移动设备上（主要是：手机、IPad），相互传输电影、视频、游戏等，无需网络、WiFi，真正的零流量传输，传输文件的速度比蓝牙快70倍，同时支持安卓、苹果自由互传。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"利用百度网盘\"><a href=\"#利用百度网盘\" class=\"headerlink\" title=\"利用百度网盘\"></a><span id = \"usage\">利用百度网盘</span></h1><p>写了自己的博客，然后发现一些资源需要上传到网上，但是我们需要一个由外往地址的服务器。这个对于一个学生党来说是一笔不小的开销哦。所以我们可以使用免费的东西来实现我们想要的外部链接，就是用百度云盘来实现的。</p>\n<h1 id=\"实现外链的使用\"><a href=\"#实现外链的使用\" class=\"headerlink\" title=\"实现外链的使用\"></a><span id = \"outLink\">实现外链的使用</span></h1><ul>\n<li>前提是你要有 <code>百度网盘</code> 的账号, 不然一切都免谈啦。。。</li>\n</ul>\n<h2 id=\"网盘上有一个可供分享链接的文件\"><a href=\"#网盘上有一个可供分享链接的文件\" class=\"headerlink\" title=\"网盘上有一个可供分享链接的文件\"></a>网盘上有一个可供分享链接的文件</h2><ul>\n<li><p>网盘已经有文件<br>><br><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394432/34cab124-df23-11e5-85ac-dad9e374f883.png\" alt=\"B_1\"><br>><br><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394430/34aac9ea-df23-11e5-81ed-fd227e79b147.png\" alt=\"B_2\"><br>><br><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394431/34adc4c4-df23-11e5-9b55-adbb51de8a1f.png\" alt=\"B_3\"><br>><br><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394429/34a4714e-df23-11e5-9172-c278a3404420.png\" alt=\"B_4\"><br>></p>\n<p><strong>然后复制链接到浏览器</strong></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394428/34a2bef8-df23-11e5-8fef-6419d1950415.png\" alt=\"B_5\"><br><strong>但是需要注意哦，应该单个文件的创建共享，不然就会变成这样</strong></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394426/347badfe-df23-11e5-9c4f-45a0c86be7eb.png\" alt=\"B_6\"></p>\n</li>\n<li><p>网盘没有文件<br>><br><strong>那就上传一个吧</strong></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394427/347c0d12-df23-11e5-83a3-3103f0bf53fd.png\" alt=\"B_7\"></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394424/3479a04a-df23-11e5-8e2c-165e32246222.png\" alt=\"B_8\"></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/9689132/13394425/347b5a20-df23-11e5-9f8a-cbee1c604f38.png\" alt=\"B_9\"></p>\n</li>\n</ul>\n<h2 id=\"复制图片的链接，形成外链\"><a href=\"#复制图片的链接，形成外链\" class=\"headerlink\" title=\"复制图片的链接，形成外链\"></a>复制图片的链接，形成外链</h2><p>   ><br>   <img src=\"https://cloud.githubusercontent.com/assets/9689132/13394422/34766236-df23-11e5-9ddc-3613385357d8.png\" alt=\"B_10\"></p>\n<p>   <strong>然后在你需要的地方，把这个链接复制上去就可以了</strong></p>\n<p>   <img src=\"https://cloud.githubusercontent.com/assets/9689132/13394423/3479249e-df23-11e5-9b91-fd693841634c.png\" alt=\"B_11\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><h2 id=\"文章参考\"><a href=\"#文章参考\" class=\"headerlink\" title=\"文章参考\"></a>文章参考</h2><ul>\n<li><a href=\"http://www.freehao123.com/baidu-pan-mp3/\">当前可用的百度网盘图片和MP3音乐外链方法</a></li>\n<li><a href=\"http://www.360doc.com/content/13/1026/00/7863900_324242288.shtml\">使用百度网盘外链图片</a></li>\n<li><a href=\"http://baike.baidu.com/view/8194353.htm?wtp=tt\">百度网盘 - 百度百科</a></li>\n<li><a href=\"https://www.baidu.com/s?wd=%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9A%84%E4%BC%98%E7%82%B9&amp;rsv_spt=1&amp;rsv_iqid=0x8d2391e6000cbfab&amp;issp=1&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=2&amp;ie=utf-8&amp;tn=93288332_hao_pg&amp;rsv_enter=1&amp;oq=%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98&amp;rsv_t=db90PQ%2FAXqyYpgtNbUIxxa1HXTilzUrAgpL7lRM%2B17%2BSNANTmgK9NxAKtJFdB09XxxeO0bS8&amp;inputT=2994&amp;rsv_pq=dd44aa2c003c71fd&amp;rsv_sug3=79&amp;rsv_sug1=44&amp;rsv_sug7=100&amp;bs=%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98\">百度搜索 - 1</a></li>\n<li><a href=\"https://www.baidu.com/s?wd=%E7%BD%91%E7%9B%98&amp;rsv_spt=1&amp;rsv_iqid=0xbc73fc8d000175f7&amp;issp=1&amp;f=3&amp;rsv_bp=1&amp;rsv_idx=2&amp;ie=utf-8&amp;tn=baiduhome_pg&amp;rsv_enter=1&amp;oq=git%20%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81%E5%88%B0%E6%9C%AC%E5%9C%B0&amp;rsv_t=7957VIgrsFOIVxqFRHTGeRJBaVhWtzG4ja58ZkH8%2B0C1T28hpVwyv3wIhrU0eSvrFr8y&amp;inputT=1825&amp;rsv_pq=ae40f2f50001059c&amp;rsv_sug3=33&amp;rsv_sug2=0&amp;prefixsug=%E7%BD%91%E7%9B%98&amp;rsp=0&amp;rsv_sug4=1826&amp;bs=git%20%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81%E5%88%B0%E6%9C%AC%E5%9C%B0&amp;rsv_jmp=fail\">百度搜索 - 2</a></li>\n<li><a href=\"http://zhidao.baidu.com/link?url=V9LhKlTjeFy4k8UCD48fJf6iSRvBZGuzHWh6phHM_g47ZQ__86u1l9si3O4BxnZWZF0K5sv_hWuYXiJodXn_wnzyCorCRNFluNmfHEDoSgK\">百度云 如何直接 使用 图片链接。。。</a></li>\n</ul>\n<h2 id=\"个人意见\"><a href=\"#个人意见\" class=\"headerlink\" title=\"个人意见\"></a>个人意见</h2><p>因为在七牛使用的空间有限，特意想到这个，实践证明可行。</p>\n<h2 id=\"Warning\"><a href=\"#Warning\" class=\"headerlink\" title=\"Warning\"></a><span id=\"Warning\">Warning</span></h2><p> <strong>这种方法图片只能使用一天而已，然后链接就失效了。</strong></p>\n<p> <a href=\"http://scofieldwyq.github.io/2016/02/29/Github%E5%9B%BE%E7%89%87%E5%A4%96%E9%93%BE%E8%AE%BE%E7%BD%AE/\">参考一个在Github上的外链设置</a></p>\n"},{"title":"AFNetworking学习笔记-1","date":"2016-03-01T09:04:21.000Z","_content":"\n# 概览\n\n- 版本:`3.0.4`\n- 结构图 > ![p_afnetworking_inherit](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/p_afnetworking_inherit.png?raw=true)\n\n# AFNetworking - Serializer\n\n> 关于 **Serializer**\n\n## 看一下它的继承结构\n\n```{bash}\n\n                                                   <NSObject>\n                                                        |\n                                  +------------------------------------------+         \n                                  |                                          |\n                     <AFHTTPRequestSerializer>                  <AFHTTPResponseSerializer>\n                                  |                                          |\n                         +--------+--------+                                 |\n                         |                 |                                 |\n      <AFJSONRequestSerializer> <AFPropertyListRequestSerializer>            |\n                                                                             |\n                                                                             |\n                                                                             |\n                     +-------------------------+-----------------------------+-----------------+------------------+\n                     |                         |                             |                 |                  |\n  <AFPropertyListResponseSerializer> <AFJSONResponseSerializer> <AFImageResponseSerializer>    |  <AFXMLParserResponseSerializer>\n                                                                                               |\n                                                                                               |\n                                                                                               |\n                                                                              <AFXMLDocumentResponseSerializer> * (for mac)\n```\n## 了解一下\n\n> 发送数据和接收数据的序列化编码封装\n\n### AFHTTP*\n  - **AFHTTPRequestSerializer**\n\n    `AFHTTPRequestSerializer` conforms to the `AFURLRequestSerialization` & `AFURLResponseSerialization` protocols, offering a concrete base implementation of query string / URL form-encoded parameter serialization and default request headers, as well as response status code and content type validation.\n\n    Any request or response serializer dealing with HTTP is encouraged to subclass `AFHTTPRequestSerializer` in order to ensure consistent default behavior.\n\n  - **AFHTTPResponseSerializer**\n\n    `AFHTTPResponseSerializer` conforms to the `AFURLRequestSerialization` & `AFURLResponseSerialization` protocols, offering a concrete base implementation of query string / URL form-encoded parameter serialization and default request headers, as well as response status code and content type validation.\n\n    Any request or response serializer dealing with HTTP is encouraged to subclass `AFHTTPResponseSerializer` in order to ensure consistent default behavior.  \n\n### AF*RequestSerializer\n  - **AFJSONRequestSerializer**\n\n    `AFJSONRequestSerializer` is a subclass of `AFHTTPRequestSerializer` that **encodes parameters** as `JSON` using `NSJSONSerialization`, setting the Content-Type of the encoded request to `application/json`.\n\n  - **AFPropertyListRequestSerializer**\n\n    `AFPropertyListRequestSerializer` is a subclass of `AFHTTPRequestSerializer` that **encodes parameters** as `JSON` using `NSPropertyListSerializer`, setting the Content-Type of the encoded request to `application/x-plist`.\n\n### AF*ResponseSerializer\n  - **AFPropertyListResponseSerializer**\n\n    `AFPropertyListResponseSerializer` is a subclass of `AFHTTPResponseSerializer` that validates and decodes `XML` responses as an `NSXMLDocument` objects.\n\n    By default, `AFPropertyListResponseSerializer` accepts the following `MIME` types:\n\n        - application/x-plist\n\n  - **AFXMLParserResponseSerializer**\n\n    `AFXMLParserResponseSerializer` is a subclass of `AFHTTPResponseSerializer` that validates and decodes `XML` responses as an `NSXMLParser` objects.\n\n    By default, `AFXMLParserResponseSerializer` accepts the following `MIME` types, which includes the official standard, application/xml, as well as other commonly-used types:\n\n        - application/xml\n        - text/xml   \n\n  - **AFXMLDocumentResponseSerializer**\n\n    `AFXMLDocumentResponseSerializer` is a subclass of `AFHTTPResponseSerializer` that validates and decodes `XML` responses as an `NSXMLDocument` objects.\n\n    By default, `AFXMLDocumentResponseSerializer` accepts the following `MIME` types, which includes the official standard, application/xml, as well as other commonly-used types:\n\n        - application/xml\n        - text/xml     \n\n  - **AFJSONResponseSerializer**\n\n    `AFJSONResponseSerializer` is a subclass of `AFHTTPResponseSerializer` that validates and decodes `JSON` responses.\n\n    By default, `AFJSONResponseSerializer` accepts the following `MIME` types, which includes the official standard, application/json, as well as other commonly-used types:\n\n        - application/json\n        - text/json\n        - text/javascript\n\n  - **AFImageResponseSerializer**\n\n    `AFImageResponseSerializer` is a subclass of `AFHTTPResponseSerializer` that validates and decodes `image` responses.\n\n    By default, `AFImageResponseSerializer` accepts the following `MIME` types, which correspond to the image formats supported by UIImage or NSImage:\n        - image/tiff\n        - image/jpeg\n        - image/gif\n        - image/png\n        - image/ico\n        - image/x-icon\n        - image/bmp\n        - image/x-bmp\n        - image/x-xbitmap\n        - image/x-win-bitmap\n\n\n## 开始剖析吧\n\n\n# 链接参考\n\n- [AFNetworking 官方文档](http://cocoadocs.org/docsets/AFNetworking/3.0.4/)\n- [AFNetworking 学习笔记 1](http://csbzhixing.github.io/blog/2015/10/23/afnetworking-1/)\n","source":"_posts/AFNetworking学习笔记-1.md","raw":"title: AFNetworking学习笔记-1\ndate: 2016-03-01 17:04:21\ntags:\n- AFNetworking\n- 学习笔记\n\n---\n\n# 概览\n\n- 版本:`3.0.4`\n- 结构图 > ![p_afnetworking_inherit](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/p_afnetworking_inherit.png?raw=true)\n\n# AFNetworking - Serializer\n\n> 关于 **Serializer**\n\n## 看一下它的继承结构\n\n```{bash}\n\n                                                   <NSObject>\n                                                        |\n                                  +------------------------------------------+         \n                                  |                                          |\n                     <AFHTTPRequestSerializer>                  <AFHTTPResponseSerializer>\n                                  |                                          |\n                         +--------+--------+                                 |\n                         |                 |                                 |\n      <AFJSONRequestSerializer> <AFPropertyListRequestSerializer>            |\n                                                                             |\n                                                                             |\n                                                                             |\n                     +-------------------------+-----------------------------+-----------------+------------------+\n                     |                         |                             |                 |                  |\n  <AFPropertyListResponseSerializer> <AFJSONResponseSerializer> <AFImageResponseSerializer>    |  <AFXMLParserResponseSerializer>\n                                                                                               |\n                                                                                               |\n                                                                                               |\n                                                                              <AFXMLDocumentResponseSerializer> * (for mac)\n```\n## 了解一下\n\n> 发送数据和接收数据的序列化编码封装\n\n### AFHTTP*\n  - **AFHTTPRequestSerializer**\n\n    `AFHTTPRequestSerializer` conforms to the `AFURLRequestSerialization` & `AFURLResponseSerialization` protocols, offering a concrete base implementation of query string / URL form-encoded parameter serialization and default request headers, as well as response status code and content type validation.\n\n    Any request or response serializer dealing with HTTP is encouraged to subclass `AFHTTPRequestSerializer` in order to ensure consistent default behavior.\n\n  - **AFHTTPResponseSerializer**\n\n    `AFHTTPResponseSerializer` conforms to the `AFURLRequestSerialization` & `AFURLResponseSerialization` protocols, offering a concrete base implementation of query string / URL form-encoded parameter serialization and default request headers, as well as response status code and content type validation.\n\n    Any request or response serializer dealing with HTTP is encouraged to subclass `AFHTTPResponseSerializer` in order to ensure consistent default behavior.  \n\n### AF*RequestSerializer\n  - **AFJSONRequestSerializer**\n\n    `AFJSONRequestSerializer` is a subclass of `AFHTTPRequestSerializer` that **encodes parameters** as `JSON` using `NSJSONSerialization`, setting the Content-Type of the encoded request to `application/json`.\n\n  - **AFPropertyListRequestSerializer**\n\n    `AFPropertyListRequestSerializer` is a subclass of `AFHTTPRequestSerializer` that **encodes parameters** as `JSON` using `NSPropertyListSerializer`, setting the Content-Type of the encoded request to `application/x-plist`.\n\n### AF*ResponseSerializer\n  - **AFPropertyListResponseSerializer**\n\n    `AFPropertyListResponseSerializer` is a subclass of `AFHTTPResponseSerializer` that validates and decodes `XML` responses as an `NSXMLDocument` objects.\n\n    By default, `AFPropertyListResponseSerializer` accepts the following `MIME` types:\n\n        - application/x-plist\n\n  - **AFXMLParserResponseSerializer**\n\n    `AFXMLParserResponseSerializer` is a subclass of `AFHTTPResponseSerializer` that validates and decodes `XML` responses as an `NSXMLParser` objects.\n\n    By default, `AFXMLParserResponseSerializer` accepts the following `MIME` types, which includes the official standard, application/xml, as well as other commonly-used types:\n\n        - application/xml\n        - text/xml   \n\n  - **AFXMLDocumentResponseSerializer**\n\n    `AFXMLDocumentResponseSerializer` is a subclass of `AFHTTPResponseSerializer` that validates and decodes `XML` responses as an `NSXMLDocument` objects.\n\n    By default, `AFXMLDocumentResponseSerializer` accepts the following `MIME` types, which includes the official standard, application/xml, as well as other commonly-used types:\n\n        - application/xml\n        - text/xml     \n\n  - **AFJSONResponseSerializer**\n\n    `AFJSONResponseSerializer` is a subclass of `AFHTTPResponseSerializer` that validates and decodes `JSON` responses.\n\n    By default, `AFJSONResponseSerializer` accepts the following `MIME` types, which includes the official standard, application/json, as well as other commonly-used types:\n\n        - application/json\n        - text/json\n        - text/javascript\n\n  - **AFImageResponseSerializer**\n\n    `AFImageResponseSerializer` is a subclass of `AFHTTPResponseSerializer` that validates and decodes `image` responses.\n\n    By default, `AFImageResponseSerializer` accepts the following `MIME` types, which correspond to the image formats supported by UIImage or NSImage:\n        - image/tiff\n        - image/jpeg\n        - image/gif\n        - image/png\n        - image/ico\n        - image/x-icon\n        - image/bmp\n        - image/x-bmp\n        - image/x-xbitmap\n        - image/x-win-bitmap\n\n\n## 开始剖析吧\n\n\n# 链接参考\n\n- [AFNetworking 官方文档](http://cocoadocs.org/docsets/AFNetworking/3.0.4/)\n- [AFNetworking 学习笔记 1](http://csbzhixing.github.io/blog/2015/10/23/afnetworking-1/)\n","slug":"AFNetworking学习笔记-1","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzav0002pe3quspzj5p2","content":"<h1 id=\"概览\"><a href=\"#概览\" class=\"headerlink\" title=\"概览\"></a>概览</h1><ul>\n<li>版本:<code>3.0.4</code></li>\n<li>结构图 &gt; <img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/p_afnetworking_inherit.png?raw=true\" alt=\"p_afnetworking_inherit\"></li>\n</ul>\n<h1 id=\"AFNetworking-Serializer\"><a href=\"#AFNetworking-Serializer\" class=\"headerlink\" title=\"AFNetworking - Serializer\"></a>AFNetworking - Serializer</h1><blockquote>\n<p>关于 <strong>Serializer</strong></p>\n</blockquote>\n<h2 id=\"看一下它的继承结构\"><a href=\"#看一下它的继承结构\" class=\"headerlink\" title=\"看一下它的继承结构\"></a>看一下它的继承结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">                                                 &lt;NSObject&gt;</span><br><span class=\"line\">                                                      |</span><br><span class=\"line\">                                +------------------------------------------+         </span><br><span class=\"line\">                                |                                          |</span><br><span class=\"line\">                   &lt;AFHTTPRequestSerializer&gt;                  &lt;AFHTTPResponseSerializer&gt;</span><br><span class=\"line\">                                |                                          |</span><br><span class=\"line\">                       +--------+--------+                                 |</span><br><span class=\"line\">                       |                 |                                 |</span><br><span class=\"line\">    &lt;AFJSONRequestSerializer&gt; &lt;AFPropertyListRequestSerializer&gt;            |</span><br><span class=\"line\">                                                                           |</span><br><span class=\"line\">                                                                           |</span><br><span class=\"line\">                                                                           |</span><br><span class=\"line\">                   +-------------------------+-----------------------------+-----------------+------------------+</span><br><span class=\"line\">                   |                         |                             |                 |                  |</span><br><span class=\"line\">&lt;AFPropertyListResponseSerializer&gt; &lt;AFJSONResponseSerializer&gt; &lt;AFImageResponseSerializer&gt;    |  &lt;AFXMLParserResponseSerializer&gt;</span><br><span class=\"line\">                                                                                             |</span><br><span class=\"line\">                                                                                             |</span><br><span class=\"line\">                                                                                             |</span><br><span class=\"line\">                                                                            &lt;AFXMLDocumentResponseSerializer&gt; * (for mac)</span><br></pre></td></tr></table></figure>\n<h2 id=\"了解一下\"><a href=\"#了解一下\" class=\"headerlink\" title=\"了解一下\"></a>了解一下</h2><blockquote>\n<p>发送数据和接收数据的序列化编码封装</p>\n</blockquote>\n<h3 id=\"AFHTTP\"><a href=\"#AFHTTP\" class=\"headerlink\" title=\"AFHTTP*\"></a>AFHTTP*</h3><ul>\n<li><p><strong>AFHTTPRequestSerializer</strong></p>\n<p><code>AFHTTPRequestSerializer</code> conforms to the <code>AFURLRequestSerialization</code> &amp; <code>AFURLResponseSerialization</code> protocols, offering a concrete base implementation of query string / URL form-encoded parameter serialization and default request headers, as well as response status code and content type validation.</p>\n<p>Any request or response serializer dealing with HTTP is encouraged to subclass <code>AFHTTPRequestSerializer</code> in order to ensure consistent default behavior.</p>\n</li>\n<li><p><strong>AFHTTPResponseSerializer</strong></p>\n<p><code>AFHTTPResponseSerializer</code> conforms to the <code>AFURLRequestSerialization</code> &amp; <code>AFURLResponseSerialization</code> protocols, offering a concrete base implementation of query string / URL form-encoded parameter serialization and default request headers, as well as response status code and content type validation.</p>\n<p>Any request or response serializer dealing with HTTP is encouraged to subclass <code>AFHTTPResponseSerializer</code> in order to ensure consistent default behavior.  </p>\n</li>\n</ul>\n<h3 id=\"AF-RequestSerializer\"><a href=\"#AF-RequestSerializer\" class=\"headerlink\" title=\"AF*RequestSerializer\"></a>AF*RequestSerializer</h3><ul>\n<li><p><strong>AFJSONRequestSerializer</strong></p>\n<p><code>AFJSONRequestSerializer</code> is a subclass of <code>AFHTTPRequestSerializer</code> that <strong>encodes parameters</strong> as <code>JSON</code> using <code>NSJSONSerialization</code>, setting the Content-Type of the encoded request to <code>application/json</code>.</p>\n</li>\n<li><p><strong>AFPropertyListRequestSerializer</strong></p>\n<p><code>AFPropertyListRequestSerializer</code> is a subclass of <code>AFHTTPRequestSerializer</code> that <strong>encodes parameters</strong> as <code>JSON</code> using <code>NSPropertyListSerializer</code>, setting the Content-Type of the encoded request to <code>application/x-plist</code>.</p>\n</li>\n</ul>\n<h3 id=\"AF-ResponseSerializer\"><a href=\"#AF-ResponseSerializer\" class=\"headerlink\" title=\"AF*ResponseSerializer\"></a>AF*ResponseSerializer</h3><ul>\n<li><p><strong>AFPropertyListResponseSerializer</strong></p>\n<p><code>AFPropertyListResponseSerializer</code> is a subclass of <code>AFHTTPResponseSerializer</code> that validates and decodes <code>XML</code> responses as an <code>NSXMLDocument</code> objects.</p>\n<p>By default, <code>AFPropertyListResponseSerializer</code> accepts the following <code>MIME</code> types:</p>\n<pre><code>- application/x-plist\n</code></pre></li>\n<li><p><strong>AFXMLParserResponseSerializer</strong></p>\n<p><code>AFXMLParserResponseSerializer</code> is a subclass of <code>AFHTTPResponseSerializer</code> that validates and decodes <code>XML</code> responses as an <code>NSXMLParser</code> objects.</p>\n<p>By default, <code>AFXMLParserResponseSerializer</code> accepts the following <code>MIME</code> types, which includes the official standard, application/xml, as well as other commonly-used types:</p>\n<pre><code>- application/xml\n- text/xml   \n</code></pre></li>\n<li><p><strong>AFXMLDocumentResponseSerializer</strong></p>\n<p><code>AFXMLDocumentResponseSerializer</code> is a subclass of <code>AFHTTPResponseSerializer</code> that validates and decodes <code>XML</code> responses as an <code>NSXMLDocument</code> objects.</p>\n<p>By default, <code>AFXMLDocumentResponseSerializer</code> accepts the following <code>MIME</code> types, which includes the official standard, application/xml, as well as other commonly-used types:</p>\n<pre><code>- application/xml\n- text/xml     \n</code></pre></li>\n<li><p><strong>AFJSONResponseSerializer</strong></p>\n<p><code>AFJSONResponseSerializer</code> is a subclass of <code>AFHTTPResponseSerializer</code> that validates and decodes <code>JSON</code> responses.</p>\n<p>By default, <code>AFJSONResponseSerializer</code> accepts the following <code>MIME</code> types, which includes the official standard, application/json, as well as other commonly-used types:</p>\n<pre><code>- application/json\n- text/json\n- text/javascript\n</code></pre></li>\n<li><p><strong>AFImageResponseSerializer</strong></p>\n<p><code>AFImageResponseSerializer</code> is a subclass of <code>AFHTTPResponseSerializer</code> that validates and decodes <code>image</code> responses.</p>\n<p>By default, <code>AFImageResponseSerializer</code> accepts the following <code>MIME</code> types, which correspond to the image formats supported by UIImage or NSImage:</p>\n<pre><code>- image/tiff\n- image/jpeg\n- image/gif\n- image/png\n- image/ico\n- image/x-icon\n- image/bmp\n- image/x-bmp\n- image/x-xbitmap\n- image/x-win-bitmap\n</code></pre></li>\n</ul>\n<h2 id=\"开始剖析吧\"><a href=\"#开始剖析吧\" class=\"headerlink\" title=\"开始剖析吧\"></a>开始剖析吧</h2><h1 id=\"链接参考\"><a href=\"#链接参考\" class=\"headerlink\" title=\"链接参考\"></a>链接参考</h1><ul>\n<li><a href=\"http://cocoadocs.org/docsets/AFNetworking/3.0.4/\" target=\"_blank\" rel=\"external\">AFNetworking 官方文档</a></li>\n<li><a href=\"http://csbzhixing.github.io/blog/2015/10/23/afnetworking-1/\" target=\"_blank\" rel=\"external\">AFNetworking 学习笔记 1</a></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"概览\"><a href=\"#概览\" class=\"headerlink\" title=\"概览\"></a>概览</h1><ul>\n<li>版本:<code>3.0.4</code></li>\n<li>结构图 &gt; <img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/p_afnetworking_inherit.png?raw=true\" alt=\"p_afnetworking_inherit\"></li>\n</ul>\n<h1 id=\"AFNetworking-Serializer\"><a href=\"#AFNetworking-Serializer\" class=\"headerlink\" title=\"AFNetworking - Serializer\"></a>AFNetworking - Serializer</h1><blockquote>\n<p>关于 <strong>Serializer</strong></p>\n</blockquote>\n<h2 id=\"看一下它的继承结构\"><a href=\"#看一下它的继承结构\" class=\"headerlink\" title=\"看一下它的继承结构\"></a>看一下它的继承结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">                                                 &lt;NSObject&gt;</span><br><span class=\"line\">                                                      |</span><br><span class=\"line\">                                +------------------------------------------+         </span><br><span class=\"line\">                                |                                          |</span><br><span class=\"line\">                   &lt;AFHTTPRequestSerializer&gt;                  &lt;AFHTTPResponseSerializer&gt;</span><br><span class=\"line\">                                |                                          |</span><br><span class=\"line\">                       +--------+--------+                                 |</span><br><span class=\"line\">                       |                 |                                 |</span><br><span class=\"line\">    &lt;AFJSONRequestSerializer&gt; &lt;AFPropertyListRequestSerializer&gt;            |</span><br><span class=\"line\">                                                                           |</span><br><span class=\"line\">                                                                           |</span><br><span class=\"line\">                                                                           |</span><br><span class=\"line\">                   +-------------------------+-----------------------------+-----------------+------------------+</span><br><span class=\"line\">                   |                         |                             |                 |                  |</span><br><span class=\"line\">&lt;AFPropertyListResponseSerializer&gt; &lt;AFJSONResponseSerializer&gt; &lt;AFImageResponseSerializer&gt;    |  &lt;AFXMLParserResponseSerializer&gt;</span><br><span class=\"line\">                                                                                             |</span><br><span class=\"line\">                                                                                             |</span><br><span class=\"line\">                                                                                             |</span><br><span class=\"line\">                                                                            &lt;AFXMLDocumentResponseSerializer&gt; * (for mac)</span><br></pre></td></tr></table></figure>\n<h2 id=\"了解一下\"><a href=\"#了解一下\" class=\"headerlink\" title=\"了解一下\"></a>了解一下</h2><blockquote>\n<p>发送数据和接收数据的序列化编码封装</p>\n</blockquote>\n<h3 id=\"AFHTTP\"><a href=\"#AFHTTP\" class=\"headerlink\" title=\"AFHTTP*\"></a>AFHTTP*</h3><ul>\n<li><p><strong>AFHTTPRequestSerializer</strong></p>\n<p><code>AFHTTPRequestSerializer</code> conforms to the <code>AFURLRequestSerialization</code> &amp; <code>AFURLResponseSerialization</code> protocols, offering a concrete base implementation of query string / URL form-encoded parameter serialization and default request headers, as well as response status code and content type validation.</p>\n<p>Any request or response serializer dealing with HTTP is encouraged to subclass <code>AFHTTPRequestSerializer</code> in order to ensure consistent default behavior.</p>\n</li>\n<li><p><strong>AFHTTPResponseSerializer</strong></p>\n<p><code>AFHTTPResponseSerializer</code> conforms to the <code>AFURLRequestSerialization</code> &amp; <code>AFURLResponseSerialization</code> protocols, offering a concrete base implementation of query string / URL form-encoded parameter serialization and default request headers, as well as response status code and content type validation.</p>\n<p>Any request or response serializer dealing with HTTP is encouraged to subclass <code>AFHTTPResponseSerializer</code> in order to ensure consistent default behavior.  </p>\n</li>\n</ul>\n<h3 id=\"AF-RequestSerializer\"><a href=\"#AF-RequestSerializer\" class=\"headerlink\" title=\"AF*RequestSerializer\"></a>AF*RequestSerializer</h3><ul>\n<li><p><strong>AFJSONRequestSerializer</strong></p>\n<p><code>AFJSONRequestSerializer</code> is a subclass of <code>AFHTTPRequestSerializer</code> that <strong>encodes parameters</strong> as <code>JSON</code> using <code>NSJSONSerialization</code>, setting the Content-Type of the encoded request to <code>application/json</code>.</p>\n</li>\n<li><p><strong>AFPropertyListRequestSerializer</strong></p>\n<p><code>AFPropertyListRequestSerializer</code> is a subclass of <code>AFHTTPRequestSerializer</code> that <strong>encodes parameters</strong> as <code>JSON</code> using <code>NSPropertyListSerializer</code>, setting the Content-Type of the encoded request to <code>application/x-plist</code>.</p>\n</li>\n</ul>\n<h3 id=\"AF-ResponseSerializer\"><a href=\"#AF-ResponseSerializer\" class=\"headerlink\" title=\"AF*ResponseSerializer\"></a>AF*ResponseSerializer</h3><ul>\n<li><p><strong>AFPropertyListResponseSerializer</strong></p>\n<p><code>AFPropertyListResponseSerializer</code> is a subclass of <code>AFHTTPResponseSerializer</code> that validates and decodes <code>XML</code> responses as an <code>NSXMLDocument</code> objects.</p>\n<p>By default, <code>AFPropertyListResponseSerializer</code> accepts the following <code>MIME</code> types:</p>\n<pre><code>- application/x-plist\n</code></pre></li>\n<li><p><strong>AFXMLParserResponseSerializer</strong></p>\n<p><code>AFXMLParserResponseSerializer</code> is a subclass of <code>AFHTTPResponseSerializer</code> that validates and decodes <code>XML</code> responses as an <code>NSXMLParser</code> objects.</p>\n<p>By default, <code>AFXMLParserResponseSerializer</code> accepts the following <code>MIME</code> types, which includes the official standard, application/xml, as well as other commonly-used types:</p>\n<pre><code>- application/xml\n- text/xml   \n</code></pre></li>\n<li><p><strong>AFXMLDocumentResponseSerializer</strong></p>\n<p><code>AFXMLDocumentResponseSerializer</code> is a subclass of <code>AFHTTPResponseSerializer</code> that validates and decodes <code>XML</code> responses as an <code>NSXMLDocument</code> objects.</p>\n<p>By default, <code>AFXMLDocumentResponseSerializer</code> accepts the following <code>MIME</code> types, which includes the official standard, application/xml, as well as other commonly-used types:</p>\n<pre><code>- application/xml\n- text/xml     \n</code></pre></li>\n<li><p><strong>AFJSONResponseSerializer</strong></p>\n<p><code>AFJSONResponseSerializer</code> is a subclass of <code>AFHTTPResponseSerializer</code> that validates and decodes <code>JSON</code> responses.</p>\n<p>By default, <code>AFJSONResponseSerializer</code> accepts the following <code>MIME</code> types, which includes the official standard, application/json, as well as other commonly-used types:</p>\n<pre><code>- application/json\n- text/json\n- text/javascript\n</code></pre></li>\n<li><p><strong>AFImageResponseSerializer</strong></p>\n<p><code>AFImageResponseSerializer</code> is a subclass of <code>AFHTTPResponseSerializer</code> that validates and decodes <code>image</code> responses.</p>\n<p>By default, <code>AFImageResponseSerializer</code> accepts the following <code>MIME</code> types, which correspond to the image formats supported by UIImage or NSImage:</p>\n<pre><code>- image/tiff\n- image/jpeg\n- image/gif\n- image/png\n- image/ico\n- image/x-icon\n- image/bmp\n- image/x-bmp\n- image/x-xbitmap\n- image/x-win-bitmap\n</code></pre></li>\n</ul>\n<h2 id=\"开始剖析吧\"><a href=\"#开始剖析吧\" class=\"headerlink\" title=\"开始剖析吧\"></a>开始剖析吧</h2><h1 id=\"链接参考\"><a href=\"#链接参考\" class=\"headerlink\" title=\"链接参考\"></a>链接参考</h1><ul>\n<li><a href=\"http://cocoadocs.org/docsets/AFNetworking/3.0.4/\">AFNetworking 官方文档</a></li>\n<li><a href=\"http://csbzhixing.github.io/blog/2015/10/23/afnetworking-1/\">AFNetworking 学习笔记 1</a></li>\n</ul>\n"},{"title":"Git 查询远端分支","date":"2016-03-13T03:24:09.000Z","_content":"\n## 查询\n\n``` bash\n$ git branch -a\n* dev\n  master\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/changeCodeStruct\n  remotes/origin/dev\n  remotes/origin/master\n\n```\n","source":"_posts/Git-查询远端分支.md","raw":"title: Git 查询远端分支\ndate: 2016-03-13 11:24:09\ntags:\n- Git\n- branch\n- search\n---\n\n## 查询\n\n``` bash\n$ git branch -a\n* dev\n  master\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/changeCodeStruct\n  remotes/origin/dev\n  remotes/origin/master\n\n```\n","slug":"Git-查询远端分支","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzb10004pe3qqdy5i24x","content":"<h2 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch <span class=\"_\">-a</span></span><br><span class=\"line\">* dev</span><br><span class=\"line\">  master</span><br><span class=\"line\">  remotes/origin/HEAD -&gt; origin/master</span><br><span class=\"line\">  remotes/origin/changeCodeStruct</span><br><span class=\"line\">  remotes/origin/dev</span><br><span class=\"line\">  remotes/origin/master</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch <span class=\"_\">-a</span></span><br><span class=\"line\">* dev</span><br><span class=\"line\">  master</span><br><span class=\"line\">  remotes/origin/HEAD -&gt; origin/master</span><br><span class=\"line\">  remotes/origin/changeCodeStruct</span><br><span class=\"line\">  remotes/origin/dev</span><br><span class=\"line\">  remotes/origin/master</span><br></pre></td></tr></table></figure>\n"},{"title":"Git 获取远端分支","date":"2016-03-13T03:27:58.000Z","_content":"\n## 将远程分支信息获取到本地\n``` bash\n$ git fetch\n```\n\n## 将远程分支映射到本地\n``` bash\n$ git checkout -b changeCodeStruct_local origin/changeCodeStruct\nBranch changeCodeStruct_local set up to track remote branch changeCodeStruct from origin.\nSwitched to a new branch 'changeCodeStruct_local'\n$ git branch\n* changeCodeStruct_local\n  dev\n  master\n\n```\n\n## 结束\n\n这样就可以把远端的分支获取到了。\n","source":"_posts/Git-获取远端分支.md","raw":"title: Git 获取远端分支\ndate: 2016-03-13 11:27:58\ntags:\n- Git\n- fetch\n- checkout\n- branch\n---\n\n## 将远程分支信息获取到本地\n``` bash\n$ git fetch\n```\n\n## 将远程分支映射到本地\n``` bash\n$ git checkout -b changeCodeStruct_local origin/changeCodeStruct\nBranch changeCodeStruct_local set up to track remote branch changeCodeStruct from origin.\nSwitched to a new branch 'changeCodeStruct_local'\n$ git branch\n* changeCodeStruct_local\n  dev\n  master\n\n```\n\n## 结束\n\n这样就可以把远端的分支获取到了。\n","slug":"Git-获取远端分支","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzb30005pe3qwwrhlzga","content":"<h2 id=\"将远程分支信息获取到本地\"><a href=\"#将远程分支信息获取到本地\" class=\"headerlink\" title=\"将远程分支信息获取到本地\"></a>将远程分支信息获取到本地</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git fetch</span><br></pre></td></tr></table></figure>\n<h2 id=\"将远程分支映射到本地\"><a href=\"#将远程分支映射到本地\" class=\"headerlink\" title=\"将远程分支映射到本地\"></a>将远程分支映射到本地</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout -b changeCodeStruct_<span class=\"built_in\">local</span> origin/changeCodeStruct</span><br><span class=\"line\">Branch changeCodeStruct_<span class=\"built_in\">local</span> <span class=\"built_in\">set</span> up to track remote branch changeCodeStruct from origin.</span><br><span class=\"line\">Switched to a new branch <span class=\"string\">'changeCodeStruct_local'</span></span><br><span class=\"line\">$ git branch</span><br><span class=\"line\">* changeCodeStruct_<span class=\"built_in\">local</span></span><br><span class=\"line\">  dev</span><br><span class=\"line\">  master</span><br></pre></td></tr></table></figure>\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><p>这样就可以把远端的分支获取到了。</p>\n","excerpt":"","more":"<h2 id=\"将远程分支信息获取到本地\"><a href=\"#将远程分支信息获取到本地\" class=\"headerlink\" title=\"将远程分支信息获取到本地\"></a>将远程分支信息获取到本地</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git fetch</span><br></pre></td></tr></table></figure>\n<h2 id=\"将远程分支映射到本地\"><a href=\"#将远程分支映射到本地\" class=\"headerlink\" title=\"将远程分支映射到本地\"></a>将远程分支映射到本地</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout -b changeCodeStruct_<span class=\"built_in\">local</span> origin/changeCodeStruct</span><br><span class=\"line\">Branch changeCodeStruct_<span class=\"built_in\">local</span> <span class=\"built_in\">set</span> up to track remote branch changeCodeStruct from origin.</span><br><span class=\"line\">Switched to a new branch <span class=\"string\">'changeCodeStruct_local'</span></span><br><span class=\"line\">$ git branch</span><br><span class=\"line\">* changeCodeStruct_<span class=\"built_in\">local</span></span><br><span class=\"line\">  dev</span><br><span class=\"line\">  master</span><br></pre></td></tr></table></figure>\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><p>这样就可以把远端的分支获取到了。</p>\n"},{"title":"Git 安装","date":"2016-03-01T03:14:49.000Z","_content":"\n![](http://git-scm.com/images/logo@2x.png)\n> [Git 官网](http://git-scm.com/)\n\n---\n\n- [Mac 安装 Git](#mac)\n- [Windows 安装 Git](#windows)\n- [Linux 安装 Git](#linux)\n\n# <span id=\"mac\">Mac 安装 Git</span>\n\n## Mac 本身就有 Git 了\n\n```{bash}\n$ which git\n/usr/bin/git\n$ git --version\ngit version 2.5.4 (Apple Git-61)\n```\n\n## Mac 还没有安装 Git\n\n  **使用homebrew来安装 Git - command line**\n\n### 安装 homebrew\n - [安装 homebrew](http://brew.sh/),安装后\n\n ```{bash}\n $ which brew\n/usr/local/bin/brew\n$ brew --version\nHomebrew 0.9.5 (git revision e15a; last commit 2016-02-03)\n ```\n然后就安装好了。。。\n\n## Git 官网的方式安装\n![git](http://git-scm.com/images/logo@2x.png)\n[官方文档的方式安装 － http://git-scm.com/](http://git-scm.com/download/)\n\n---\n\n# <span id=\"windows\">Windows 安装 Git</span>\n\n## 1. 来源于[廖雪峰的Git教学网站](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000)\n> 实话实说，Windows是最烂的开发平台，如果不是开发Windows游戏或者在IE里调试页面，一般不推荐用Windows。不过，既然已经上了微软的贼船，也是有办法安装Git的。\n-- 来源于[廖雪峰的  Git 教学](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000)\n\nWindows下要使用很多Linux/Unix的工具时，需要Cygwin这样的模拟环境，Git也一样。Cygwin的安装和配置都比较复杂，就不建议你折腾了。不过，有高人已经把模拟环境和Git都打包好了，名叫msysgit，只需要下载一个单独的exe安装程序，其他什么也不用装，绝对好用。\n\nmsysgit是Windows版的Git，从http://msysgit.github.io/下载，然后按默认选项安装即可。\n\n安装完成后，在开始菜单里找到“Git”->“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！\n![image](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/git_install_1.jpeg?raw=true)\n安装完成后，还需要最后一步设置，在命令行输入：\n\n```{bash}\n$ git config --global user.name \"Your Name\"\n$ git config --global user.email \"email@example.com\"\n```\n\n因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。\n\n注意git config命令的--global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。\n\n## 2.官网的教学方法\n![image](http://git-scm.com/images/logo@2x.png)\n[下载链接](http://git-scm.com/download/win)\n\n[Git安装教程](http://jingyan.baidu.com/article/7f766dafba84f04101e1d0b0.html)\n\n\n# <span id=\"linux\">Linux 安装 Git</span>\n\n- 不同的版本有不同包管理工具\n- 我使用的是`Centos`\n\n**安装Git**\n```{bash}\n$ sudo yum install -y git //然后输入你的 password\n```\n**安装过程**\n```{bash}\nLoaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * base: mirrors.btte.net\n * extras: mirrors.pubyun.com\n * updates: mirrors.btte.net\nSetting up Install Process\nResolving Dependencies\n--> Running transaction check\n---> Package git.x86_64 0:1.7.1-3.el6_4.1 will be installed\n--> Processing Dependency: perl-Git = 1.7.1-3.el6_4.1 for package: git-1.7.1-3.el6_4.1.x86_64\n--> Processing Dependency: rsync for package: git-1.7.1-3.el6_4.1.x86_64\n--> Processing Dependency: perl(Git) for package: git-1.7.1-3.el6_4.1.x86_64\n--> Processing Dependency: perl(Error) for package: git-1.7.1-3.el6_4.1.x86_64\n--> Processing Dependency: openssh-clients for package: git-1.7.1-3.el6_4.1.x86_64\n--> Running transaction check\n---> Package openssh-clients.x86_64 0:5.3p1-112.el6_7 will be installed\n--> Processing Dependency: openssh = 5.3p1-112.el6_7 for package: openssh-clients-5.3p1-112.el6_7.x86_64\n--> Processing Dependency: libedit.so.0()(64bit) for package: openssh-clients-5.3p1-112.el6_7.x86_64\n---> Package perl-Error.noarch 1:0.17015-4.el6 will be installed\n---> Package perl-Git.noarch 0:1.7.1-3.el6_4.1 will be installed\n---> Package rsync.x86_64 0:3.0.6-12.el6 will be installed\n--> Running transaction check\n---> Package libedit.x86_64 0:2.11-4.20080712cvs.1.el6 will be installed\n---> Package openssh.x86_64 0:5.3p1-94.el6 will be updated\n--> Processing Dependency: openssh = 5.3p1-94.el6 for package: openssh-server-5.3p1-94.el6.x86_64\n---> Package openssh.x86_64 0:5.3p1-112.el6_7 will be an update\n--> Running transaction check\n---> Package openssh-server.x86_64 0:5.3p1-94.el6 will be updated\n---> Package openssh-server.x86_64 0:5.3p1-112.el6_7 will be an update\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n================================================================================\n Package             Arch       Version                       Repository   Size\n================================================================================\nInstalling:\n git                 x86_64     1.7.1-3.el6_4.1               base        4.6 M\nInstalling for dependencies:\n libedit             x86_64     2.11-4.20080712cvs.1.el6      base         74 k\n openssh-clients     x86_64     5.3p1-112.el6_7               updates     438 k\n perl-Error          noarch     1:0.17015-4.el6               base         29 k\n perl-Git            noarch     1.7.1-3.el6_4.1               base         28 k\n rsync               x86_64     3.0.6-12.el6                  base        335 k\nUpdating for dependencies:\n openssh             x86_64     5.3p1-112.el6_7               updates     274 k\n openssh-server      x86_64     5.3p1-112.el6_7               updates     324 k\n\nTransaction Summary\n================================================================================\nInstall       6 Package(s)\nUpgrade       2 Package(s)\n\nTotal download size: 6.1 M\nDownloading Packages:\n--------------------------------------------------------------------------------\nTotal                                           1.8 MB/s | 6.1 MB     00:03     \nRunning rpm_check_debug\nRunning Transaction Test\nTransaction Test Succeeded\nRunning Transaction\n\n  Updating   : openssh-5.3p1-112.el6_7.x86_64                              1/10\n\n  Installing : 1:perl-Error-0.17015-4.el6.noarch                           2/10\n\n  Installing : libedit-2.11-4.20080712cvs.1.el6.x86_64                     3/10\n\n  Installing : openssh-clients-5.3p1-112.el6_7.x86_64                      4/10\n\n  Installing : rsync-3.0.6-12.el6.x86_64                                   5/10\n\n  Installing : perl-Git-1.7.1-3.el6_4.1.noarch                             6/10\n\n  Installing : git-1.7.1-3.el6_4.1.x86_64                                  7/10\n\n  Updating   : openssh-server-5.3p1-112.el6_7.x86_64                       8/10\n\n  Cleanup    : openssh-server-5.3p1-94.el6.x86_64                          9/10\n\n  Cleanup    : openssh-5.3p1-94.el6.x86_64                                10/10\n\n  Verifying  : openssh-clients-5.3p1-112.el6_7.x86_64                      1/10\n\n  Verifying  : perl-Git-1.7.1-3.el6_4.1.noarch                             2/10\n\n  Verifying  : 1:perl-Error-0.17015-4.el6.noarch                           3/10\n\n  Verifying  : rsync-3.0.6-12.el6.x86_64                                   4/10\n\n  Verifying  : libedit-2.11-4.20080712cvs.1.el6.x86_64                     5/10\n\n  Verifying  : openssh-5.3p1-112.el6_7.x86_64                              6/10\n\n  Verifying  : git-1.7.1-3.el6_4.1.x86_64                                  7/10\n\n  Verifying  : openssh-server-5.3p1-112.el6_7.x86_64                       8/10\n\n  Verifying  : openssh-5.3p1-94.el6.x86_64                                 9/10\n\n  Verifying  : openssh-server-5.3p1-94.el6.x86_64                         10/10\n\nInstalled:\n  git.x86_64 0:1.7.1-3.el6_4.1                                                  \n\nDependency Installed:\n  libedit.x86_64 0:2.11-4.20080712cvs.1.el6                                     \n  openssh-clients.x86_64 0:5.3p1-112.el6_7                                      \n  perl-Error.noarch 1:0.17015-4.el6                                             \n  perl-Git.noarch 0:1.7.1-3.el6_4.1                                             \n  rsync.x86_64 0:3.0.6-12.el6                                                   \n\nDependency Updated:\n  openssh.x86_64 0:5.3p1-112.el6_7    openssh-server.x86_64 0:5.3p1-112.el6_7   \n\nComplete!\n\n```\n**安装完成后**\n\n```{bash}\n$ which git\n/usr/bin/git\n$ git --version\ngit version 1.7.1\n```\n**OK, 其他版本的Linux大概也就是这样的了**\n\n## 参考链接\n\n- [Homebrew](http://brew.sh/)\n- [http://git-scm.com/](http://git-scm.com/)\n- [廖雪峰的官方网站](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n- [git - 简易指南](http://www.bootcss.com/p/git-guide/)\n- [Git详解之一：Git起步](http://blog.jobbole.com/25775/)\n- [GIT](http://baike.baidu.com/link?url=IWINhIXDsfMCThAtC_aHb8bPWrwsgwBuZfwPzbGBjoOeOT6F6GYyTV8F4Jn4JnpP90laupdcCRcCn9z--V02mobrOnLMr2Q1H5h4aNJEfRC)\n- [推荐！手把手教你使用Git](http://blog.jobbole.com/78960/)\n- [如何在windows下安装GIT](http://jingyan.baidu.com/article/90895e0fb3495f64ed6b0b50.html)\n- [GitHub Guides](https://guides.github.com/activities/hello-world/)\n","source":"_posts/Git-安装.md","raw":"title: Git 安装\ndate: 2016-03-01 11:14:49\ntags:\n\n- Git\n- install\n- Mac\n- Windows\n- Linux\n\n---\n\n![](http://git-scm.com/images/logo@2x.png)\n> [Git 官网](http://git-scm.com/)\n\n---\n\n- [Mac 安装 Git](#mac)\n- [Windows 安装 Git](#windows)\n- [Linux 安装 Git](#linux)\n\n# <span id=\"mac\">Mac 安装 Git</span>\n\n## Mac 本身就有 Git 了\n\n```{bash}\n$ which git\n/usr/bin/git\n$ git --version\ngit version 2.5.4 (Apple Git-61)\n```\n\n## Mac 还没有安装 Git\n\n  **使用homebrew来安装 Git - command line**\n\n### 安装 homebrew\n - [安装 homebrew](http://brew.sh/),安装后\n\n ```{bash}\n $ which brew\n/usr/local/bin/brew\n$ brew --version\nHomebrew 0.9.5 (git revision e15a; last commit 2016-02-03)\n ```\n然后就安装好了。。。\n\n## Git 官网的方式安装\n![git](http://git-scm.com/images/logo@2x.png)\n[官方文档的方式安装 － http://git-scm.com/](http://git-scm.com/download/)\n\n---\n\n# <span id=\"windows\">Windows 安装 Git</span>\n\n## 1. 来源于[廖雪峰的Git教学网站](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000)\n> 实话实说，Windows是最烂的开发平台，如果不是开发Windows游戏或者在IE里调试页面，一般不推荐用Windows。不过，既然已经上了微软的贼船，也是有办法安装Git的。\n-- 来源于[廖雪峰的  Git 教学](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000)\n\nWindows下要使用很多Linux/Unix的工具时，需要Cygwin这样的模拟环境，Git也一样。Cygwin的安装和配置都比较复杂，就不建议你折腾了。不过，有高人已经把模拟环境和Git都打包好了，名叫msysgit，只需要下载一个单独的exe安装程序，其他什么也不用装，绝对好用。\n\nmsysgit是Windows版的Git，从http://msysgit.github.io/下载，然后按默认选项安装即可。\n\n安装完成后，在开始菜单里找到“Git”->“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！\n![image](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/git_install_1.jpeg?raw=true)\n安装完成后，还需要最后一步设置，在命令行输入：\n\n```{bash}\n$ git config --global user.name \"Your Name\"\n$ git config --global user.email \"email@example.com\"\n```\n\n因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。\n\n注意git config命令的--global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。\n\n## 2.官网的教学方法\n![image](http://git-scm.com/images/logo@2x.png)\n[下载链接](http://git-scm.com/download/win)\n\n[Git安装教程](http://jingyan.baidu.com/article/7f766dafba84f04101e1d0b0.html)\n\n\n# <span id=\"linux\">Linux 安装 Git</span>\n\n- 不同的版本有不同包管理工具\n- 我使用的是`Centos`\n\n**安装Git**\n```{bash}\n$ sudo yum install -y git //然后输入你的 password\n```\n**安装过程**\n```{bash}\nLoaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * base: mirrors.btte.net\n * extras: mirrors.pubyun.com\n * updates: mirrors.btte.net\nSetting up Install Process\nResolving Dependencies\n--> Running transaction check\n---> Package git.x86_64 0:1.7.1-3.el6_4.1 will be installed\n--> Processing Dependency: perl-Git = 1.7.1-3.el6_4.1 for package: git-1.7.1-3.el6_4.1.x86_64\n--> Processing Dependency: rsync for package: git-1.7.1-3.el6_4.1.x86_64\n--> Processing Dependency: perl(Git) for package: git-1.7.1-3.el6_4.1.x86_64\n--> Processing Dependency: perl(Error) for package: git-1.7.1-3.el6_4.1.x86_64\n--> Processing Dependency: openssh-clients for package: git-1.7.1-3.el6_4.1.x86_64\n--> Running transaction check\n---> Package openssh-clients.x86_64 0:5.3p1-112.el6_7 will be installed\n--> Processing Dependency: openssh = 5.3p1-112.el6_7 for package: openssh-clients-5.3p1-112.el6_7.x86_64\n--> Processing Dependency: libedit.so.0()(64bit) for package: openssh-clients-5.3p1-112.el6_7.x86_64\n---> Package perl-Error.noarch 1:0.17015-4.el6 will be installed\n---> Package perl-Git.noarch 0:1.7.1-3.el6_4.1 will be installed\n---> Package rsync.x86_64 0:3.0.6-12.el6 will be installed\n--> Running transaction check\n---> Package libedit.x86_64 0:2.11-4.20080712cvs.1.el6 will be installed\n---> Package openssh.x86_64 0:5.3p1-94.el6 will be updated\n--> Processing Dependency: openssh = 5.3p1-94.el6 for package: openssh-server-5.3p1-94.el6.x86_64\n---> Package openssh.x86_64 0:5.3p1-112.el6_7 will be an update\n--> Running transaction check\n---> Package openssh-server.x86_64 0:5.3p1-94.el6 will be updated\n---> Package openssh-server.x86_64 0:5.3p1-112.el6_7 will be an update\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n================================================================================\n Package             Arch       Version                       Repository   Size\n================================================================================\nInstalling:\n git                 x86_64     1.7.1-3.el6_4.1               base        4.6 M\nInstalling for dependencies:\n libedit             x86_64     2.11-4.20080712cvs.1.el6      base         74 k\n openssh-clients     x86_64     5.3p1-112.el6_7               updates     438 k\n perl-Error          noarch     1:0.17015-4.el6               base         29 k\n perl-Git            noarch     1.7.1-3.el6_4.1               base         28 k\n rsync               x86_64     3.0.6-12.el6                  base        335 k\nUpdating for dependencies:\n openssh             x86_64     5.3p1-112.el6_7               updates     274 k\n openssh-server      x86_64     5.3p1-112.el6_7               updates     324 k\n\nTransaction Summary\n================================================================================\nInstall       6 Package(s)\nUpgrade       2 Package(s)\n\nTotal download size: 6.1 M\nDownloading Packages:\n--------------------------------------------------------------------------------\nTotal                                           1.8 MB/s | 6.1 MB     00:03     \nRunning rpm_check_debug\nRunning Transaction Test\nTransaction Test Succeeded\nRunning Transaction\n\n  Updating   : openssh-5.3p1-112.el6_7.x86_64                              1/10\n\n  Installing : 1:perl-Error-0.17015-4.el6.noarch                           2/10\n\n  Installing : libedit-2.11-4.20080712cvs.1.el6.x86_64                     3/10\n\n  Installing : openssh-clients-5.3p1-112.el6_7.x86_64                      4/10\n\n  Installing : rsync-3.0.6-12.el6.x86_64                                   5/10\n\n  Installing : perl-Git-1.7.1-3.el6_4.1.noarch                             6/10\n\n  Installing : git-1.7.1-3.el6_4.1.x86_64                                  7/10\n\n  Updating   : openssh-server-5.3p1-112.el6_7.x86_64                       8/10\n\n  Cleanup    : openssh-server-5.3p1-94.el6.x86_64                          9/10\n\n  Cleanup    : openssh-5.3p1-94.el6.x86_64                                10/10\n\n  Verifying  : openssh-clients-5.3p1-112.el6_7.x86_64                      1/10\n\n  Verifying  : perl-Git-1.7.1-3.el6_4.1.noarch                             2/10\n\n  Verifying  : 1:perl-Error-0.17015-4.el6.noarch                           3/10\n\n  Verifying  : rsync-3.0.6-12.el6.x86_64                                   4/10\n\n  Verifying  : libedit-2.11-4.20080712cvs.1.el6.x86_64                     5/10\n\n  Verifying  : openssh-5.3p1-112.el6_7.x86_64                              6/10\n\n  Verifying  : git-1.7.1-3.el6_4.1.x86_64                                  7/10\n\n  Verifying  : openssh-server-5.3p1-112.el6_7.x86_64                       8/10\n\n  Verifying  : openssh-5.3p1-94.el6.x86_64                                 9/10\n\n  Verifying  : openssh-server-5.3p1-94.el6.x86_64                         10/10\n\nInstalled:\n  git.x86_64 0:1.7.1-3.el6_4.1                                                  \n\nDependency Installed:\n  libedit.x86_64 0:2.11-4.20080712cvs.1.el6                                     \n  openssh-clients.x86_64 0:5.3p1-112.el6_7                                      \n  perl-Error.noarch 1:0.17015-4.el6                                             \n  perl-Git.noarch 0:1.7.1-3.el6_4.1                                             \n  rsync.x86_64 0:3.0.6-12.el6                                                   \n\nDependency Updated:\n  openssh.x86_64 0:5.3p1-112.el6_7    openssh-server.x86_64 0:5.3p1-112.el6_7   \n\nComplete!\n\n```\n**安装完成后**\n\n```{bash}\n$ which git\n/usr/bin/git\n$ git --version\ngit version 1.7.1\n```\n**OK, 其他版本的Linux大概也就是这样的了**\n\n## 参考链接\n\n- [Homebrew](http://brew.sh/)\n- [http://git-scm.com/](http://git-scm.com/)\n- [廖雪峰的官方网站](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n- [git - 简易指南](http://www.bootcss.com/p/git-guide/)\n- [Git详解之一：Git起步](http://blog.jobbole.com/25775/)\n- [GIT](http://baike.baidu.com/link?url=IWINhIXDsfMCThAtC_aHb8bPWrwsgwBuZfwPzbGBjoOeOT6F6GYyTV8F4Jn4JnpP90laupdcCRcCn9z--V02mobrOnLMr2Q1H5h4aNJEfRC)\n- [推荐！手把手教你使用Git](http://blog.jobbole.com/78960/)\n- [如何在windows下安装GIT](http://jingyan.baidu.com/article/90895e0fb3495f64ed6b0b50.html)\n- [GitHub Guides](https://guides.github.com/activities/hello-world/)\n","slug":"Git-安装","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzb40007pe3qm8dqvggf","content":"<p><img src=\"http://git-scm.com/images/logo@2x.png\" alt=\"\"></p>\n<blockquote>\n<p><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"external\">Git 官网</a></p>\n</blockquote>\n<hr>\n<ul>\n<li><a href=\"#mac\">Mac 安装 Git</a></li>\n<li><a href=\"#windows\">Windows 安装 Git</a></li>\n<li><a href=\"#linux\">Linux 安装 Git</a></li>\n</ul>\n<h1 id=\"Mac-安装-Git\"><a href=\"#Mac-安装-Git\" class=\"headerlink\" title=\"Mac 安装 Git\"></a><span id=\"mac\">Mac 安装 Git</span></h1><h2 id=\"Mac-本身就有-Git-了\"><a href=\"#Mac-本身就有-Git-了\" class=\"headerlink\" title=\"Mac 本身就有 Git 了\"></a>Mac 本身就有 Git 了</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ which git</span><br><span class=\"line\">/usr/bin/git</span><br><span class=\"line\">$ git --version</span><br><span class=\"line\">git version 2.5.4 (Apple Git-61)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Mac-还没有安装-Git\"><a href=\"#Mac-还没有安装-Git\" class=\"headerlink\" title=\"Mac 还没有安装 Git\"></a>Mac 还没有安装 Git</h2><p>  <strong>使用homebrew来安装 Git - command line</strong></p>\n<h3 id=\"安装-homebrew\"><a href=\"#安装-homebrew\" class=\"headerlink\" title=\"安装 homebrew\"></a>安装 homebrew</h3><ul>\n<li><p><a href=\"http://brew.sh/\" target=\"_blank\" rel=\"external\">安装 homebrew</a>,安装后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> $ which brew</span><br><span class=\"line\">/usr/local/bin/brew</span><br><span class=\"line\">$ brew --version</span><br><span class=\"line\">Homebrew 0.9.5 (git revision e15a; last commit 2016-02-03)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>然后就安装好了。。。</p>\n<h2 id=\"Git-官网的方式安装\"><a href=\"#Git-官网的方式安装\" class=\"headerlink\" title=\"Git 官网的方式安装\"></a>Git 官网的方式安装</h2><p><img src=\"http://git-scm.com/images/logo@2x.png\" alt=\"git\"><br><a href=\"http://git-scm.com/download/\" target=\"_blank\" rel=\"external\">官方文档的方式安装 － http://git-scm.com/</a></p>\n<hr>\n<h1 id=\"Windows-安装-Git\"><a href=\"#Windows-安装-Git\" class=\"headerlink\" title=\"Windows 安装 Git\"></a><span id=\"windows\">Windows 安装 Git</span></h1><h2 id=\"1-来源于廖雪峰的Git教学网站\"><a href=\"#1-来源于廖雪峰的Git教学网站\" class=\"headerlink\" title=\"1. 来源于廖雪峰的Git教学网站\"></a>1. 来源于<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000\" target=\"_blank\" rel=\"external\">廖雪峰的Git教学网站</a></h2><blockquote>\n<p>实话实说，Windows是最烂的开发平台，如果不是开发Windows游戏或者在IE里调试页面，一般不推荐用Windows。不过，既然已经上了微软的贼船，也是有办法安装Git的。<br>– 来源于<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000\" target=\"_blank\" rel=\"external\">廖雪峰的  Git 教学</a></p>\n</blockquote>\n<p>Windows下要使用很多Linux/Unix的工具时，需要Cygwin这样的模拟环境，Git也一样。Cygwin的安装和配置都比较复杂，就不建议你折腾了。不过，有高人已经把模拟环境和Git都打包好了，名叫msysgit，只需要下载一个单独的exe安装程序，其他什么也不用装，绝对好用。</p>\n<p>msysgit是Windows版的Git，从<a href=\"http://msysgit.github.io/下载，然后按默认选项安装即可。\" target=\"_blank\" rel=\"external\">http://msysgit.github.io/下载，然后按默认选项安装即可。</a></p>\n<p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！<br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/git_install_1.jpeg?raw=true\" alt=\"image\"><br>安装完成后，还需要最后一步设置，在命令行输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name &quot;Your Name&quot;</span><br><span class=\"line\">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure>\n<p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。</p>\n<p>注意git config命令的–global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p>\n<h2 id=\"2-官网的教学方法\"><a href=\"#2-官网的教学方法\" class=\"headerlink\" title=\"2.官网的教学方法\"></a>2.官网的教学方法</h2><p><img src=\"http://git-scm.com/images/logo@2x.png\" alt=\"image\"><br><a href=\"http://git-scm.com/download/win\" target=\"_blank\" rel=\"external\">下载链接</a></p>\n<p><a href=\"http://jingyan.baidu.com/article/7f766dafba84f04101e1d0b0.html\" target=\"_blank\" rel=\"external\">Git安装教程</a></p>\n<h1 id=\"Linux-安装-Git\"><a href=\"#Linux-安装-Git\" class=\"headerlink\" title=\"Linux 安装 Git\"></a><span id=\"linux\">Linux 安装 Git</span></h1><ul>\n<li>不同的版本有不同包管理工具</li>\n<li>我使用的是<code>Centos</code></li>\n</ul>\n<p><strong>安装Git</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install -y git //然后输入你的 password</span><br></pre></td></tr></table></figure></p>\n<p><strong>安装过程</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Loaded plugins: fastestmirror</span><br><span class=\"line\">Loading mirror speeds from cached hostfile</span><br><span class=\"line\"> * base: mirrors.btte.net</span><br><span class=\"line\"> * extras: mirrors.pubyun.com</span><br><span class=\"line\"> * updates: mirrors.btte.net</span><br><span class=\"line\">Setting up Install Process</span><br><span class=\"line\">Resolving Dependencies</span><br><span class=\"line\">--&gt; Running transaction check</span><br><span class=\"line\">---&gt; Package git.x86_64 0:1.7.1-3.el6_4.1 will be installed</span><br><span class=\"line\">--&gt; Processing Dependency: perl-Git = 1.7.1-3.el6_4.1 for package: git-1.7.1-3.el6_4.1.x86_64</span><br><span class=\"line\">--&gt; Processing Dependency: rsync for package: git-1.7.1-3.el6_4.1.x86_64</span><br><span class=\"line\">--&gt; Processing Dependency: perl(Git) for package: git-1.7.1-3.el6_4.1.x86_64</span><br><span class=\"line\">--&gt; Processing Dependency: perl(Error) for package: git-1.7.1-3.el6_4.1.x86_64</span><br><span class=\"line\">--&gt; Processing Dependency: openssh-clients for package: git-1.7.1-3.el6_4.1.x86_64</span><br><span class=\"line\">--&gt; Running transaction check</span><br><span class=\"line\">---&gt; Package openssh-clients.x86_64 0:5.3p1-112.el6_7 will be installed</span><br><span class=\"line\">--&gt; Processing Dependency: openssh = 5.3p1-112.el6_7 for package: openssh-clients-5.3p1-112.el6_7.x86_64</span><br><span class=\"line\">--&gt; Processing Dependency: libedit.so.0()(64bit) for package: openssh-clients-5.3p1-112.el6_7.x86_64</span><br><span class=\"line\">---&gt; Package perl-Error.noarch 1:0.17015-4.el6 will be installed</span><br><span class=\"line\">---&gt; Package perl-Git.noarch 0:1.7.1-3.el6_4.1 will be installed</span><br><span class=\"line\">---&gt; Package rsync.x86_64 0:3.0.6-12.el6 will be installed</span><br><span class=\"line\">--&gt; Running transaction check</span><br><span class=\"line\">---&gt; Package libedit.x86_64 0:2.11-4.20080712cvs.1.el6 will be installed</span><br><span class=\"line\">---&gt; Package openssh.x86_64 0:5.3p1-94.el6 will be updated</span><br><span class=\"line\">--&gt; Processing Dependency: openssh = 5.3p1-94.el6 for package: openssh-server-5.3p1-94.el6.x86_64</span><br><span class=\"line\">---&gt; Package openssh.x86_64 0:5.3p1-112.el6_7 will be an update</span><br><span class=\"line\">--&gt; Running transaction check</span><br><span class=\"line\">---&gt; Package openssh-server.x86_64 0:5.3p1-94.el6 will be updated</span><br><span class=\"line\">---&gt; Package openssh-server.x86_64 0:5.3p1-112.el6_7 will be an update</span><br><span class=\"line\">--&gt; Finished Dependency Resolution</span><br><span class=\"line\"></span><br><span class=\"line\">Dependencies Resolved</span><br><span class=\"line\"></span><br><span class=\"line\">================================================================================</span><br><span class=\"line\"> Package             Arch       Version                       Repository   Size</span><br><span class=\"line\">================================================================================</span><br><span class=\"line\">Installing:</span><br><span class=\"line\"> git                 x86_64     1.7.1-3.el6_4.1               base        4.6 M</span><br><span class=\"line\">Installing for dependencies:</span><br><span class=\"line\"> libedit             x86_64     2.11-4.20080712cvs.1.el6      base         74 k</span><br><span class=\"line\"> openssh-clients     x86_64     5.3p1-112.el6_7               updates     438 k</span><br><span class=\"line\"> perl-Error          noarch     1:0.17015-4.el6               base         29 k</span><br><span class=\"line\"> perl-Git            noarch     1.7.1-3.el6_4.1               base         28 k</span><br><span class=\"line\"> rsync               x86_64     3.0.6-12.el6                  base        335 k</span><br><span class=\"line\">Updating for dependencies:</span><br><span class=\"line\"> openssh             x86_64     5.3p1-112.el6_7               updates     274 k</span><br><span class=\"line\"> openssh-server      x86_64     5.3p1-112.el6_7               updates     324 k</span><br><span class=\"line\"></span><br><span class=\"line\">Transaction Summary</span><br><span class=\"line\">================================================================================</span><br><span class=\"line\">Install       6 Package(s)</span><br><span class=\"line\">Upgrade       2 Package(s)</span><br><span class=\"line\"></span><br><span class=\"line\">Total download size: 6.1 M</span><br><span class=\"line\">Downloading Packages:</span><br><span class=\"line\">--------------------------------------------------------------------------------</span><br><span class=\"line\">Total                                           1.8 MB/s | 6.1 MB     00:03     </span><br><span class=\"line\">Running rpm_check_debug</span><br><span class=\"line\">Running Transaction Test</span><br><span class=\"line\">Transaction Test Succeeded</span><br><span class=\"line\">Running Transaction</span><br><span class=\"line\"></span><br><span class=\"line\">  Updating   : openssh-5.3p1-112.el6_7.x86_64                              1/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Installing : 1:perl-Error-0.17015-4.el6.noarch                           2/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Installing : libedit-2.11-4.20080712cvs.1.el6.x86_64                     3/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Installing : openssh-clients-5.3p1-112.el6_7.x86_64                      4/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Installing : rsync-3.0.6-12.el6.x86_64                                   5/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Installing : perl-Git-1.7.1-3.el6_4.1.noarch                             6/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Installing : git-1.7.1-3.el6_4.1.x86_64                                  7/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Updating   : openssh-server-5.3p1-112.el6_7.x86_64                       8/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Cleanup    : openssh-server-5.3p1-94.el6.x86_64                          9/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Cleanup    : openssh-5.3p1-94.el6.x86_64                                10/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : openssh-clients-5.3p1-112.el6_7.x86_64                      1/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : perl-Git-1.7.1-3.el6_4.1.noarch                             2/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : 1:perl-Error-0.17015-4.el6.noarch                           3/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : rsync-3.0.6-12.el6.x86_64                                   4/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : libedit-2.11-4.20080712cvs.1.el6.x86_64                     5/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : openssh-5.3p1-112.el6_7.x86_64                              6/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : git-1.7.1-3.el6_4.1.x86_64                                  7/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : openssh-server-5.3p1-112.el6_7.x86_64                       8/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : openssh-5.3p1-94.el6.x86_64                                 9/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : openssh-server-5.3p1-94.el6.x86_64                         10/10</span><br><span class=\"line\"></span><br><span class=\"line\">Installed:</span><br><span class=\"line\">  git.x86_64 0:1.7.1-3.el6_4.1                                                  </span><br><span class=\"line\"></span><br><span class=\"line\">Dependency Installed:</span><br><span class=\"line\">  libedit.x86_64 0:2.11-4.20080712cvs.1.el6                                     </span><br><span class=\"line\">  openssh-clients.x86_64 0:5.3p1-112.el6_7                                      </span><br><span class=\"line\">  perl-Error.noarch 1:0.17015-4.el6                                             </span><br><span class=\"line\">  perl-Git.noarch 0:1.7.1-3.el6_4.1                                             </span><br><span class=\"line\">  rsync.x86_64 0:3.0.6-12.el6                                                   </span><br><span class=\"line\"></span><br><span class=\"line\">Dependency Updated:</span><br><span class=\"line\">  openssh.x86_64 0:5.3p1-112.el6_7    openssh-server.x86_64 0:5.3p1-112.el6_7   </span><br><span class=\"line\"></span><br><span class=\"line\">Complete!</span><br></pre></td></tr></table></figure></p>\n<p><strong>安装完成后</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ which git</span><br><span class=\"line\">/usr/bin/git</span><br><span class=\"line\">$ git --version</span><br><span class=\"line\">git version 1.7.1</span><br></pre></td></tr></table></figure>\n<p><strong>OK, 其他版本的Linux大概也就是这样的了</strong></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://brew.sh/\" target=\"_blank\" rel=\"external\">Homebrew</a></li>\n<li><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"external\">http://git-scm.com/</a></li>\n<li><a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"external\">廖雪峰的官方网站</a></li>\n<li><a href=\"http://www.bootcss.com/p/git-guide/\" target=\"_blank\" rel=\"external\">git - 简易指南</a></li>\n<li><a href=\"http://blog.jobbole.com/25775/\" target=\"_blank\" rel=\"external\">Git详解之一：Git起步</a></li>\n<li><a href=\"http://baike.baidu.com/link?url=IWINhIXDsfMCThAtC_aHb8bPWrwsgwBuZfwPzbGBjoOeOT6F6GYyTV8F4Jn4JnpP90laupdcCRcCn9z--V02mobrOnLMr2Q1H5h4aNJEfRC\" target=\"_blank\" rel=\"external\">GIT</a></li>\n<li><a href=\"http://blog.jobbole.com/78960/\" target=\"_blank\" rel=\"external\">推荐！手把手教你使用Git</a></li>\n<li><a href=\"http://jingyan.baidu.com/article/90895e0fb3495f64ed6b0b50.html\" target=\"_blank\" rel=\"external\">如何在windows下安装GIT</a></li>\n<li><a href=\"https://guides.github.com/activities/hello-world/\" target=\"_blank\" rel=\"external\">GitHub Guides</a></li>\n</ul>\n","excerpt":"","more":"<p><img src=\"http://git-scm.com/images/logo@2x.png\" alt=\"\"></p>\n<blockquote>\n<p><a href=\"http://git-scm.com/\">Git 官网</a></p>\n</blockquote>\n<hr>\n<ul>\n<li><a href=\"#mac\">Mac 安装 Git</a></li>\n<li><a href=\"#windows\">Windows 安装 Git</a></li>\n<li><a href=\"#linux\">Linux 安装 Git</a></li>\n</ul>\n<h1 id=\"Mac-安装-Git\"><a href=\"#Mac-安装-Git\" class=\"headerlink\" title=\"Mac 安装 Git\"></a><span id=\"mac\">Mac 安装 Git</span></h1><h2 id=\"Mac-本身就有-Git-了\"><a href=\"#Mac-本身就有-Git-了\" class=\"headerlink\" title=\"Mac 本身就有 Git 了\"></a>Mac 本身就有 Git 了</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ which git</span><br><span class=\"line\">/usr/bin/git</span><br><span class=\"line\">$ git --version</span><br><span class=\"line\">git version 2.5.4 (Apple Git-61)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Mac-还没有安装-Git\"><a href=\"#Mac-还没有安装-Git\" class=\"headerlink\" title=\"Mac 还没有安装 Git\"></a>Mac 还没有安装 Git</h2><p>  <strong>使用homebrew来安装 Git - command line</strong></p>\n<h3 id=\"安装-homebrew\"><a href=\"#安装-homebrew\" class=\"headerlink\" title=\"安装 homebrew\"></a>安装 homebrew</h3><ul>\n<li><p><a href=\"http://brew.sh/\">安装 homebrew</a>,安装后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> $ which brew</span><br><span class=\"line\">/usr/local/bin/brew</span><br><span class=\"line\">$ brew --version</span><br><span class=\"line\">Homebrew 0.9.5 (git revision e15a; last commit 2016-02-03)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>然后就安装好了。。。</p>\n<h2 id=\"Git-官网的方式安装\"><a href=\"#Git-官网的方式安装\" class=\"headerlink\" title=\"Git 官网的方式安装\"></a>Git 官网的方式安装</h2><p><img src=\"http://git-scm.com/images/logo@2x.png\" alt=\"git\"><br><a href=\"http://git-scm.com/download/\">官方文档的方式安装 － http://git-scm.com/</a></p>\n<hr>\n<h1 id=\"Windows-安装-Git\"><a href=\"#Windows-安装-Git\" class=\"headerlink\" title=\"Windows 安装 Git\"></a><span id=\"windows\">Windows 安装 Git</span></h1><h2 id=\"1-来源于廖雪峰的Git教学网站\"><a href=\"#1-来源于廖雪峰的Git教学网站\" class=\"headerlink\" title=\"1. 来源于廖雪峰的Git教学网站\"></a>1. 来源于<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000\">廖雪峰的Git教学网站</a></h2><blockquote>\n<p>实话实说，Windows是最烂的开发平台，如果不是开发Windows游戏或者在IE里调试页面，一般不推荐用Windows。不过，既然已经上了微软的贼船，也是有办法安装Git的。<br>– 来源于<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000\">廖雪峰的  Git 教学</a></p>\n</blockquote>\n<p>Windows下要使用很多Linux/Unix的工具时，需要Cygwin这样的模拟环境，Git也一样。Cygwin的安装和配置都比较复杂，就不建议你折腾了。不过，有高人已经把模拟环境和Git都打包好了，名叫msysgit，只需要下载一个单独的exe安装程序，其他什么也不用装，绝对好用。</p>\n<p>msysgit是Windows版的Git，从<a href=\"http://msysgit.github.io/下载，然后按默认选项安装即可。\">http://msysgit.github.io/下载，然后按默认选项安装即可。</a></p>\n<p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！<br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/git_install_1.jpeg?raw=true\" alt=\"image\"><br>安装完成后，还需要最后一步设置，在命令行输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name &quot;Your Name&quot;</span><br><span class=\"line\">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure>\n<p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。</p>\n<p>注意git config命令的–global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p>\n<h2 id=\"2-官网的教学方法\"><a href=\"#2-官网的教学方法\" class=\"headerlink\" title=\"2.官网的教学方法\"></a>2.官网的教学方法</h2><p><img src=\"http://git-scm.com/images/logo@2x.png\" alt=\"image\"><br><a href=\"http://git-scm.com/download/win\">下载链接</a></p>\n<p><a href=\"http://jingyan.baidu.com/article/7f766dafba84f04101e1d0b0.html\">Git安装教程</a></p>\n<h1 id=\"Linux-安装-Git\"><a href=\"#Linux-安装-Git\" class=\"headerlink\" title=\"Linux 安装 Git\"></a><span id=\"linux\">Linux 安装 Git</span></h1><ul>\n<li>不同的版本有不同包管理工具</li>\n<li>我使用的是<code>Centos</code></li>\n</ul>\n<p><strong>安装Git</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install -y git //然后输入你的 password</span><br></pre></td></tr></table></figure></p>\n<p><strong>安装过程</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Loaded plugins: fastestmirror</span><br><span class=\"line\">Loading mirror speeds from cached hostfile</span><br><span class=\"line\"> * base: mirrors.btte.net</span><br><span class=\"line\"> * extras: mirrors.pubyun.com</span><br><span class=\"line\"> * updates: mirrors.btte.net</span><br><span class=\"line\">Setting up Install Process</span><br><span class=\"line\">Resolving Dependencies</span><br><span class=\"line\">--&gt; Running transaction check</span><br><span class=\"line\">---&gt; Package git.x86_64 0:1.7.1-3.el6_4.1 will be installed</span><br><span class=\"line\">--&gt; Processing Dependency: perl-Git = 1.7.1-3.el6_4.1 for package: git-1.7.1-3.el6_4.1.x86_64</span><br><span class=\"line\">--&gt; Processing Dependency: rsync for package: git-1.7.1-3.el6_4.1.x86_64</span><br><span class=\"line\">--&gt; Processing Dependency: perl(Git) for package: git-1.7.1-3.el6_4.1.x86_64</span><br><span class=\"line\">--&gt; Processing Dependency: perl(Error) for package: git-1.7.1-3.el6_4.1.x86_64</span><br><span class=\"line\">--&gt; Processing Dependency: openssh-clients for package: git-1.7.1-3.el6_4.1.x86_64</span><br><span class=\"line\">--&gt; Running transaction check</span><br><span class=\"line\">---&gt; Package openssh-clients.x86_64 0:5.3p1-112.el6_7 will be installed</span><br><span class=\"line\">--&gt; Processing Dependency: openssh = 5.3p1-112.el6_7 for package: openssh-clients-5.3p1-112.el6_7.x86_64</span><br><span class=\"line\">--&gt; Processing Dependency: libedit.so.0()(64bit) for package: openssh-clients-5.3p1-112.el6_7.x86_64</span><br><span class=\"line\">---&gt; Package perl-Error.noarch 1:0.17015-4.el6 will be installed</span><br><span class=\"line\">---&gt; Package perl-Git.noarch 0:1.7.1-3.el6_4.1 will be installed</span><br><span class=\"line\">---&gt; Package rsync.x86_64 0:3.0.6-12.el6 will be installed</span><br><span class=\"line\">--&gt; Running transaction check</span><br><span class=\"line\">---&gt; Package libedit.x86_64 0:2.11-4.20080712cvs.1.el6 will be installed</span><br><span class=\"line\">---&gt; Package openssh.x86_64 0:5.3p1-94.el6 will be updated</span><br><span class=\"line\">--&gt; Processing Dependency: openssh = 5.3p1-94.el6 for package: openssh-server-5.3p1-94.el6.x86_64</span><br><span class=\"line\">---&gt; Package openssh.x86_64 0:5.3p1-112.el6_7 will be an update</span><br><span class=\"line\">--&gt; Running transaction check</span><br><span class=\"line\">---&gt; Package openssh-server.x86_64 0:5.3p1-94.el6 will be updated</span><br><span class=\"line\">---&gt; Package openssh-server.x86_64 0:5.3p1-112.el6_7 will be an update</span><br><span class=\"line\">--&gt; Finished Dependency Resolution</span><br><span class=\"line\"></span><br><span class=\"line\">Dependencies Resolved</span><br><span class=\"line\"></span><br><span class=\"line\">================================================================================</span><br><span class=\"line\"> Package             Arch       Version                       Repository   Size</span><br><span class=\"line\">================================================================================</span><br><span class=\"line\">Installing:</span><br><span class=\"line\"> git                 x86_64     1.7.1-3.el6_4.1               base        4.6 M</span><br><span class=\"line\">Installing for dependencies:</span><br><span class=\"line\"> libedit             x86_64     2.11-4.20080712cvs.1.el6      base         74 k</span><br><span class=\"line\"> openssh-clients     x86_64     5.3p1-112.el6_7               updates     438 k</span><br><span class=\"line\"> perl-Error          noarch     1:0.17015-4.el6               base         29 k</span><br><span class=\"line\"> perl-Git            noarch     1.7.1-3.el6_4.1               base         28 k</span><br><span class=\"line\"> rsync               x86_64     3.0.6-12.el6                  base        335 k</span><br><span class=\"line\">Updating for dependencies:</span><br><span class=\"line\"> openssh             x86_64     5.3p1-112.el6_7               updates     274 k</span><br><span class=\"line\"> openssh-server      x86_64     5.3p1-112.el6_7               updates     324 k</span><br><span class=\"line\"></span><br><span class=\"line\">Transaction Summary</span><br><span class=\"line\">================================================================================</span><br><span class=\"line\">Install       6 Package(s)</span><br><span class=\"line\">Upgrade       2 Package(s)</span><br><span class=\"line\"></span><br><span class=\"line\">Total download size: 6.1 M</span><br><span class=\"line\">Downloading Packages:</span><br><span class=\"line\">--------------------------------------------------------------------------------</span><br><span class=\"line\">Total                                           1.8 MB/s | 6.1 MB     00:03     </span><br><span class=\"line\">Running rpm_check_debug</span><br><span class=\"line\">Running Transaction Test</span><br><span class=\"line\">Transaction Test Succeeded</span><br><span class=\"line\">Running Transaction</span><br><span class=\"line\"></span><br><span class=\"line\">  Updating   : openssh-5.3p1-112.el6_7.x86_64                              1/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Installing : 1:perl-Error-0.17015-4.el6.noarch                           2/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Installing : libedit-2.11-4.20080712cvs.1.el6.x86_64                     3/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Installing : openssh-clients-5.3p1-112.el6_7.x86_64                      4/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Installing : rsync-3.0.6-12.el6.x86_64                                   5/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Installing : perl-Git-1.7.1-3.el6_4.1.noarch                             6/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Installing : git-1.7.1-3.el6_4.1.x86_64                                  7/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Updating   : openssh-server-5.3p1-112.el6_7.x86_64                       8/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Cleanup    : openssh-server-5.3p1-94.el6.x86_64                          9/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Cleanup    : openssh-5.3p1-94.el6.x86_64                                10/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : openssh-clients-5.3p1-112.el6_7.x86_64                      1/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : perl-Git-1.7.1-3.el6_4.1.noarch                             2/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : 1:perl-Error-0.17015-4.el6.noarch                           3/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : rsync-3.0.6-12.el6.x86_64                                   4/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : libedit-2.11-4.20080712cvs.1.el6.x86_64                     5/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : openssh-5.3p1-112.el6_7.x86_64                              6/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : git-1.7.1-3.el6_4.1.x86_64                                  7/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : openssh-server-5.3p1-112.el6_7.x86_64                       8/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : openssh-5.3p1-94.el6.x86_64                                 9/10</span><br><span class=\"line\"></span><br><span class=\"line\">  Verifying  : openssh-server-5.3p1-94.el6.x86_64                         10/10</span><br><span class=\"line\"></span><br><span class=\"line\">Installed:</span><br><span class=\"line\">  git.x86_64 0:1.7.1-3.el6_4.1                                                  </span><br><span class=\"line\"></span><br><span class=\"line\">Dependency Installed:</span><br><span class=\"line\">  libedit.x86_64 0:2.11-4.20080712cvs.1.el6                                     </span><br><span class=\"line\">  openssh-clients.x86_64 0:5.3p1-112.el6_7                                      </span><br><span class=\"line\">  perl-Error.noarch 1:0.17015-4.el6                                             </span><br><span class=\"line\">  perl-Git.noarch 0:1.7.1-3.el6_4.1                                             </span><br><span class=\"line\">  rsync.x86_64 0:3.0.6-12.el6                                                   </span><br><span class=\"line\"></span><br><span class=\"line\">Dependency Updated:</span><br><span class=\"line\">  openssh.x86_64 0:5.3p1-112.el6_7    openssh-server.x86_64 0:5.3p1-112.el6_7   </span><br><span class=\"line\"></span><br><span class=\"line\">Complete!</span><br></pre></td></tr></table></figure></p>\n<p><strong>安装完成后</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ which git</span><br><span class=\"line\">/usr/bin/git</span><br><span class=\"line\">$ git --version</span><br><span class=\"line\">git version 1.7.1</span><br></pre></td></tr></table></figure>\n<p><strong>OK, 其他版本的Linux大概也就是这样的了</strong></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://brew.sh/\">Homebrew</a></li>\n<li><a href=\"http://git-scm.com/\">http://git-scm.com/</a></li>\n<li><a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰的官方网站</a></li>\n<li><a href=\"http://www.bootcss.com/p/git-guide/\">git - 简易指南</a></li>\n<li><a href=\"http://blog.jobbole.com/25775/\">Git详解之一：Git起步</a></li>\n<li><a href=\"http://baike.baidu.com/link?url=IWINhIXDsfMCThAtC_aHb8bPWrwsgwBuZfwPzbGBjoOeOT6F6GYyTV8F4Jn4JnpP90laupdcCRcCn9z--V02mobrOnLMr2Q1H5h4aNJEfRC\">GIT</a></li>\n<li><a href=\"http://blog.jobbole.com/78960/\">推荐！手把手教你使用Git</a></li>\n<li><a href=\"http://jingyan.baidu.com/article/90895e0fb3495f64ed6b0b50.html\">如何在windows下安装GIT</a></li>\n<li><a href=\"https://guides.github.com/activities/hello-world/\">GitHub Guides</a></li>\n</ul>\n"},{"title":"Github图片外链设置","date":"2016-02-29T12:58:30.000Z","_content":"\n> 尝试在 Github 存储图片，并设置外链提供博客享用\n\n# 目录\n1. [在Github上面设置图片外链的步骤](#steps)\n2. [参考链接](#reference)\n\n# <span id=\"steps\">在Github上面设置图片外链的步骤</span>\n\n1. **上传图片文件**\n  + ![上传好文件](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/git_upload_p_1.png?raw=true)\n  + ![确认图片的内容](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_2.png?raw=true)\n  **如果图片没有显示**\n  ![看这个行不行？](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_6.png?raw=true)\n2. **复制链接**\n  ![复制链接](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_3.png?raw=true)\n3. **外链效果**\n  ![链接图片效果](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_5.png?raw=true)\n4. **然后就是把这个链接放到你想要的地方就好了**\n\n# <span id=\"reference\">参考链接</span>\n\n- [免费实用的图片外链](http://inslow.com/picture-url/)\n- [利用github上传图片](http://fengaili.com/2013/09/08/image-jekyll/)\n- [Adding a file to a repository](https://help.github.com/articles/adding-a-file-to-a-repository/)\n","source":"_posts/Github图片外链设置.md","raw":"title: Github图片外链设置\ndate: 2016-02-29 20:58:30\ntags:\n\n- github\n- 图片外链\n\n---\n\n> 尝试在 Github 存储图片，并设置外链提供博客享用\n\n# 目录\n1. [在Github上面设置图片外链的步骤](#steps)\n2. [参考链接](#reference)\n\n# <span id=\"steps\">在Github上面设置图片外链的步骤</span>\n\n1. **上传图片文件**\n  + ![上传好文件](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/git_upload_p_1.png?raw=true)\n  + ![确认图片的内容](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_2.png?raw=true)\n  **如果图片没有显示**\n  ![看这个行不行？](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_6.png?raw=true)\n2. **复制链接**\n  ![复制链接](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_3.png?raw=true)\n3. **外链效果**\n  ![链接图片效果](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_5.png?raw=true)\n4. **然后就是把这个链接放到你想要的地方就好了**\n\n# <span id=\"reference\">参考链接</span>\n\n- [免费实用的图片外链](http://inslow.com/picture-url/)\n- [利用github上传图片](http://fengaili.com/2013/09/08/image-jekyll/)\n- [Adding a file to a repository](https://help.github.com/articles/adding-a-file-to-a-repository/)\n","slug":"Github图片外链设置","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzb70008pe3qoopyy9pt","content":"<blockquote>\n<p>尝试在 Github 存储图片，并设置外链提供博客享用</p>\n</blockquote>\n<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><ol>\n<li><a href=\"#steps\">在Github上面设置图片外链的步骤</a></li>\n<li><a href=\"#reference\">参考链接</a></li>\n</ol>\n<h1 id=\"在Github上面设置图片外链的步骤\"><a href=\"#在Github上面设置图片外链的步骤\" class=\"headerlink\" title=\"在Github上面设置图片外链的步骤\"></a><span id=\"steps\">在Github上面设置图片外链的步骤</span></h1><ol>\n<li><strong>上传图片文件</strong><ul>\n<li><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/git_upload_p_1.png?raw=true\" alt=\"上传好文件\"></li>\n<li><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_2.png?raw=true\" alt=\"确认图片的内容\"><br><strong>如果图片没有显示</strong><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_6.png?raw=true\" alt=\"看这个行不行？\"></li>\n</ul>\n</li>\n<li><strong>复制链接</strong><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_3.png?raw=true\" alt=\"复制链接\"></li>\n<li><strong>外链效果</strong><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_5.png?raw=true\" alt=\"链接图片效果\"></li>\n<li><strong>然后就是把这个链接放到你想要的地方就好了</strong></li>\n</ol>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a><span id=\"reference\">参考链接</span></h1><ul>\n<li><a href=\"http://inslow.com/picture-url/\" target=\"_blank\" rel=\"external\">免费实用的图片外链</a></li>\n<li><a href=\"http://fengaili.com/2013/09/08/image-jekyll/\" target=\"_blank\" rel=\"external\">利用github上传图片</a></li>\n<li><a href=\"https://help.github.com/articles/adding-a-file-to-a-repository/\" target=\"_blank\" rel=\"external\">Adding a file to a repository</a></li>\n</ul>\n","excerpt":"","more":"<blockquote>\n<p>尝试在 Github 存储图片，并设置外链提供博客享用</p>\n</blockquote>\n<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><ol>\n<li><a href=\"#steps\">在Github上面设置图片外链的步骤</a></li>\n<li><a href=\"#reference\">参考链接</a></li>\n</ol>\n<h1 id=\"在Github上面设置图片外链的步骤\"><a href=\"#在Github上面设置图片外链的步骤\" class=\"headerlink\" title=\"在Github上面设置图片外链的步骤\"></a><span id=\"steps\">在Github上面设置图片外链的步骤</span></h1><ol>\n<li><strong>上传图片文件</strong><ul>\n<li><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/git_upload_p_1.png?raw=true\" alt=\"上传好文件\"></li>\n<li><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_2.png?raw=true\" alt=\"确认图片的内容\"><br><strong>如果图片没有显示</strong><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_6.png?raw=true\" alt=\"看这个行不行？\"></li>\n</ul>\n</li>\n<li><strong>复制链接</strong><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_3.png?raw=true\" alt=\"复制链接\"></li>\n<li><strong>外链效果</strong><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/github_picture_p_5.png?raw=true\" alt=\"链接图片效果\"></li>\n<li><strong>然后就是把这个链接放到你想要的地方就好了</strong></li>\n</ol>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a><span id=\"reference\">参考链接</span></h1><ul>\n<li><a href=\"http://inslow.com/picture-url/\">免费实用的图片外链</a></li>\n<li><a href=\"http://fengaili.com/2013/09/08/image-jekyll/\">利用github上传图片</a></li>\n<li><a href=\"https://help.github.com/articles/adding-a-file-to-a-repository/\">Adding a file to a repository</a></li>\n</ul>\n"},{"title":"IOS Key-Value Code 的基本操作","date":"2016-03-13T01:45:24.000Z","_content":"## 简单说一下\n\n  键值编码必须的方法在非正式协议 `NSKeyValueCoding` 中声明 `<Foundation/NSKeyValueCoding.h>`\n  默认在 `NSObject` 中实现。\n\n  这样我们可以不用通过访问器去访问和设置属性。\n\n  我们可以通过`属性的字符串名称`去 **访问** 和 **设置** 它。\n\n---\n\n## 两个方法\n\n  ``` java\n\n   /**\n   返回表示属性的键字符串相应的值，如果没有将会调用 valueForUndefinedKey: 的方法。\n   @ param key 属性的键字符串\n   */\n   - (id) valueForKey:(NSString *) key\n\n   /**\n   设置键字符串对应的值为value，如果不能将会调用方法 setValue:ForUndefinedKey:\n\n   @param value 要设置的值\n   @param key 属性的键字符串\n   */\n   - (id) setValue: (id)value\n            forKey: (NSString *) key\n\n  ```\n\n---\n\n## 简单的实验证明\n\n### 代码例子\n  ``` java\n  #import <Foundation/Foundation.h>\n\n  @interface Person: NSObject // Use ARC\n  {\n      NSString *name; // Person 的 name 属性\n      NSString *email; // Person 的 email 属性\n      int age;\n  }\n  - (void)setName:(NSString *)aName;\n  - (NSString *)email;\n  @end\n\n  @implementation Person\n\n  - (void)setName:(NSString *)aName\n  {\n      NSLog(@\"Access: setName:\");\n      name = aName;\n  }\n\n  - (NSString *)email\n  {\n      NSLog(@\"Access: email:\");\n      return email;\n  }\n\n  @end\n\n  int main(void)\n  {\n\n      static NSString *keys[] = {@\"name\", @\"email\", @\"age\", nil};\n      @autoreleasepool {\n          id obj = [[Person alloc] init];\n\n          /* setValue:forKey: */\n          [obj setValue:@\"Taro\" forKey:@\"name\"];\n          [obj setValue:@\"tar@ryugu-jo\" forKey:@\"email\"];\n          [obj setValue:[NSNumber numberWithInt:16] forKey:@\"age\"];\n\n          /* valueForKey: */\n          for (int i=0; keys[i]; i++)\n               NSLog(@\"%@: %@\", keys[i], [obj valueForKey:keys[i]]);\n      }\n\n      return 0;\n  }\n\n  ```\n### 编译文件\n\n  ``` bash\n      $ clang kvcsimple.m -framework Foundation\n      $ ls\n      a.out\t\tkvcsimple.m\n  ```\n\n### 结果显示\n  ``` bash\n  $ ./a.out\n  2016-03-13 10:05:36.105 a.out[656:17248] Access: setName:\n  2016-03-13 10:05:36.106 a.out[656:17248] name: Taro\n  2016-03-13 10:05:36.106 a.out[656:17248] Access: email:\n  2016-03-13 10:05:36.106 a.out[656:17248] email: tar@ryugu-jo\n  2016-03-13 10:05:36.107 a.out[656:17248] age: 16\n  ```\n---\n","source":"_posts/IOS-Key-Value-Code-的基本操作.md","raw":"title: IOS Key-Value Code 的基本操作\ndate: 2016-03-13 09:45:24\ntags:\n - IOS\n - Key-Value\n - 编程\n - KVC\n\n---\n## 简单说一下\n\n  键值编码必须的方法在非正式协议 `NSKeyValueCoding` 中声明 `<Foundation/NSKeyValueCoding.h>`\n  默认在 `NSObject` 中实现。\n\n  这样我们可以不用通过访问器去访问和设置属性。\n\n  我们可以通过`属性的字符串名称`去 **访问** 和 **设置** 它。\n\n---\n\n## 两个方法\n\n  ``` java\n\n   /**\n   返回表示属性的键字符串相应的值，如果没有将会调用 valueForUndefinedKey: 的方法。\n   @ param key 属性的键字符串\n   */\n   - (id) valueForKey:(NSString *) key\n\n   /**\n   设置键字符串对应的值为value，如果不能将会调用方法 setValue:ForUndefinedKey:\n\n   @param value 要设置的值\n   @param key 属性的键字符串\n   */\n   - (id) setValue: (id)value\n            forKey: (NSString *) key\n\n  ```\n\n---\n\n## 简单的实验证明\n\n### 代码例子\n  ``` java\n  #import <Foundation/Foundation.h>\n\n  @interface Person: NSObject // Use ARC\n  {\n      NSString *name; // Person 的 name 属性\n      NSString *email; // Person 的 email 属性\n      int age;\n  }\n  - (void)setName:(NSString *)aName;\n  - (NSString *)email;\n  @end\n\n  @implementation Person\n\n  - (void)setName:(NSString *)aName\n  {\n      NSLog(@\"Access: setName:\");\n      name = aName;\n  }\n\n  - (NSString *)email\n  {\n      NSLog(@\"Access: email:\");\n      return email;\n  }\n\n  @end\n\n  int main(void)\n  {\n\n      static NSString *keys[] = {@\"name\", @\"email\", @\"age\", nil};\n      @autoreleasepool {\n          id obj = [[Person alloc] init];\n\n          /* setValue:forKey: */\n          [obj setValue:@\"Taro\" forKey:@\"name\"];\n          [obj setValue:@\"tar@ryugu-jo\" forKey:@\"email\"];\n          [obj setValue:[NSNumber numberWithInt:16] forKey:@\"age\"];\n\n          /* valueForKey: */\n          for (int i=0; keys[i]; i++)\n               NSLog(@\"%@: %@\", keys[i], [obj valueForKey:keys[i]]);\n      }\n\n      return 0;\n  }\n\n  ```\n### 编译文件\n\n  ``` bash\n      $ clang kvcsimple.m -framework Foundation\n      $ ls\n      a.out\t\tkvcsimple.m\n  ```\n\n### 结果显示\n  ``` bash\n  $ ./a.out\n  2016-03-13 10:05:36.105 a.out[656:17248] Access: setName:\n  2016-03-13 10:05:36.106 a.out[656:17248] name: Taro\n  2016-03-13 10:05:36.106 a.out[656:17248] Access: email:\n  2016-03-13 10:05:36.106 a.out[656:17248] email: tar@ryugu-jo\n  2016-03-13 10:05:36.107 a.out[656:17248] age: 16\n  ```\n---\n","slug":"IOS-Key-Value-Code-的基本操作","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzba0009pe3qkn2fqso7","content":"<h2 id=\"简单说一下\"><a href=\"#简单说一下\" class=\"headerlink\" title=\"简单说一下\"></a>简单说一下</h2><p>  键值编码必须的方法在非正式协议 <code>NSKeyValueCoding</code> 中声明 <code>&lt;Foundation/NSKeyValueCoding.h&gt;</code><br>  默认在 <code>NSObject</code> 中实现。</p>\n<p>  这样我们可以不用通过访问器去访问和设置属性。</p>\n<p>  我们可以通过<code>属性的字符串名称</code>去 <strong>访问</strong> 和 <strong>设置</strong> 它。</p>\n<hr>\n<h2 id=\"两个方法\"><a href=\"#两个方法\" class=\"headerlink\" title=\"两个方法\"></a>两个方法</h2>  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">返回表示属性的键字符串相应的值，如果没有将会调用 valueForUndefinedKey: 的方法。</span><br><span class=\"line\">@ param key 属性的键字符串</span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (id) valueForKey:(NSString *) key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">设置键字符串对应的值为value，如果不能将会调用方法 setValue:ForUndefinedKey:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"doctag\">@param</span> value 要设置的值</span><br><span class=\"line\"><span class=\"doctag\">@param</span> key 属性的键字符串</span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (id) setValue: (id)value</span><br><span class=\"line\">         forKey: (NSString *) key</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"简单的实验证明\"><a href=\"#简单的实验证明\" class=\"headerlink\" title=\"简单的实验证明\"></a>简单的实验证明</h2><h3 id=\"代码例子\"><a href=\"#代码例子\" class=\"headerlink\" title=\"代码例子\"></a>代码例子</h3>  <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#import &lt;Foundation/Foundation.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">@interface Person: NSObject // Use ARC</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSString *name; // Person 的 name 属性</span><br><span class=\"line\">    NSString *email; // Person 的 email 属性</span><br><span class=\"line\">    int age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (void)setName:(NSString *)aName;</span><br><span class=\"line\">- (NSString *)email;</span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">@implementation Person</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)setName:(NSString *)aName</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSLog(@\"Access: setName:\");</span><br><span class=\"line\">    name = aName;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (NSString *)email</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSLog(@\"Access: email:\");</span><br><span class=\"line\">    return email;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">int main(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    static NSString *keys[] = &#123;@\"name\", @\"email\", @\"age\", nil&#125;;</span><br><span class=\"line\">    @autoreleasepool &#123;</span><br><span class=\"line\">        id obj = [[Person alloc] init];</span><br><span class=\"line\"></span><br><span class=\"line\">        /* setValue:forKey: */</span><br><span class=\"line\">        [obj setValue:@\"Taro\" forKey:@\"name\"];</span><br><span class=\"line\">        [obj setValue:@\"tar@ryugu-jo\" forKey:@\"email\"];</span><br><span class=\"line\">        [obj setValue:[NSNumber numberWithInt:16] forKey:@\"age\"];</span><br><span class=\"line\"></span><br><span class=\"line\">        /* valueForKey: */</span><br><span class=\"line\">        for (int i=0; keys[i]; i++)</span><br><span class=\"line\">             NSLog(@\"%@: %@\", keys[i], [obj valueForKey:keys[i]]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"编译文件\"><a href=\"#编译文件\" class=\"headerlink\" title=\"编译文件\"></a>编译文件</h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ clang kvcsimple.m -framework Foundation</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">a.out\t\tkvcsimple.m</span><br></pre></td></tr></table></figure>\n<h3 id=\"结果显示\"><a href=\"#结果显示\" class=\"headerlink\" title=\"结果显示\"></a>结果显示</h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./a.out</span><br><span class=\"line\">2016-03-13 10:05:36.105 a.out[656:17248] Access: <span class=\"built_in\">set</span>Name:</span><br><span class=\"line\">2016-03-13 10:05:36.106 a.out[656:17248] name: Taro</span><br><span class=\"line\">2016-03-13 10:05:36.106 a.out[656:17248] Access: email:</span><br><span class=\"line\">2016-03-13 10:05:36.106 a.out[656:17248] email: tar@ryugu-jo</span><br><span class=\"line\">2016-03-13 10:05:36.107 a.out[656:17248] age: 16</span><br></pre></td></tr></table></figure>\n<hr>\n","excerpt":"","more":"<h2 id=\"简单说一下\"><a href=\"#简单说一下\" class=\"headerlink\" title=\"简单说一下\"></a>简单说一下</h2><p>  键值编码必须的方法在非正式协议 <code>NSKeyValueCoding</code> 中声明 <code>&lt;Foundation/NSKeyValueCoding.h&gt;</code><br>  默认在 <code>NSObject</code> 中实现。</p>\n<p>  这样我们可以不用通过访问器去访问和设置属性。</p>\n<p>  我们可以通过<code>属性的字符串名称</code>去 <strong>访问</strong> 和 <strong>设置</strong> 它。</p>\n<hr>\n<h2 id=\"两个方法\"><a href=\"#两个方法\" class=\"headerlink\" title=\"两个方法\"></a>两个方法</h2>  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">返回表示属性的键字符串相应的值，如果没有将会调用 valueForUndefinedKey: 的方法。</span><br><span class=\"line\">@ param key 属性的键字符串</span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (id) valueForKey:(NSString *) key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">设置键字符串对应的值为value，如果不能将会调用方法 setValue:ForUndefinedKey:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"doctag\">@param</span> value 要设置的值</span><br><span class=\"line\"><span class=\"doctag\">@param</span> key 属性的键字符串</span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (id) setValue: (id)value</span><br><span class=\"line\">         forKey: (NSString *) key</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"简单的实验证明\"><a href=\"#简单的实验证明\" class=\"headerlink\" title=\"简单的实验证明\"></a>简单的实验证明</h2><h3 id=\"代码例子\"><a href=\"#代码例子\" class=\"headerlink\" title=\"代码例子\"></a>代码例子</h3>  <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#import &lt;Foundation/Foundation.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">@interface Person: NSObject // Use ARC</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSString *name; // Person 的 name 属性</span><br><span class=\"line\">    NSString *email; // Person 的 email 属性</span><br><span class=\"line\">    int age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (void)setName:(NSString *)aName;</span><br><span class=\"line\">- (NSString *)email;</span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">@implementation Person</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)setName:(NSString *)aName</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSLog(@\"Access: setName:\");</span><br><span class=\"line\">    name = aName;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (NSString *)email</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSLog(@\"Access: email:\");</span><br><span class=\"line\">    return email;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">int main(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    static NSString *keys[] = &#123;@\"name\", @\"email\", @\"age\", nil&#125;;</span><br><span class=\"line\">    @autoreleasepool &#123;</span><br><span class=\"line\">        id obj = [[Person alloc] init];</span><br><span class=\"line\"></span><br><span class=\"line\">        /* setValue:forKey: */</span><br><span class=\"line\">        [obj setValue:@\"Taro\" forKey:@\"name\"];</span><br><span class=\"line\">        [obj setValue:@\"tar@ryugu-jo\" forKey:@\"email\"];</span><br><span class=\"line\">        [obj setValue:[NSNumber numberWithInt:16] forKey:@\"age\"];</span><br><span class=\"line\"></span><br><span class=\"line\">        /* valueForKey: */</span><br><span class=\"line\">        for (int i=0; keys[i]; i++)</span><br><span class=\"line\">             NSLog(@\"%@: %@\", keys[i], [obj valueForKey:keys[i]]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"编译文件\"><a href=\"#编译文件\" class=\"headerlink\" title=\"编译文件\"></a>编译文件</h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ clang kvcsimple.m -framework Foundation</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">a.out\t\tkvcsimple.m</span><br></pre></td></tr></table></figure>\n<h3 id=\"结果显示\"><a href=\"#结果显示\" class=\"headerlink\" title=\"结果显示\"></a>结果显示</h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./a.out</span><br><span class=\"line\">2016-03-13 10:05:36.105 a.out[656:17248] Access: <span class=\"built_in\">set</span>Name:</span><br><span class=\"line\">2016-03-13 10:05:36.106 a.out[656:17248] name: Taro</span><br><span class=\"line\">2016-03-13 10:05:36.106 a.out[656:17248] Access: email:</span><br><span class=\"line\">2016-03-13 10:05:36.106 a.out[656:17248] email: tar@ryugu-jo</span><br><span class=\"line\">2016-03-13 10:05:36.107 a.out[656:17248] age: 16</span><br></pre></td></tr></table></figure>\n<hr>\n"},{"title":"IOS_Location_After_8.0","date":"2016-02-25T14:23:55.000Z","_content":"\n# >>> IOS 定位失败 <<<\n\n# 目录\n[A - IOS 定位过程中没有任何反应](#A)\n\n[B - 现在我大概走一下流程](#B)\n\n[C - 问题出现了。。。。。。。。。。。](#C)\n\n[D - 开始解决问题](#D)\n\n[Warning](#Warning)\n\n\n# <span id=\"A\">A - IOS 定位过程中没有任何反应</span>\n> 在你很高兴的按照一些网上的教程设置好你的location之后，很不幸你却发现你的定位delegate并没有任何的响应。如果你使用button作为测试的时候，点击你的button，就是没有任何反应。\n\n如果不想了解前提，可以直接跳到 [问题的解决方案](#dealing)\n-----------------------------------------------------------\n\n# <span id=\"B\">B - 现在我大概走一下流程</span>\n\n## 设置好你的代码\n\\> ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_1.png)\n\n\\> ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_2.png)\n\n\\> ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_3.png)\n\n\\> ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_4.png)\n\n-------------------------------------------------------------\n\n# <span id=\"C\">C - 问题出现了。。。。。。。。。。。</span>\n## 1.高兴之后却发现定位竟然没有任何反应。。。坑死了 -\\_-!\n\n\n## 2.然后就是一堆问题的搜索\n\n![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_5.png)\n\n**然后就发现这些参考：**\n\n [iOS8中定位服务的变化(CLLocationManager协议方法不响应，无法回掉GPS方法，不出](http://my.oschina.net/zhhzhfya/blog/372653?p=1)\n [ios8.0下CLLocationManager定位服务需要授权了](http://blog.csdn.net/nogodoss/article/details/42268295)\n [iOS CLLocationManager定位,IOS8注意](http://www.2cto.com/kf/201504/393312.html)\n [iOS CLLocationManager定位](http://www.tuicool.com/articles/7JBRZn)\n [iOS8中定位服务的变化(CLLocationManager协议方法不响应，无法回掉GPS方法，不出现获取权限提示)](http://www.csdn123.com/html/topnews201408/70/4370.htm)\n\n **收获来啦**\n\n ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_6.png)\n\n## 3.然后定位到 `Location Awareness PG Introduction`\n\n 好多繁杂的搜索和过滤后，定位到了这个[Location and Maps Programming Guide](https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/LocationAwarenessPG/Introduction/Introduction.html)\n\n ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_7.png)\n\n 但是貌似没有发现 `8.0` 之后的说法\n\n------------------------------------------------------\n\n# <span id=\"D\">D - 开始解决问题</span>\n\n## 1.IOS 8.0 之后的改变\n\n 很多的说法就是在 `8.0` 之后对于这一些安全措施进行了很多的设置，所以在你使用之前，需要去显式的开启它。不知道是真还是假，等以后有时间我在这个，目前还找不到。\n\n 所以这个就先空白一下。。。。。不好意思！嘻嘻\n\n\n## 2.<span id=\"dealing\">问题的解决方案</span>\n\n> 好，既然问题有了症状，那么就在下药。。。。\n\n- 设置你的info.plist文件，在Surporting files 目录里面。\n\n- 加上两个 `Key - Value`\n\n  ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_8.png)\n\n- 在启动视图之前做好一些准备\n\n  ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_9.png)\n\n- 现在开始调试\n\n  ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_10.png)\n\n--------------------------------------------------------\n\n# E - Ok,我的定位也就 `working` 了, 你呢？\n\n# <span id=\"Warning\">Warning - 需要注意的事项</span>\n\n- 如果你没有设置那两个 `Key-Value`在 info.plist 文件里，授权提示还是会出现，只是效果和没有设置的差不多。\n\n- 然后呢，记得 `<CLLocationManagerDelegate>` 和 设置 `delegate` 。\n\n- 如果使用的是模拟器，那么按照上面的步骤还不行的话，是这重置一下模拟器，我就是这么干的，it working!\n","source":"_posts/IOS-Location-After-8-0.md","raw":"title: IOS_Location_After_8.0\ndate: 2016-02-25 22:23:55\ntags:\n- IOS\n- CLLocationManager\n- Location\n- Delegate\n---\n\n# >>> IOS 定位失败 <<<\n\n# 目录\n[A - IOS 定位过程中没有任何反应](#A)\n\n[B - 现在我大概走一下流程](#B)\n\n[C - 问题出现了。。。。。。。。。。。](#C)\n\n[D - 开始解决问题](#D)\n\n[Warning](#Warning)\n\n\n# <span id=\"A\">A - IOS 定位过程中没有任何反应</span>\n> 在你很高兴的按照一些网上的教程设置好你的location之后，很不幸你却发现你的定位delegate并没有任何的响应。如果你使用button作为测试的时候，点击你的button，就是没有任何反应。\n\n如果不想了解前提，可以直接跳到 [问题的解决方案](#dealing)\n-----------------------------------------------------------\n\n# <span id=\"B\">B - 现在我大概走一下流程</span>\n\n## 设置好你的代码\n\\> ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_1.png)\n\n\\> ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_2.png)\n\n\\> ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_3.png)\n\n\\> ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_4.png)\n\n-------------------------------------------------------------\n\n# <span id=\"C\">C - 问题出现了。。。。。。。。。。。</span>\n## 1.高兴之后却发现定位竟然没有任何反应。。。坑死了 -\\_-!\n\n\n## 2.然后就是一堆问题的搜索\n\n![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_5.png)\n\n**然后就发现这些参考：**\n\n [iOS8中定位服务的变化(CLLocationManager协议方法不响应，无法回掉GPS方法，不出](http://my.oschina.net/zhhzhfya/blog/372653?p=1)\n [ios8.0下CLLocationManager定位服务需要授权了](http://blog.csdn.net/nogodoss/article/details/42268295)\n [iOS CLLocationManager定位,IOS8注意](http://www.2cto.com/kf/201504/393312.html)\n [iOS CLLocationManager定位](http://www.tuicool.com/articles/7JBRZn)\n [iOS8中定位服务的变化(CLLocationManager协议方法不响应，无法回掉GPS方法，不出现获取权限提示)](http://www.csdn123.com/html/topnews201408/70/4370.htm)\n\n **收获来啦**\n\n ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_6.png)\n\n## 3.然后定位到 `Location Awareness PG Introduction`\n\n 好多繁杂的搜索和过滤后，定位到了这个[Location and Maps Programming Guide](https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/LocationAwarenessPG/Introduction/Introduction.html)\n\n ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_7.png)\n\n 但是貌似没有发现 `8.0` 之后的说法\n\n------------------------------------------------------\n\n# <span id=\"D\">D - 开始解决问题</span>\n\n## 1.IOS 8.0 之后的改变\n\n 很多的说法就是在 `8.0` 之后对于这一些安全措施进行了很多的设置，所以在你使用之前，需要去显式的开启它。不知道是真还是假，等以后有时间我在这个，目前还找不到。\n\n 所以这个就先空白一下。。。。。不好意思！嘻嘻\n\n\n## 2.<span id=\"dealing\">问题的解决方案</span>\n\n> 好，既然问题有了症状，那么就在下药。。。。\n\n- 设置你的info.plist文件，在Surporting files 目录里面。\n\n- 加上两个 `Key - Value`\n\n  ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_8.png)\n\n- 在启动视图之前做好一些准备\n\n  ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_9.png)\n\n- 现在开始调试\n\n  ![image](http://7xiwtw.com1.z0.glb.clouddn.com/code_10.png)\n\n--------------------------------------------------------\n\n# E - Ok,我的定位也就 `working` 了, 你呢？\n\n# <span id=\"Warning\">Warning - 需要注意的事项</span>\n\n- 如果你没有设置那两个 `Key-Value`在 info.plist 文件里，授权提示还是会出现，只是效果和没有设置的差不多。\n\n- 然后呢，记得 `<CLLocationManagerDelegate>` 和 设置 `delegate` 。\n\n- 如果使用的是模拟器，那么按照上面的步骤还不行的话，是这重置一下模拟器，我就是这么干的，it working!\n","slug":"IOS-Location-After-8-0","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzbc000cpe3qr68l68yt","content":"<h1 id=\"gt-gt-gt-IOS-定位失败-lt-lt-lt\"><a href=\"#gt-gt-gt-IOS-定位失败-lt-lt-lt\" class=\"headerlink\" title=\"&gt;&gt;&gt; IOS 定位失败 &lt;&lt;&lt;\"></a>&gt;&gt;&gt; IOS 定位失败 &lt;&lt;&lt;</h1><h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><p><a href=\"#A\">A - IOS 定位过程中没有任何反应</a></p>\n<p><a href=\"#B\">B - 现在我大概走一下流程</a></p>\n<p><a href=\"#C\">C - 问题出现了。。。。。。。。。。。</a></p>\n<p><a href=\"#D\">D - 开始解决问题</a></p>\n<p><a href=\"#Warning\">Warning</a></p>\n<h1 id=\"A-IOS-定位过程中没有任何反应\"><a href=\"#A-IOS-定位过程中没有任何反应\" class=\"headerlink\" title=\"A - IOS 定位过程中没有任何反应\"></a><span id=\"A\">A - IOS 定位过程中没有任何反应</span></h1><blockquote>\n<p>在你很高兴的按照一些网上的教程设置好你的location之后，很不幸你却发现你的定位delegate并没有任何的响应。如果你使用button作为测试的时候，点击你的button，就是没有任何反应。</p>\n</blockquote>\n<h2 id=\"如果不想了解前提，可以直接跳到-问题的解决方案\"><a href=\"#如果不想了解前提，可以直接跳到-问题的解决方案\" class=\"headerlink\" title=\"如果不想了解前提，可以直接跳到 问题的解决方案\"></a>如果不想了解前提，可以直接跳到 <a href=\"#dealing\">问题的解决方案</a></h2><h1 id=\"B-现在我大概走一下流程\"><a href=\"#B-现在我大概走一下流程\" class=\"headerlink\" title=\"B - 现在我大概走一下流程\"></a><span id=\"B\">B - 现在我大概走一下流程</span></h1><h2 id=\"设置好你的代码\"><a href=\"#设置好你的代码\" class=\"headerlink\" title=\"设置好你的代码\"></a>设置好你的代码</h2><p>> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_1.png\" alt=\"image\"></p>\n<p>> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_2.png\" alt=\"image\"></p>\n<p>> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_3.png\" alt=\"image\"></p>\n<p>> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_4.png\" alt=\"image\"></p>\n<hr>\n<h1 id=\"C-问题出现了。。。。。。。。。。。\"><a href=\"#C-问题出现了。。。。。。。。。。。\" class=\"headerlink\" title=\"C - 问题出现了。。。。。。。。。。。\"></a><span id=\"C\">C - 问题出现了。。。。。。。。。。。</span></h1><h2 id=\"1-高兴之后却发现定位竟然没有任何反应。。。坑死了\"><a href=\"#1-高兴之后却发现定位竟然没有任何反应。。。坑死了\" class=\"headerlink\" title=\"1.高兴之后却发现定位竟然没有任何反应。。。坑死了 -_-!\"></a>1.高兴之后却发现定位竟然没有任何反应。。。坑死了 -_-!</h2><h2 id=\"2-然后就是一堆问题的搜索\"><a href=\"#2-然后就是一堆问题的搜索\" class=\"headerlink\" title=\"2.然后就是一堆问题的搜索\"></a>2.然后就是一堆问题的搜索</h2><p><img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_5.png\" alt=\"image\"></p>\n<p><strong>然后就发现这些参考：</strong></p>\n<p> <a href=\"http://my.oschina.net/zhhzhfya/blog/372653?p=1\" target=\"_blank\" rel=\"external\">iOS8中定位服务的变化(CLLocationManager协议方法不响应，无法回掉GPS方法，不出</a><br> <a href=\"http://blog.csdn.net/nogodoss/article/details/42268295\" target=\"_blank\" rel=\"external\">ios8.0下CLLocationManager定位服务需要授权了</a><br> <a href=\"http://www.2cto.com/kf/201504/393312.html\" target=\"_blank\" rel=\"external\">iOS CLLocationManager定位,IOS8注意</a><br> <a href=\"http://www.tuicool.com/articles/7JBRZn\" target=\"_blank\" rel=\"external\">iOS CLLocationManager定位</a><br> <a href=\"http://www.csdn123.com/html/topnews201408/70/4370.htm\" target=\"_blank\" rel=\"external\">iOS8中定位服务的变化(CLLocationManager协议方法不响应，无法回掉GPS方法，不出现获取权限提示)</a></p>\n<p> <strong>收获来啦</strong></p>\n<p> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_6.png\" alt=\"image\"></p>\n<h2 id=\"3-然后定位到-Location-Awareness-PG-Introduction\"><a href=\"#3-然后定位到-Location-Awareness-PG-Introduction\" class=\"headerlink\" title=\"3.然后定位到 Location Awareness PG Introduction\"></a>3.然后定位到 <code>Location Awareness PG Introduction</code></h2><p> 好多繁杂的搜索和过滤后，定位到了这个<a href=\"https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/LocationAwarenessPG/Introduction/Introduction.html\" target=\"_blank\" rel=\"external\">Location and Maps Programming Guide</a></p>\n<p> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_7.png\" alt=\"image\"></p>\n<p> 但是貌似没有发现 <code>8.0</code> 之后的说法</p>\n<hr>\n<h1 id=\"D-开始解决问题\"><a href=\"#D-开始解决问题\" class=\"headerlink\" title=\"D - 开始解决问题\"></a><span id=\"D\">D - 开始解决问题</span></h1><h2 id=\"1-IOS-8-0-之后的改变\"><a href=\"#1-IOS-8-0-之后的改变\" class=\"headerlink\" title=\"1.IOS 8.0 之后的改变\"></a>1.IOS 8.0 之后的改变</h2><p> 很多的说法就是在 <code>8.0</code> 之后对于这一些安全措施进行了很多的设置，所以在你使用之前，需要去显式的开启它。不知道是真还是假，等以后有时间我在这个，目前还找不到。</p>\n<p> 所以这个就先空白一下。。。。。不好意思！嘻嘻</p>\n<h2 id=\"2-问题的解决方案\"><a href=\"#2-问题的解决方案\" class=\"headerlink\" title=\"2.问题的解决方案\"></a>2.<span id=\"dealing\">问题的解决方案</span></h2><blockquote>\n<p>好，既然问题有了症状，那么就在下药。。。。</p>\n</blockquote>\n<ul>\n<li><p>设置你的info.plist文件，在Surporting files 目录里面。</p>\n</li>\n<li><p>加上两个 <code>Key - Value</code></p>\n<p><img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_8.png\" alt=\"image\"></p>\n</li>\n<li><p>在启动视图之前做好一些准备</p>\n<p><img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_9.png\" alt=\"image\"></p>\n</li>\n<li><p>现在开始调试</p>\n<p><img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_10.png\" alt=\"image\"></p>\n</li>\n</ul>\n<hr>\n<h1 id=\"E-Ok-我的定位也就-working-了-你呢？\"><a href=\"#E-Ok-我的定位也就-working-了-你呢？\" class=\"headerlink\" title=\"E - Ok,我的定位也就 working 了, 你呢？\"></a>E - Ok,我的定位也就 <code>working</code> 了, 你呢？</h1><h1 id=\"Warning-需要注意的事项\"><a href=\"#Warning-需要注意的事项\" class=\"headerlink\" title=\"Warning - 需要注意的事项\"></a><span id=\"Warning\">Warning - 需要注意的事项</span></h1><ul>\n<li><p>如果你没有设置那两个 <code>Key-Value</code>在 info.plist 文件里，授权提示还是会出现，只是效果和没有设置的差不多。</p>\n</li>\n<li><p>然后呢，记得 <code>&lt;CLLocationManagerDelegate&gt;</code> 和 设置 <code>delegate</code> 。</p>\n</li>\n<li><p>如果使用的是模拟器，那么按照上面的步骤还不行的话，是这重置一下模拟器，我就是这么干的，it working!</p>\n</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"gt-gt-gt-IOS-定位失败-lt-lt-lt\"><a href=\"#gt-gt-gt-IOS-定位失败-lt-lt-lt\" class=\"headerlink\" title=\"&gt;&gt;&gt; IOS 定位失败 &lt;&lt;&lt;\"></a>&gt;&gt;&gt; IOS 定位失败 &lt;&lt;&lt;</h1><h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><p><a href=\"#A\">A - IOS 定位过程中没有任何反应</a></p>\n<p><a href=\"#B\">B - 现在我大概走一下流程</a></p>\n<p><a href=\"#C\">C - 问题出现了。。。。。。。。。。。</a></p>\n<p><a href=\"#D\">D - 开始解决问题</a></p>\n<p><a href=\"#Warning\">Warning</a></p>\n<h1 id=\"A-IOS-定位过程中没有任何反应\"><a href=\"#A-IOS-定位过程中没有任何反应\" class=\"headerlink\" title=\"A - IOS 定位过程中没有任何反应\"></a><span id=\"A\">A - IOS 定位过程中没有任何反应</span></h1><blockquote>\n<p>在你很高兴的按照一些网上的教程设置好你的location之后，很不幸你却发现你的定位delegate并没有任何的响应。如果你使用button作为测试的时候，点击你的button，就是没有任何反应。</p>\n</blockquote>\n<h2 id=\"如果不想了解前提，可以直接跳到-问题的解决方案\"><a href=\"#如果不想了解前提，可以直接跳到-问题的解决方案\" class=\"headerlink\" title=\"如果不想了解前提，可以直接跳到 问题的解决方案\"></a>如果不想了解前提，可以直接跳到 <a href=\"#dealing\">问题的解决方案</a></h2><h1 id=\"B-现在我大概走一下流程\"><a href=\"#B-现在我大概走一下流程\" class=\"headerlink\" title=\"B - 现在我大概走一下流程\"></a><span id=\"B\">B - 现在我大概走一下流程</span></h1><h2 id=\"设置好你的代码\"><a href=\"#设置好你的代码\" class=\"headerlink\" title=\"设置好你的代码\"></a>设置好你的代码</h2><p>> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_1.png\" alt=\"image\"></p>\n<p>> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_2.png\" alt=\"image\"></p>\n<p>> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_3.png\" alt=\"image\"></p>\n<p>> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_4.png\" alt=\"image\"></p>\n<hr>\n<h1 id=\"C-问题出现了。。。。。。。。。。。\"><a href=\"#C-问题出现了。。。。。。。。。。。\" class=\"headerlink\" title=\"C - 问题出现了。。。。。。。。。。。\"></a><span id=\"C\">C - 问题出现了。。。。。。。。。。。</span></h1><h2 id=\"1-高兴之后却发现定位竟然没有任何反应。。。坑死了\"><a href=\"#1-高兴之后却发现定位竟然没有任何反应。。。坑死了\" class=\"headerlink\" title=\"1.高兴之后却发现定位竟然没有任何反应。。。坑死了 -_-!\"></a>1.高兴之后却发现定位竟然没有任何反应。。。坑死了 -_-!</h2><h2 id=\"2-然后就是一堆问题的搜索\"><a href=\"#2-然后就是一堆问题的搜索\" class=\"headerlink\" title=\"2.然后就是一堆问题的搜索\"></a>2.然后就是一堆问题的搜索</h2><p><img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_5.png\" alt=\"image\"></p>\n<p><strong>然后就发现这些参考：</strong></p>\n<p> <a href=\"http://my.oschina.net/zhhzhfya/blog/372653?p=1\">iOS8中定位服务的变化(CLLocationManager协议方法不响应，无法回掉GPS方法，不出</a><br> <a href=\"http://blog.csdn.net/nogodoss/article/details/42268295\">ios8.0下CLLocationManager定位服务需要授权了</a><br> <a href=\"http://www.2cto.com/kf/201504/393312.html\">iOS CLLocationManager定位,IOS8注意</a><br> <a href=\"http://www.tuicool.com/articles/7JBRZn\">iOS CLLocationManager定位</a><br> <a href=\"http://www.csdn123.com/html/topnews201408/70/4370.htm\">iOS8中定位服务的变化(CLLocationManager协议方法不响应，无法回掉GPS方法，不出现获取权限提示)</a></p>\n<p> <strong>收获来啦</strong></p>\n<p> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_6.png\" alt=\"image\"></p>\n<h2 id=\"3-然后定位到-Location-Awareness-PG-Introduction\"><a href=\"#3-然后定位到-Location-Awareness-PG-Introduction\" class=\"headerlink\" title=\"3.然后定位到 Location Awareness PG Introduction\"></a>3.然后定位到 <code>Location Awareness PG Introduction</code></h2><p> 好多繁杂的搜索和过滤后，定位到了这个<a href=\"https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/LocationAwarenessPG/Introduction/Introduction.html\">Location and Maps Programming Guide</a></p>\n<p> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_7.png\" alt=\"image\"></p>\n<p> 但是貌似没有发现 <code>8.0</code> 之后的说法</p>\n<hr>\n<h1 id=\"D-开始解决问题\"><a href=\"#D-开始解决问题\" class=\"headerlink\" title=\"D - 开始解决问题\"></a><span id=\"D\">D - 开始解决问题</span></h1><h2 id=\"1-IOS-8-0-之后的改变\"><a href=\"#1-IOS-8-0-之后的改变\" class=\"headerlink\" title=\"1.IOS 8.0 之后的改变\"></a>1.IOS 8.0 之后的改变</h2><p> 很多的说法就是在 <code>8.0</code> 之后对于这一些安全措施进行了很多的设置，所以在你使用之前，需要去显式的开启它。不知道是真还是假，等以后有时间我在这个，目前还找不到。</p>\n<p> 所以这个就先空白一下。。。。。不好意思！嘻嘻</p>\n<h2 id=\"2-问题的解决方案\"><a href=\"#2-问题的解决方案\" class=\"headerlink\" title=\"2.问题的解决方案\"></a>2.<span id=\"dealing\">问题的解决方案</span></h2><blockquote>\n<p>好，既然问题有了症状，那么就在下药。。。。</p>\n</blockquote>\n<ul>\n<li><p>设置你的info.plist文件，在Surporting files 目录里面。</p>\n</li>\n<li><p>加上两个 <code>Key - Value</code></p>\n<p><img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_8.png\" alt=\"image\"></p>\n</li>\n<li><p>在启动视图之前做好一些准备</p>\n<p><img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_9.png\" alt=\"image\"></p>\n</li>\n<li><p>现在开始调试</p>\n<p><img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/code_10.png\" alt=\"image\"></p>\n</li>\n</ul>\n<hr>\n<h1 id=\"E-Ok-我的定位也就-working-了-你呢？\"><a href=\"#E-Ok-我的定位也就-working-了-你呢？\" class=\"headerlink\" title=\"E - Ok,我的定位也就 working 了, 你呢？\"></a>E - Ok,我的定位也就 <code>working</code> 了, 你呢？</h1><h1 id=\"Warning-需要注意的事项\"><a href=\"#Warning-需要注意的事项\" class=\"headerlink\" title=\"Warning - 需要注意的事项\"></a><span id=\"Warning\">Warning - 需要注意的事项</span></h1><ul>\n<li><p>如果你没有设置那两个 <code>Key-Value</code>在 info.plist 文件里，授权提示还是会出现，只是效果和没有设置的差不多。</p>\n</li>\n<li><p>然后呢，记得 <code>&lt;CLLocationManagerDelegate&gt;</code> 和 设置 <code>delegate</code> 。</p>\n</li>\n<li><p>如果使用的是模拟器，那么按照上面的步骤还不行的话，是这重置一下模拟器，我就是这么干的，it working!</p>\n</li>\n</ul>\n"},{"title":"KVC 字典对象和数组对象的键值编码","date":"2016-03-13T15:00:49.000Z","_content":"\n## 字典对象的键值编码\n\n   `NSDictionary` 定义了两个方法\n\n   ``` java\n   /**\n   如果字符串不是以 @ 开头的，将会调用 objectForKey: ; 如果有 @ 开头的就会以剩余的字符串\n   作为键，调用超类方法 alueForKey:\n\n   */\n   - (id) valueForKey:(NSString *)key\n\n   /**\n   一般会调用 setObject:forKey: , value 为 nil 时，就会调用 removeObjectForKey: 删除\n   键对应的对象\n\n   */\n   - (void) setValue: (id)value\n              forKey:(NSString *)key\n   ```\n\n## 数组对象的键值编码\n\n   `NSArray` 和 `NSMutableArray` 以及 集合类 `NSSet` 和 `NSMutableSet` 也定义了两个方法\n   ``` java\n   /**\n   以 key 为参数，对于各个元素调用 valueForKey: 后返回数组，对各成员使用方法 valueForKey:,\n   当返回 nil 时，包含 NSNull 的实例。\n\n   */\n   - (id) valueForKey:(NSString *)key\n\n   /**\n   对所有的元素调用 setValue:forKey: . 需要注意的是集合对象本身不可以改变，也可以调用这个\n   方法\n\n   */\n   - (void) setValue: (id)value\n              forKey:(NSString *)key\n   ```\n","source":"_posts/KVC-字典对象和数组对象的键值编码.md","raw":"title: KVC 字典对象和数组对象的键值编码\ndate: 2016-03-13 23:00:49\ntags:\n- IOS\n- KVC\n- 字典\n- 数组\n- 键值编码\n\n---\n\n## 字典对象的键值编码\n\n   `NSDictionary` 定义了两个方法\n\n   ``` java\n   /**\n   如果字符串不是以 @ 开头的，将会调用 objectForKey: ; 如果有 @ 开头的就会以剩余的字符串\n   作为键，调用超类方法 alueForKey:\n\n   */\n   - (id) valueForKey:(NSString *)key\n\n   /**\n   一般会调用 setObject:forKey: , value 为 nil 时，就会调用 removeObjectForKey: 删除\n   键对应的对象\n\n   */\n   - (void) setValue: (id)value\n              forKey:(NSString *)key\n   ```\n\n## 数组对象的键值编码\n\n   `NSArray` 和 `NSMutableArray` 以及 集合类 `NSSet` 和 `NSMutableSet` 也定义了两个方法\n   ``` java\n   /**\n   以 key 为参数，对于各个元素调用 valueForKey: 后返回数组，对各成员使用方法 valueForKey:,\n   当返回 nil 时，包含 NSNull 的实例。\n\n   */\n   - (id) valueForKey:(NSString *)key\n\n   /**\n   对所有的元素调用 setValue:forKey: . 需要注意的是集合对象本身不可以改变，也可以调用这个\n   方法\n\n   */\n   - (void) setValue: (id)value\n              forKey:(NSString *)key\n   ```\n","slug":"KVC-字典对象和数组对象的键值编码","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzbe000epe3qxhpet7n0","content":"<h2 id=\"字典对象的键值编码\"><a href=\"#字典对象的键值编码\" class=\"headerlink\" title=\"字典对象的键值编码\"></a>字典对象的键值编码</h2><p>   <code>NSDictionary</code> 定义了两个方法</p>\n   <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">如果字符串不是以 @ 开头的，将会调用 objectForKey: ; 如果有 @ 开头的就会以剩余的字符串</span><br><span class=\"line\">作为键，调用超类方法 alueForKey:</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (id) valueForKey:(NSString *)key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">一般会调用 setObject:forKey: , value 为 nil 时，就会调用 removeObjectForKey: 删除</span><br><span class=\"line\">键对应的对象</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) setValue: (id)value</span><br><span class=\"line\">           forKey:(NSString *)key</span><br></pre></td></tr></table></figure>\n<h2 id=\"数组对象的键值编码\"><a href=\"#数组对象的键值编码\" class=\"headerlink\" title=\"数组对象的键值编码\"></a>数组对象的键值编码</h2><p>   <code>NSArray</code> 和 <code>NSMutableArray</code> 以及 集合类 <code>NSSet</code> 和 <code>NSMutableSet</code> 也定义了两个方法<br>   <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">以 key 为参数，对于各个元素调用 valueForKey: 后返回数组，对各成员使用方法 valueForKey:,</span><br><span class=\"line\">当返回 nil 时，包含 NSNull 的实例。</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (id) valueForKey:(NSString *)key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">对所有的元素调用 setValue:forKey: . 需要注意的是集合对象本身不可以改变，也可以调用这个</span><br><span class=\"line\">方法</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) setValue: (id)value</span><br><span class=\"line\">           forKey:(NSString *)key</span><br></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h2 id=\"字典对象的键值编码\"><a href=\"#字典对象的键值编码\" class=\"headerlink\" title=\"字典对象的键值编码\"></a>字典对象的键值编码</h2><p>   <code>NSDictionary</code> 定义了两个方法</p>\n   <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">如果字符串不是以 @ 开头的，将会调用 objectForKey: ; 如果有 @ 开头的就会以剩余的字符串</span><br><span class=\"line\">作为键，调用超类方法 alueForKey:</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (id) valueForKey:(NSString *)key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">一般会调用 setObject:forKey: , value 为 nil 时，就会调用 removeObjectForKey: 删除</span><br><span class=\"line\">键对应的对象</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) setValue: (id)value</span><br><span class=\"line\">           forKey:(NSString *)key</span><br></pre></td></tr></table></figure>\n<h2 id=\"数组对象的键值编码\"><a href=\"#数组对象的键值编码\" class=\"headerlink\" title=\"数组对象的键值编码\"></a>数组对象的键值编码</h2><p>   <code>NSArray</code> 和 <code>NSMutableArray</code> 以及 集合类 <code>NSSet</code> 和 <code>NSMutableSet</code> 也定义了两个方法<br>   <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">以 key 为参数，对于各个元素调用 valueForKey: 后返回数组，对各成员使用方法 valueForKey:,</span><br><span class=\"line\">当返回 nil 时，包含 NSNull 的实例。</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (id) valueForKey:(NSString *)key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">对所有的元素调用 setValue:forKey: . 需要注意的是集合对象本身不可以改变，也可以调用这个</span><br><span class=\"line\">方法</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) setValue: (id)value</span><br><span class=\"line\">           forKey:(NSString *)key</span><br></pre></td></tr></table></figure></p>\n"},{"title":"IOS_Storyboard","date":"2016-03-02T12:13:16.000Z","_content":"\n## 简介\n\n- 简单介绍一下 `Storyboard` ，然后对其进行创建和配置，使得可以最干净(干净的意思是没有任何代码的实现，类似于什么都没有做的一个View)的启动。\n- 然后理解 `segue` ,对其进行使用\n- 使用 `segue` 中去传递数据\n- 最后是对于 `Storyboard` 的一些讨论\n\n## Index\n\n1. [Storyboard](#intro)\n2. [创建和配置 Storyboard](#start)\n3. [Segue](#segue)\n4. [传递数据](#data)\n5. [讨论 Storyboard](#consum)\n\n## <span id=\"intro\">Storyboard</span>\n\n **Storyboard is IOS 的一个特性功能， 它可以让你所有的初始化和布局视图控制器(View Controller)在一个类似于 XIB 的文件中。**\n\n `StoryBoard` 是苹果在 `iOS 5` 中引入的新技术方案，目的是给纷繁复杂的 `nib`、`xib` 们一个温暖的家，让他们之间的关系更直观地展示出来，并提供了一种新的页面间跳转方式 segue。\n\n `StoryBoard` 的本质是一个 `XML` 文件，**描述了若干窗体、组件、Auto Layout 约束等关键信息**。\n\n 苹果官方是推荐我们将所有的UI都使用Storyboard去搭建，Storyboard也是一个很成熟的工具了。使用Storyboard去搭建所有界面，我们可以很迅捷地搭建出复杂的界面，也就是说能为我们节省大量的时间。我们还可以很直观地看出各个界面之间的关系，修改起来也很方便。将来如果遇到需要作修改的地方，我们只需要找到相对应的Storyboard就可以了，比起以前来说，快捷了不少。\n\n\n## <span id=\"start\">创建和配置 Storyboard</span>\n\n### 1.创建一个空工程\n\\>\n  ![p_1](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_1.png?raw=true)\n\\>\n  ![p_2](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_2.png?raw=true)\n\n### 2.创建一个StoryBoard\n\n - 为了能够完全的了解启动的步骤，我们把 `Main.storyBoard` 删掉\n \\>\n  ![p_3](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_3.png?raw=true)\n\n - 删掉后我们来创建一个 `StoryBoard`\n \\>\n ![p_4](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_4.png?raw=true)\n\n - 命名为 `templeStoryboard`\n \\>\n ![p_5](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_5.png?raw=true)\n\n - 然后拖一个 `Navigation Controller` 过来\n \\>\n ![p_6](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_6.png?raw=true)\n\n### 3.配置StoryBoard\n - 把 `navigation` 作为入口的 `controller` ,点击 `navigation` 的 `view` ,然后设置\n \\>\n ![p_7](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_7.png?raw=true)\n\n- 启动前设置一下 `Main interface`\n\\>\n![p_8](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_8.png?raw=true)\n\n- 效果\n\\>\n![p_9](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_9.PNG?raw=true)\n\n **这个时候，简单的配置就完成了**\n\n ---\n\n## <span id=\"segue\">Segue</span>\n\n - 拖出两个 View Controller\n \\>\n ![p_10](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_10.png?raw=true)\n\n - 从 table view 那边，按住 Control 键，使用鼠标拖到某一个 view controller\n \\>\n![p_11](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_11.png?raw=true)\n\n - 松开后就会出现一个列表,选择 push,或者 modal,然后就可以实现简单的事件出发了。\n\n - 对于 modal 的视图来说没有返回，所以需要代码来使它消失\n ```{bash}\n [self.presentingViewController dismissViewControllerAnimated:YES\n                                                      completion:nil];\n ```\n## <span id=\"data\">传递数据</span>\n\n - 传递数据，也就是点击事件出发的方法来做到的，segue 的触发会调用这个方法\n ```{bash}\n /**\n  这个方法就是segue点击后触发的方法\n\n  @param segue storyboard的segue\n  @param sender 尖头目的指向的类实例\n */\n - (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender\n\n ```\n\n## <span id=\"consum\">讨论 Storyboard </span>\n\n**storyboard 在我们看起来挺不错的, 但是并不是非常的有用.**\n\n- 优势\n   + Storyboards can be used to easily show off the flow of an application to a client or a colleague.\n   + Storyboards remove some simple code from your source files.\n   + Tables with static content are easy to create.\n   + Prototype cells replace the need to create separate XIBs for custom table view cells.\n   + Storyboards sure do look pretty.\n\n- 劣势\n   + Storyboards are difficult to work with in a team. Typically, a team of iOS programmers breaks up the work by having each member focus on a particular view controller. With a storyboard, everyone has to do their work in the same storyboard file. This can quickly lead to clutter and difficulties with version control.\n   + Storyboards disrupt the flow of programming. Let’s say you are writing a view controller and adding the code for a button that presents a view controller modally.\n\n   You can do that pretty easily in code – alloc and init the view controller, and send presentViewController:animated:completion: to self. With storyboards, you have to load up the storyboard file, drag some stuff onto the canvas, set the Class in the identity inspector, connect the segue, and then configure the segue.\n\n   + Storyboards sacrifice flexibility and control for ease of use. The work required to add advanced functionality to the basic functionality of a storyboard is often more than the work required to put together the advanced and basic functionality in code.\n\n   + Storyboards always create new view controller instances. Each time you perform a segue, a new instance of the destination view controller is created. Sometimes, though, you would like to keep a view controller around instead of destroying it each time it disappears off the screen. Storyboarding does not allow you to do this.\n\n  **Overall, storyboards make easy code easier and difficult code more difficult. We do not use them in this book, and we do not typically use them when writing our own applications. However, Apple seems to be pushing them harder in each release of Xcode, so you might one day decide that a particular application would benefit from storyboarding.**\n\n## 参考链接\n\n- [Storyboard － 百度百科](http://baike.baidu.com/link?url=PaKASvVjiDKKsllYXhmF_atckp9NhFiEy4qB8pfJPVJI5tP0_PfA8oCyp0EOPLLAG5HwRXVlTI6tCUVJ-oAAv3QOsCQoWWRuDwmoAVpqXGHfrQQI4QhxSMmhtc9y8keceYiSARUyNW0czIaKYfWXgK)\n\n- [IOS 开发 UI 搭建心得（一）—— 驾驭 StoryBoard](http://www.cocoachina.com/ios/20150526/11938.html)\n\n- []()\n","source":"_posts/IOS-Storyboard.md","raw":"title: IOS_Storyboard\ndate: 2016-03-02 20:13:16\ntags:\n\n- UIStoryboard\n- IOS\n\n---\n\n## 简介\n\n- 简单介绍一下 `Storyboard` ，然后对其进行创建和配置，使得可以最干净(干净的意思是没有任何代码的实现，类似于什么都没有做的一个View)的启动。\n- 然后理解 `segue` ,对其进行使用\n- 使用 `segue` 中去传递数据\n- 最后是对于 `Storyboard` 的一些讨论\n\n## Index\n\n1. [Storyboard](#intro)\n2. [创建和配置 Storyboard](#start)\n3. [Segue](#segue)\n4. [传递数据](#data)\n5. [讨论 Storyboard](#consum)\n\n## <span id=\"intro\">Storyboard</span>\n\n **Storyboard is IOS 的一个特性功能， 它可以让你所有的初始化和布局视图控制器(View Controller)在一个类似于 XIB 的文件中。**\n\n `StoryBoard` 是苹果在 `iOS 5` 中引入的新技术方案，目的是给纷繁复杂的 `nib`、`xib` 们一个温暖的家，让他们之间的关系更直观地展示出来，并提供了一种新的页面间跳转方式 segue。\n\n `StoryBoard` 的本质是一个 `XML` 文件，**描述了若干窗体、组件、Auto Layout 约束等关键信息**。\n\n 苹果官方是推荐我们将所有的UI都使用Storyboard去搭建，Storyboard也是一个很成熟的工具了。使用Storyboard去搭建所有界面，我们可以很迅捷地搭建出复杂的界面，也就是说能为我们节省大量的时间。我们还可以很直观地看出各个界面之间的关系，修改起来也很方便。将来如果遇到需要作修改的地方，我们只需要找到相对应的Storyboard就可以了，比起以前来说，快捷了不少。\n\n\n## <span id=\"start\">创建和配置 Storyboard</span>\n\n### 1.创建一个空工程\n\\>\n  ![p_1](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_1.png?raw=true)\n\\>\n  ![p_2](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_2.png?raw=true)\n\n### 2.创建一个StoryBoard\n\n - 为了能够完全的了解启动的步骤，我们把 `Main.storyBoard` 删掉\n \\>\n  ![p_3](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_3.png?raw=true)\n\n - 删掉后我们来创建一个 `StoryBoard`\n \\>\n ![p_4](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_4.png?raw=true)\n\n - 命名为 `templeStoryboard`\n \\>\n ![p_5](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_5.png?raw=true)\n\n - 然后拖一个 `Navigation Controller` 过来\n \\>\n ![p_6](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_6.png?raw=true)\n\n### 3.配置StoryBoard\n - 把 `navigation` 作为入口的 `controller` ,点击 `navigation` 的 `view` ,然后设置\n \\>\n ![p_7](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_7.png?raw=true)\n\n- 启动前设置一下 `Main interface`\n\\>\n![p_8](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_8.png?raw=true)\n\n- 效果\n\\>\n![p_9](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_9.PNG?raw=true)\n\n **这个时候，简单的配置就完成了**\n\n ---\n\n## <span id=\"segue\">Segue</span>\n\n - 拖出两个 View Controller\n \\>\n ![p_10](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_10.png?raw=true)\n\n - 从 table view 那边，按住 Control 键，使用鼠标拖到某一个 view controller\n \\>\n![p_11](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_11.png?raw=true)\n\n - 松开后就会出现一个列表,选择 push,或者 modal,然后就可以实现简单的事件出发了。\n\n - 对于 modal 的视图来说没有返回，所以需要代码来使它消失\n ```{bash}\n [self.presentingViewController dismissViewControllerAnimated:YES\n                                                      completion:nil];\n ```\n## <span id=\"data\">传递数据</span>\n\n - 传递数据，也就是点击事件出发的方法来做到的，segue 的触发会调用这个方法\n ```{bash}\n /**\n  这个方法就是segue点击后触发的方法\n\n  @param segue storyboard的segue\n  @param sender 尖头目的指向的类实例\n */\n - (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender\n\n ```\n\n## <span id=\"consum\">讨论 Storyboard </span>\n\n**storyboard 在我们看起来挺不错的, 但是并不是非常的有用.**\n\n- 优势\n   + Storyboards can be used to easily show off the flow of an application to a client or a colleague.\n   + Storyboards remove some simple code from your source files.\n   + Tables with static content are easy to create.\n   + Prototype cells replace the need to create separate XIBs for custom table view cells.\n   + Storyboards sure do look pretty.\n\n- 劣势\n   + Storyboards are difficult to work with in a team. Typically, a team of iOS programmers breaks up the work by having each member focus on a particular view controller. With a storyboard, everyone has to do their work in the same storyboard file. This can quickly lead to clutter and difficulties with version control.\n   + Storyboards disrupt the flow of programming. Let’s say you are writing a view controller and adding the code for a button that presents a view controller modally.\n\n   You can do that pretty easily in code – alloc and init the view controller, and send presentViewController:animated:completion: to self. With storyboards, you have to load up the storyboard file, drag some stuff onto the canvas, set the Class in the identity inspector, connect the segue, and then configure the segue.\n\n   + Storyboards sacrifice flexibility and control for ease of use. The work required to add advanced functionality to the basic functionality of a storyboard is often more than the work required to put together the advanced and basic functionality in code.\n\n   + Storyboards always create new view controller instances. Each time you perform a segue, a new instance of the destination view controller is created. Sometimes, though, you would like to keep a view controller around instead of destroying it each time it disappears off the screen. Storyboarding does not allow you to do this.\n\n  **Overall, storyboards make easy code easier and difficult code more difficult. We do not use them in this book, and we do not typically use them when writing our own applications. However, Apple seems to be pushing them harder in each release of Xcode, so you might one day decide that a particular application would benefit from storyboarding.**\n\n## 参考链接\n\n- [Storyboard － 百度百科](http://baike.baidu.com/link?url=PaKASvVjiDKKsllYXhmF_atckp9NhFiEy4qB8pfJPVJI5tP0_PfA8oCyp0EOPLLAG5HwRXVlTI6tCUVJ-oAAv3QOsCQoWWRuDwmoAVpqXGHfrQQI4QhxSMmhtc9y8keceYiSARUyNW0czIaKYfWXgK)\n\n- [IOS 开发 UI 搭建心得（一）—— 驾驭 StoryBoard](http://www.cocoachina.com/ios/20150526/11938.html)\n\n- []()\n","slug":"IOS-Storyboard","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzbg000gpe3qywhzg4zv","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><ul>\n<li>简单介绍一下 <code>Storyboard</code> ，然后对其进行创建和配置，使得可以最干净(干净的意思是没有任何代码的实现，类似于什么都没有做的一个View)的启动。</li>\n<li>然后理解 <code>segue</code> ,对其进行使用</li>\n<li>使用 <code>segue</code> 中去传递数据</li>\n<li>最后是对于 <code>Storyboard</code> 的一些讨论</li>\n</ul>\n<h2 id=\"Index\"><a href=\"#Index\" class=\"headerlink\" title=\"Index\"></a>Index</h2><ol>\n<li><a href=\"#intro\">Storyboard</a></li>\n<li><a href=\"#start\">创建和配置 Storyboard</a></li>\n<li><a href=\"#segue\">Segue</a></li>\n<li><a href=\"#data\">传递数据</a></li>\n<li><a href=\"#consum\">讨论 Storyboard</a></li>\n</ol>\n<h2 id=\"Storyboard\"><a href=\"#Storyboard\" class=\"headerlink\" title=\"Storyboard\"></a><span id=\"intro\">Storyboard</span></h2><p> <strong>Storyboard is IOS 的一个特性功能， 它可以让你所有的初始化和布局视图控制器(View Controller)在一个类似于 XIB 的文件中。</strong></p>\n<p> <code>StoryBoard</code> 是苹果在 <code>iOS 5</code> 中引入的新技术方案，目的是给纷繁复杂的 <code>nib</code>、<code>xib</code> 们一个温暖的家，让他们之间的关系更直观地展示出来，并提供了一种新的页面间跳转方式 segue。</p>\n<p> <code>StoryBoard</code> 的本质是一个 <code>XML</code> 文件，<strong>描述了若干窗体、组件、Auto Layout 约束等关键信息</strong>。</p>\n<p> 苹果官方是推荐我们将所有的UI都使用Storyboard去搭建，Storyboard也是一个很成熟的工具了。使用Storyboard去搭建所有界面，我们可以很迅捷地搭建出复杂的界面，也就是说能为我们节省大量的时间。我们还可以很直观地看出各个界面之间的关系，修改起来也很方便。将来如果遇到需要作修改的地方，我们只需要找到相对应的Storyboard就可以了，比起以前来说，快捷了不少。</p>\n<h2 id=\"创建和配置-Storyboard\"><a href=\"#创建和配置-Storyboard\" class=\"headerlink\" title=\"创建和配置 Storyboard\"></a><span id=\"start\">创建和配置 Storyboard</span></h2><h3 id=\"1-创建一个空工程\"><a href=\"#1-创建一个空工程\" class=\"headerlink\" title=\"1.创建一个空工程\"></a>1.创建一个空工程</h3><p>><br>  <img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_1.png?raw=true\" alt=\"p_1\"><br>><br>  <img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_2.png?raw=true\" alt=\"p_2\"></p>\n<h3 id=\"2-创建一个StoryBoard\"><a href=\"#2-创建一个StoryBoard\" class=\"headerlink\" title=\"2.创建一个StoryBoard\"></a>2.创建一个StoryBoard</h3><ul>\n<li><p>为了能够完全的了解启动的步骤，我们把 <code>Main.storyBoard</code> 删掉<br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_3.png?raw=true\" alt=\"p_3\"></p>\n</li>\n<li><p>删掉后我们来创建一个 <code>StoryBoard</code><br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_4.png?raw=true\" alt=\"p_4\"></p>\n</li>\n<li><p>命名为 <code>templeStoryboard</code><br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_5.png?raw=true\" alt=\"p_5\"></p>\n</li>\n<li><p>然后拖一个 <code>Navigation Controller</code> 过来<br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_6.png?raw=true\" alt=\"p_6\"></p>\n</li>\n</ul>\n<h3 id=\"3-配置StoryBoard\"><a href=\"#3-配置StoryBoard\" class=\"headerlink\" title=\"3.配置StoryBoard\"></a>3.配置StoryBoard</h3><ul>\n<li>把 <code>navigation</code> 作为入口的 <code>controller</code> ,点击 <code>navigation</code> 的 <code>view</code> ,然后设置<br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_7.png?raw=true\" alt=\"p_7\"></li>\n</ul>\n<ul>\n<li><p>启动前设置一下 <code>Main interface</code><br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_8.png?raw=true\" alt=\"p_8\"></p>\n</li>\n<li><p>效果<br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_9.PNG?raw=true\" alt=\"p_9\"></p>\n<p><strong>这个时候，简单的配置就完成了</strong></p>\n<hr>\n</li>\n</ul>\n<h2 id=\"Segue\"><a href=\"#Segue\" class=\"headerlink\" title=\"Segue\"></a><span id=\"segue\">Segue</span></h2><ul>\n<li><p>拖出两个 View Controller<br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_10.png?raw=true\" alt=\"p_10\"></p>\n</li>\n<li><p>从 table view 那边，按住 Control 键，使用鼠标拖到某一个 view controller<br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_11.png?raw=true\" alt=\"p_11\"></p>\n</li>\n<li><p>松开后就会出现一个列表,选择 push,或者 modal,然后就可以实现简单的事件出发了。</p>\n</li>\n<li><p>对于 modal 的视图来说没有返回，所以需要代码来使它消失</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[self.presentingViewController dismissViewControllerAnimated:YES</span><br><span class=\"line\">                                                     completion:nil];</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"传递数据\"><a href=\"#传递数据\" class=\"headerlink\" title=\"传递数据\"></a><span id=\"data\">传递数据</span></h2><ul>\n<li>传递数据，也就是点击事件出发的方法来做到的，segue 的触发会调用这个方法<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> 这个方法就是segue点击后触发的方法</span><br><span class=\"line\"></span><br><span class=\"line\"> @param segue storyboard的segue</span><br><span class=\"line\"> @param sender 尖头目的指向的类实例</span><br><span class=\"line\">*/</span><br><span class=\"line\">- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"讨论-Storyboard\"><a href=\"#讨论-Storyboard\" class=\"headerlink\" title=\"讨论 Storyboard \"></a><span id=\"consum\">讨论 Storyboard </span></h2><p><strong>storyboard 在我们看起来挺不错的, 但是并不是非常的有用.</strong></p>\n<ul>\n<li><p>优势</p>\n<ul>\n<li>Storyboards can be used to easily show off the flow of an application to a client or a colleague.</li>\n<li>Storyboards remove some simple code from your source files.</li>\n<li>Tables with static content are easy to create.</li>\n<li>Prototype cells replace the need to create separate XIBs for custom table view cells.</li>\n<li>Storyboards sure do look pretty.</li>\n</ul>\n</li>\n<li><p>劣势</p>\n<ul>\n<li>Storyboards are difficult to work with in a team. Typically, a team of iOS programmers breaks up the work by having each member focus on a particular view controller. With a storyboard, everyone has to do their work in the same storyboard file. This can quickly lead to clutter and difficulties with version control.</li>\n<li><p>Storyboards disrupt the flow of programming. Let’s say you are writing a view controller and adding the code for a button that presents a view controller modally.</p>\n<p>You can do that pretty easily in code – alloc and init the view controller, and send presentViewController:animated:completion: to self. With storyboards, you have to load up the storyboard file, drag some stuff onto the canvas, set the Class in the identity inspector, connect the segue, and then configure the segue.</p>\n</li>\n<li><p>Storyboards sacrifice flexibility and control for ease of use. The work required to add advanced functionality to the basic functionality of a storyboard is often more than the work required to put together the advanced and basic functionality in code.</p>\n</li>\n<li><p>Storyboards always create new view controller instances. Each time you perform a segue, a new instance of the destination view controller is created. Sometimes, though, you would like to keep a view controller around instead of destroying it each time it disappears off the screen. Storyboarding does not allow you to do this.</p>\n</li>\n</ul>\n<p><strong>Overall, storyboards make easy code easier and difficult code more difficult. We do not use them in this book, and we do not typically use them when writing our own applications. However, Apple seems to be pushing them harder in each release of Xcode, so you might one day decide that a particular application would benefit from storyboarding.</strong></p>\n</li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><p><a href=\"http://baike.baidu.com/link?url=PaKASvVjiDKKsllYXhmF_atckp9NhFiEy4qB8pfJPVJI5tP0_PfA8oCyp0EOPLLAG5HwRXVlTI6tCUVJ-oAAv3QOsCQoWWRuDwmoAVpqXGHfrQQI4QhxSMmhtc9y8keceYiSARUyNW0czIaKYfWXgK\" target=\"_blank\" rel=\"external\">Storyboard － 百度百科</a></p>\n</li>\n<li><p><a href=\"http://www.cocoachina.com/ios/20150526/11938.html\" target=\"_blank\" rel=\"external\">IOS 开发 UI 搭建心得（一）—— 驾驭 StoryBoard</a></p>\n</li>\n<li><p><a href=\"\"></a></p>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><ul>\n<li>简单介绍一下 <code>Storyboard</code> ，然后对其进行创建和配置，使得可以最干净(干净的意思是没有任何代码的实现，类似于什么都没有做的一个View)的启动。</li>\n<li>然后理解 <code>segue</code> ,对其进行使用</li>\n<li>使用 <code>segue</code> 中去传递数据</li>\n<li>最后是对于 <code>Storyboard</code> 的一些讨论</li>\n</ul>\n<h2 id=\"Index\"><a href=\"#Index\" class=\"headerlink\" title=\"Index\"></a>Index</h2><ol>\n<li><a href=\"#intro\">Storyboard</a></li>\n<li><a href=\"#start\">创建和配置 Storyboard</a></li>\n<li><a href=\"#segue\">Segue</a></li>\n<li><a href=\"#data\">传递数据</a></li>\n<li><a href=\"#consum\">讨论 Storyboard</a></li>\n</ol>\n<h2 id=\"Storyboard\"><a href=\"#Storyboard\" class=\"headerlink\" title=\"Storyboard\"></a><span id=\"intro\">Storyboard</span></h2><p> <strong>Storyboard is IOS 的一个特性功能， 它可以让你所有的初始化和布局视图控制器(View Controller)在一个类似于 XIB 的文件中。</strong></p>\n<p> <code>StoryBoard</code> 是苹果在 <code>iOS 5</code> 中引入的新技术方案，目的是给纷繁复杂的 <code>nib</code>、<code>xib</code> 们一个温暖的家，让他们之间的关系更直观地展示出来，并提供了一种新的页面间跳转方式 segue。</p>\n<p> <code>StoryBoard</code> 的本质是一个 <code>XML</code> 文件，<strong>描述了若干窗体、组件、Auto Layout 约束等关键信息</strong>。</p>\n<p> 苹果官方是推荐我们将所有的UI都使用Storyboard去搭建，Storyboard也是一个很成熟的工具了。使用Storyboard去搭建所有界面，我们可以很迅捷地搭建出复杂的界面，也就是说能为我们节省大量的时间。我们还可以很直观地看出各个界面之间的关系，修改起来也很方便。将来如果遇到需要作修改的地方，我们只需要找到相对应的Storyboard就可以了，比起以前来说，快捷了不少。</p>\n<h2 id=\"创建和配置-Storyboard\"><a href=\"#创建和配置-Storyboard\" class=\"headerlink\" title=\"创建和配置 Storyboard\"></a><span id=\"start\">创建和配置 Storyboard</span></h2><h3 id=\"1-创建一个空工程\"><a href=\"#1-创建一个空工程\" class=\"headerlink\" title=\"1.创建一个空工程\"></a>1.创建一个空工程</h3><p>><br>  <img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_1.png?raw=true\" alt=\"p_1\"><br>><br>  <img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_2.png?raw=true\" alt=\"p_2\"></p>\n<h3 id=\"2-创建一个StoryBoard\"><a href=\"#2-创建一个StoryBoard\" class=\"headerlink\" title=\"2.创建一个StoryBoard\"></a>2.创建一个StoryBoard</h3><ul>\n<li><p>为了能够完全的了解启动的步骤，我们把 <code>Main.storyBoard</code> 删掉<br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_3.png?raw=true\" alt=\"p_3\"></p>\n</li>\n<li><p>删掉后我们来创建一个 <code>StoryBoard</code><br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_4.png?raw=true\" alt=\"p_4\"></p>\n</li>\n<li><p>命名为 <code>templeStoryboard</code><br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_5.png?raw=true\" alt=\"p_5\"></p>\n</li>\n<li><p>然后拖一个 <code>Navigation Controller</code> 过来<br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_6.png?raw=true\" alt=\"p_6\"></p>\n</li>\n</ul>\n<h3 id=\"3-配置StoryBoard\"><a href=\"#3-配置StoryBoard\" class=\"headerlink\" title=\"3.配置StoryBoard\"></a>3.配置StoryBoard</h3><ul>\n<li>把 <code>navigation</code> 作为入口的 <code>controller</code> ,点击 <code>navigation</code> 的 <code>view</code> ,然后设置<br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_7.png?raw=true\" alt=\"p_7\"></li>\n</ul>\n<ul>\n<li><p>启动前设置一下 <code>Main interface</code><br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_8.png?raw=true\" alt=\"p_8\"></p>\n</li>\n<li><p>效果<br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_9.PNG?raw=true\" alt=\"p_9\"></p>\n<p><strong>这个时候，简单的配置就完成了</strong></p>\n<hr>\n</li>\n</ul>\n<h2 id=\"Segue\"><a href=\"#Segue\" class=\"headerlink\" title=\"Segue\"></a><span id=\"segue\">Segue</span></h2><ul>\n<li><p>拖出两个 View Controller<br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_10.png?raw=true\" alt=\"p_10\"></p>\n</li>\n<li><p>从 table view 那边，按住 Control 键，使用鼠标拖到某一个 view controller<br>><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/storyboard_p_11.png?raw=true\" alt=\"p_11\"></p>\n</li>\n<li><p>松开后就会出现一个列表,选择 push,或者 modal,然后就可以实现简单的事件出发了。</p>\n</li>\n<li><p>对于 modal 的视图来说没有返回，所以需要代码来使它消失</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[self.presentingViewController dismissViewControllerAnimated:YES</span><br><span class=\"line\">                                                     completion:nil];</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"传递数据\"><a href=\"#传递数据\" class=\"headerlink\" title=\"传递数据\"></a><span id=\"data\">传递数据</span></h2><ul>\n<li>传递数据，也就是点击事件出发的方法来做到的，segue 的触发会调用这个方法<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> 这个方法就是segue点击后触发的方法</span><br><span class=\"line\"></span><br><span class=\"line\"> @param segue storyboard的segue</span><br><span class=\"line\"> @param sender 尖头目的指向的类实例</span><br><span class=\"line\">*/</span><br><span class=\"line\">- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"讨论-Storyboard\"><a href=\"#讨论-Storyboard\" class=\"headerlink\" title=\"讨论 Storyboard \"></a><span id=\"consum\">讨论 Storyboard </span></h2><p><strong>storyboard 在我们看起来挺不错的, 但是并不是非常的有用.</strong></p>\n<ul>\n<li><p>优势</p>\n<ul>\n<li>Storyboards can be used to easily show off the flow of an application to a client or a colleague.</li>\n<li>Storyboards remove some simple code from your source files.</li>\n<li>Tables with static content are easy to create.</li>\n<li>Prototype cells replace the need to create separate XIBs for custom table view cells.</li>\n<li>Storyboards sure do look pretty.</li>\n</ul>\n</li>\n<li><p>劣势</p>\n<ul>\n<li>Storyboards are difficult to work with in a team. Typically, a team of iOS programmers breaks up the work by having each member focus on a particular view controller. With a storyboard, everyone has to do their work in the same storyboard file. This can quickly lead to clutter and difficulties with version control.</li>\n<li><p>Storyboards disrupt the flow of programming. Let’s say you are writing a view controller and adding the code for a button that presents a view controller modally.</p>\n<p>You can do that pretty easily in code – alloc and init the view controller, and send presentViewController:animated:completion: to self. With storyboards, you have to load up the storyboard file, drag some stuff onto the canvas, set the Class in the identity inspector, connect the segue, and then configure the segue.</p>\n</li>\n<li><p>Storyboards sacrifice flexibility and control for ease of use. The work required to add advanced functionality to the basic functionality of a storyboard is often more than the work required to put together the advanced and basic functionality in code.</p>\n</li>\n<li><p>Storyboards always create new view controller instances. Each time you perform a segue, a new instance of the destination view controller is created. Sometimes, though, you would like to keep a view controller around instead of destroying it each time it disappears off the screen. Storyboarding does not allow you to do this.</p>\n</li>\n</ul>\n<p><strong>Overall, storyboards make easy code easier and difficult code more difficult. We do not use them in this book, and we do not typically use them when writing our own applications. However, Apple seems to be pushing them harder in each release of Xcode, so you might one day decide that a particular application would benefit from storyboarding.</strong></p>\n</li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><p><a href=\"http://baike.baidu.com/link?url=PaKASvVjiDKKsllYXhmF_atckp9NhFiEy4qB8pfJPVJI5tP0_PfA8oCyp0EOPLLAG5HwRXVlTI6tCUVJ-oAAv3QOsCQoWWRuDwmoAVpqXGHfrQQI4QhxSMmhtc9y8keceYiSARUyNW0czIaKYfWXgK\">Storyboard － 百度百科</a></p>\n</li>\n<li><p><a href=\"http://www.cocoachina.com/ios/20150526/11938.html\">IOS 开发 UI 搭建心得（一）—— 驾驭 StoryBoard</a></p>\n</li>\n<li><p><a href=\"\"></a></p>\n</li>\n</ul>\n"},{"title":"KVC 键值设置编码的行为","date":"2016-03-13T02:40:28.000Z","_content":"\n\n## 调用的过程\n\n 以属性 `name` 来说明\n\n1. 接收器中有setName:的访问器(或者是 `_setName`)就调用它\n2. 没有访问器，则使用接收器的类方法 `accessInstanceVariablesDirectly` ，返回 YES 时，如果存在实例变量 name (或者 `_name`, `isName`, `_isName` 等)就设定值。如果使用计数引用，那么旧值就会被释放啦，新的被保存并带入\n3. 如果都不行，就会调用 `setValue:ForUndefinedKey:`\n4. 返回的值如果不是对象，则切换到合适的值。\n\n## 方法\n\n``` java\n\n  /**\n  不能设置键字符串 key 时，从 setValue:forKey 中调用这个方法。默认情况下\n  会触发异常 NSUndefinedKeyException\n  在子类的定义中修改就可以返回其他对象了\n\n  */\n  -(void)setValue: (id)value\n  forUndefinedKey: (NSString *)key\n\n```\n\n---\n","source":"_posts/KVC-键值设置编码的行为.md","raw":"title: KVC 键值设置编码的行为\ndate: 2016-03-13 10:40:28\ntags:\n  - KVC\n  - IOS\n  - Objective-c\n  - setValue\n---\n\n\n## 调用的过程\n\n 以属性 `name` 来说明\n\n1. 接收器中有setName:的访问器(或者是 `_setName`)就调用它\n2. 没有访问器，则使用接收器的类方法 `accessInstanceVariablesDirectly` ，返回 YES 时，如果存在实例变量 name (或者 `_name`, `isName`, `_isName` 等)就设定值。如果使用计数引用，那么旧值就会被释放啦，新的被保存并带入\n3. 如果都不行，就会调用 `setValue:ForUndefinedKey:`\n4. 返回的值如果不是对象，则切换到合适的值。\n\n## 方法\n\n``` java\n\n  /**\n  不能设置键字符串 key 时，从 setValue:forKey 中调用这个方法。默认情况下\n  会触发异常 NSUndefinedKeyException\n  在子类的定义中修改就可以返回其他对象了\n\n  */\n  -(void)setValue: (id)value\n  forUndefinedKey: (NSString *)key\n\n```\n\n---\n","slug":"KVC-键值设置编码的行为","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzbi000hpe3qwcqrwizy","content":"<h2 id=\"调用的过程\"><a href=\"#调用的过程\" class=\"headerlink\" title=\"调用的过程\"></a>调用的过程</h2><p> 以属性 <code>name</code> 来说明</p>\n<ol>\n<li>接收器中有setName:的访问器(或者是 <code>_setName</code>)就调用它</li>\n<li>没有访问器，则使用接收器的类方法 <code>accessInstanceVariablesDirectly</code> ，返回 YES 时，如果存在实例变量 name (或者 <code>_name</code>, <code>isName</code>, <code>_isName</code> 等)就设定值。如果使用计数引用，那么旧值就会被释放啦，新的被保存并带入</li>\n<li>如果都不行，就会调用 <code>setValue:ForUndefinedKey:</code></li>\n<li>返回的值如果不是对象，则切换到合适的值。</li>\n</ol>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">不能设置键字符串 key 时，从 setValue:forKey 中调用这个方法。默认情况下</span><br><span class=\"line\">会触发异常 NSUndefinedKeyException</span><br><span class=\"line\">在子类的定义中修改就可以返回其他对象了</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>)setValue: (id)value</span><br><span class=\"line\">forUndefinedKey: (NSString *)key</span><br></pre></td></tr></table></figure>\n<hr>\n","excerpt":"","more":"<h2 id=\"调用的过程\"><a href=\"#调用的过程\" class=\"headerlink\" title=\"调用的过程\"></a>调用的过程</h2><p> 以属性 <code>name</code> 来说明</p>\n<ol>\n<li>接收器中有setName:的访问器(或者是 <code>_setName</code>)就调用它</li>\n<li>没有访问器，则使用接收器的类方法 <code>accessInstanceVariablesDirectly</code> ，返回 YES 时，如果存在实例变量 name (或者 <code>_name</code>, <code>isName</code>, <code>_isName</code> 等)就设定值。如果使用计数引用，那么旧值就会被释放啦，新的被保存并带入</li>\n<li>如果都不行，就会调用 <code>setValue:ForUndefinedKey:</code></li>\n<li>返回的值如果不是对象，则切换到合适的值。</li>\n</ol>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">不能设置键字符串 key 时，从 setValue:forKey 中调用这个方法。默认情况下</span><br><span class=\"line\">会触发异常 NSUndefinedKeyException</span><br><span class=\"line\">在子类的定义中修改就可以返回其他对象了</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>)setValue: (id)value</span><br><span class=\"line\">forUndefinedKey: (NSString *)key</span><br></pre></td></tr></table></figure>\n<hr>\n"},{"title":"KVC 键值访问编码的行为","date":"2016-03-13T02:40:16.000Z","_content":"\n\n## 调用的过程\n\n 以属性 `name` 来说明\n\n 1. 接收器中有name的访问器(或者是 `getName`, `isName`, `_name`, `_getName`)就调用它。\n 2. 没有访问器，则使用接收器的类方法 `accessInstanceVariablesDirectly` 来确定是否(YES / NO)可以返回值\n 3. 如果都不行，就会调用 `valueForUndefinedKey`:\n 4. 返回的值如果不是对象，那么返回被适当的封装的对象。\n\n## 方法\n\n``` java\n  /**\n  通常定义为返回 YES，可以在子类中改变。\n  返回 YES 时，说明可以访问实例变量\n  返回 NO 时，不可以访问\n  即使为 @Private 也可以访问\n\n  */\n  + (BOOL) accessInstanceVariablesDirectly\n  /**\n  不能取得键字符串的值时，从方法 valueForKey: 中调用该方法\n  默认情况下会触发异常 NSUndefinedKeyException\n  在子类的定义中修改就可以返回其他对象了\n\n  */\n  - (id) valueForUndefinedKey:(NSString *)key\n```\n\n---\n","source":"_posts/KVC-键值访问编码的行为.md","raw":"title: KVC 键值访问编码的行为\ndate: 2016-03-13 10:40:16\ntags:\n - KVC\n - IOS\n - Objective-c\n - valueForKey\n---\n\n\n## 调用的过程\n\n 以属性 `name` 来说明\n\n 1. 接收器中有name的访问器(或者是 `getName`, `isName`, `_name`, `_getName`)就调用它。\n 2. 没有访问器，则使用接收器的类方法 `accessInstanceVariablesDirectly` 来确定是否(YES / NO)可以返回值\n 3. 如果都不行，就会调用 `valueForUndefinedKey`:\n 4. 返回的值如果不是对象，那么返回被适当的封装的对象。\n\n## 方法\n\n``` java\n  /**\n  通常定义为返回 YES，可以在子类中改变。\n  返回 YES 时，说明可以访问实例变量\n  返回 NO 时，不可以访问\n  即使为 @Private 也可以访问\n\n  */\n  + (BOOL) accessInstanceVariablesDirectly\n  /**\n  不能取得键字符串的值时，从方法 valueForKey: 中调用该方法\n  默认情况下会触发异常 NSUndefinedKeyException\n  在子类的定义中修改就可以返回其他对象了\n\n  */\n  - (id) valueForUndefinedKey:(NSString *)key\n```\n\n---\n","slug":"KVC-键值访问编码的行为","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzbk000jpe3qt6fkuvly","content":"<h2 id=\"调用的过程\"><a href=\"#调用的过程\" class=\"headerlink\" title=\"调用的过程\"></a>调用的过程</h2><p> 以属性 <code>name</code> 来说明</p>\n<ol>\n<li>接收器中有name的访问器(或者是 <code>getName</code>, <code>isName</code>, <code>_name</code>, <code>_getName</code>)就调用它。</li>\n<li>没有访问器，则使用接收器的类方法 <code>accessInstanceVariablesDirectly</code> 来确定是否(YES / NO)可以返回值</li>\n<li>如果都不行，就会调用 <code>valueForUndefinedKey</code>:</li>\n<li>返回的值如果不是对象，那么返回被适当的封装的对象。</li>\n</ol>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">通常定义为返回 YES，可以在子类中改变。</span><br><span class=\"line\">返回 YES 时，说明可以访问实例变量</span><br><span class=\"line\">返回 NO 时，不可以访问</span><br><span class=\"line\">即使为 <span class=\"doctag\">@Private</span> 也可以访问</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">+ (BOOL) accessInstanceVariablesDirectly</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">不能取得键字符串的值时，从方法 valueForKey: 中调用该方法</span><br><span class=\"line\">默认情况下会触发异常 NSUndefinedKeyException</span><br><span class=\"line\">在子类的定义中修改就可以返回其他对象了</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (id) valueForUndefinedKey:(NSString *)key</span><br></pre></td></tr></table></figure>\n<hr>\n","excerpt":"","more":"<h2 id=\"调用的过程\"><a href=\"#调用的过程\" class=\"headerlink\" title=\"调用的过程\"></a>调用的过程</h2><p> 以属性 <code>name</code> 来说明</p>\n<ol>\n<li>接收器中有name的访问器(或者是 <code>getName</code>, <code>isName</code>, <code>_name</code>, <code>_getName</code>)就调用它。</li>\n<li>没有访问器，则使用接收器的类方法 <code>accessInstanceVariablesDirectly</code> 来确定是否(YES / NO)可以返回值</li>\n<li>如果都不行，就会调用 <code>valueForUndefinedKey</code>:</li>\n<li>返回的值如果不是对象，那么返回被适当的封装的对象。</li>\n</ol>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">通常定义为返回 YES，可以在子类中改变。</span><br><span class=\"line\">返回 YES 时，说明可以访问实例变量</span><br><span class=\"line\">返回 NO 时，不可以访问</span><br><span class=\"line\">即使为 <span class=\"doctag\">@Private</span> 也可以访问</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">+ (BOOL) accessInstanceVariablesDirectly</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">不能取得键字符串的值时，从方法 valueForKey: 中调用该方法</span><br><span class=\"line\">默认情况下会触发异常 NSUndefinedKeyException</span><br><span class=\"line\">在子类的定义中修改就可以返回其他对象了</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (id) valueForUndefinedKey:(NSString *)key</span><br></pre></td></tr></table></figure>\n<hr>\n"},{"title":"IOS 本地音乐播放","date":"2016-03-08T02:47:59.000Z","_content":"\n## 概述\n\n  首先是了解一下 `iPod Library Access` ，知道本地音乐文件的来源。接着就是知道如何使用播放器的类实例 `MPMusicPlayerController` ，去播放本地的音乐文件。这样基本就可以了，为了把Apple的文档使用多一些。尝试使用 `Media item picker`，深入再操作一下 `iPod Library`.\n\n  接触的类有:\n  - MPMediaItem\n  - MPMusicPlayerController\n  - MPMediaQuery\n\n\n  其他参考类\n  - MPMediaGroupingAlbum\n  - MPMediaLibrary\n\n\n## 目录\n - [关于 iPod Library ](#about)\n - [使用播放器放音乐](#play)\n\n## 使用前提醒\n   需要头文件\n\n   ```{bash}\n   /**\n    在项目的 `General` 的 `Linked Frameworks and Libraries` 里面加入 `MediaPlayer.framework`\n   */\n\n   #import <MediaPlayer/MediaPlayer.h> /* 在你需要播放器的文件里加上这个头文件 */\n   ```\n\n## <span id=\"about\">[About iPod Library Access](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/AboutiPodLibraryAccess/AboutiPodLibraryAccess.html#//apple_ref/doc/uid/TP40008765-CH103-SW9)</span>\n\n  如果你想播放本地的音乐，首先你要知道它存放的位置，iPod Library 就是存放它的地方。\n\n  而这个地方也是一个数据库\n\n ---\n\n  - 先看图 ![Using iPod library access](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/iPodLibraryAccessOverview.jpg)\n\n  然后就是，我们的应用使用 `Media Query` 去获取 `iPod Library` 的音乐文件，然后应用交给 `Music Player` 去播放它们。\n\n  然后在对照上图，就可以大概知道一个情况了。\n\n  了解数据库的状态的改变，这需要 [`MPMediaLibraryDidChangeNotification`](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaLibrary_ClassReference/index.html#//apple_ref/c/data/MPMediaLibraryDidChangeNotification) 来作为通知。\n\n\n\n ---\n\n  返回的内容是一个 `MPMediaItem` 的数组，`MPMediaItem` 包含了一个媒体文件所有信息。\n\n  获取所有的音乐文件，我们还需要一个 [`MPMediaQuery`](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaQuery_ClassReference/index.html#//apple_ref/occ/cl/MPMediaQuery), 这个类的实例可以用于初始化播放器的播放内容。\n\n  ```{bash}\n  MPMediaQuery *mySong = [MPMediaQuery songsQuery]; // 这样我们就可以得到了本地音乐文件的所有内容啦\n\n  MPMediaItem *item =  [mySong items][0]; // 获取本地音乐文件的第一个文件\n\n  ```\n  [想对 MPMediaQuery 有更多的使用有更多的了解](#mediaQuery)\n  [更多关于播放队列](#moreAboutPlay)\n\n ---\n\n## <span id=\"play\">[Media playback](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/UsingMediaPlayback/UsingMediaPlayback.html#//apple_ref/doc/uid/TP40008765-CH100-SW1)</span>\n\n  - 播放的一些概念术语 ![Schematic representation of a music player object](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/musicPlayer.jpg)\n\n\n   说好的播放器，就需要一个播放器实例啦。那就是 `MPMusicPlayerController`.\n   ```{bash}\n   /* 生成一个播放器的实例 */\n   MPMusicPlayerController *player = [MPMusicPlayerController applicationMusicPlayer];\n   ```\n\n   但是，有了播放器，还需要播放的文件呢！上面我们的到了播放文件列表的一个 MPMediaQuery 实例。Just do it\n   ```{bash}\n   [player setQueueWithQuery: [MPMediaQuery songsQuery]];\n   /**\n   或者是\n     [player setQueueWithQuery: mySong];\n\n   */\n   ```\n\n   还没有完哦，如果播放器的播放状态改变了，我们也需要这个消息通知\n   ```{bash}\n   /**\n   ( handle_NowPlayingItemChanged: ) 和 ( handle_PlaybackStateChanged: ) 是自定义的方法。\n\n   在注销的时候，记得也把通知给注销掉哦。。。。。\n   */\n   // now playing\n   [notificationCenter addObserver:self\n                          selector:@selector(handle_NowPlayingItemChanged:)\n                              name:MPMusicPlayerControllerNowPlayingItemDidChangeNotification object:_myPlayer];\n\n    // playback state change\n    [notificationCenter addObserver:self\n                           selector:@selector(handle_PlaybackStateChanged:)\n                               name:MPMusicPlayerControllerPlaybackStateDidChangeNotification object:_myPlayer];\n\n    [player beginGeneratingPlaybackNotifications]; // player set the notification\n\n   ```\n\n   然后就可以开始播放了。。。\n   ```{bash}\n   /**\n   遵循了 `MPMediaPlayback` Delegate,\n\n   */\n   [player play]; // 播放\n\n   [_myPlayer pause]; // 暂停\n\n   [_myPlayer stop]; // 停止\n\n   [_myPlayer skipToBeginning]; // 重新开始播放\n\n   [_myPlayer skipToNextItem]; // 下一首\n\n   [_myPlayer skipToPreviousItem]; // 上一首\n\n   ... (还有一些都在这个实例里面的)\n\n   ```\n\n**到这里基本就没有了,一个简单的没有界面的播放器就完成了**\n\n---\n\n## <span id=\"mediaQuery\">更多关于 Media Query</span>\n\n  - Using a media query to access the device iPod library ![Using a media query to access the device iPod library](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/mediaQuery.jpg)\n\n  上文我们得到的 MPMediaQuery 的实例 mySong.和图中的 myQuery 一样的。\n\n\n  `media query` 提供了一个对于 `iPod Library` 的一个搜索描述，告诉数据库如何去获取相应的 `media item`，并且还有如何组织这些 `item`\n\n  有两个配置属性\n    - The `filter` is the description of what to retrieve. The filter is optional; a filterless query matches the entire iPod library.\n\n    - The `grouping` type is an optional key that specifies the arrangement to use for retrieved collections of media items.\n\n\n## <span id=\"moreAboutPlay\">更多关于播放队列</span>\n\n**有两种方法去设置播放的队列内容**\n\n  - Use a media item `collection`\n    ```{bash}\n    /**\n    musicPlayer 是 MPMusicPlayerController 的实例\n    */\n    [musicPlayer setQueueWithItemCollection: userMediaItemCollection];\n    ```\n\n  - Use a `media query`, which implicitly defines a collection\n    ```{bash}\n    /**\n    musicPlayer 是 MPMusicPlayerController 的实例\n    */\n    [musicPlayer setQueueWithQuery: [MPMediaQuery songsQuery]];\n    ```\n\n## <span id=\"moreLibrary\">更多关于使用iPod Library </span>\n\n- 如何使用更好的使用iPod Library ![Using the iPod library database access classes](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/database_access_classes.jpg)\n参考[官方文档](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/UsingTheiPodLibrary/UsingTheiPodLibrary.html)\n\n## <span id=\"itemPicker\">关于如何使用item picker</span>\n\n- 使用 Item Picker ![ The user interface of the media item picker](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/mediaPicker.jpg)\n\n[Using the Media Item Picker](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/UsingtheMediaItemPicker/UsingtheMediaItemPicker.html#//apple_ref/doc/uid/TP40008765-CH104-SW1)\n\n---\n\n## 参考链接信息\n[iPod Library Access Programming Guide](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008765)\n\n[Media Player Framework Reference](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MediaPlayer_Framework/index.html#//apple_ref/doc/uid/TP40006952)\n\n[MPMusicPlayerController](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMusicPlayerController_ClassReference/index.html#//apple_ref/occ/cl/MPMusicPlayerController)\n\n[MPMediaPlayback](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaPlayback_protocol/index.html#//apple_ref/occ/intf/MPMediaPlayback)\n\n[MPMediaLibrary](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaLibrary_ClassReference/index.html#//apple_ref/occ/cl/MPMediaLibrary)\n","source":"_posts/IOS-本地音乐播放.md","raw":"title: IOS 本地音乐播放\ndate: 2016-03-08 10:47:59\ntags:\n- IOS\n- audio player\n- local\n- MPMusicPlayerController\n- MPMediaQuery\n\n---\n\n## 概述\n\n  首先是了解一下 `iPod Library Access` ，知道本地音乐文件的来源。接着就是知道如何使用播放器的类实例 `MPMusicPlayerController` ，去播放本地的音乐文件。这样基本就可以了，为了把Apple的文档使用多一些。尝试使用 `Media item picker`，深入再操作一下 `iPod Library`.\n\n  接触的类有:\n  - MPMediaItem\n  - MPMusicPlayerController\n  - MPMediaQuery\n\n\n  其他参考类\n  - MPMediaGroupingAlbum\n  - MPMediaLibrary\n\n\n## 目录\n - [关于 iPod Library ](#about)\n - [使用播放器放音乐](#play)\n\n## 使用前提醒\n   需要头文件\n\n   ```{bash}\n   /**\n    在项目的 `General` 的 `Linked Frameworks and Libraries` 里面加入 `MediaPlayer.framework`\n   */\n\n   #import <MediaPlayer/MediaPlayer.h> /* 在你需要播放器的文件里加上这个头文件 */\n   ```\n\n## <span id=\"about\">[About iPod Library Access](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/AboutiPodLibraryAccess/AboutiPodLibraryAccess.html#//apple_ref/doc/uid/TP40008765-CH103-SW9)</span>\n\n  如果你想播放本地的音乐，首先你要知道它存放的位置，iPod Library 就是存放它的地方。\n\n  而这个地方也是一个数据库\n\n ---\n\n  - 先看图 ![Using iPod library access](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/iPodLibraryAccessOverview.jpg)\n\n  然后就是，我们的应用使用 `Media Query` 去获取 `iPod Library` 的音乐文件，然后应用交给 `Music Player` 去播放它们。\n\n  然后在对照上图，就可以大概知道一个情况了。\n\n  了解数据库的状态的改变，这需要 [`MPMediaLibraryDidChangeNotification`](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaLibrary_ClassReference/index.html#//apple_ref/c/data/MPMediaLibraryDidChangeNotification) 来作为通知。\n\n\n\n ---\n\n  返回的内容是一个 `MPMediaItem` 的数组，`MPMediaItem` 包含了一个媒体文件所有信息。\n\n  获取所有的音乐文件，我们还需要一个 [`MPMediaQuery`](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaQuery_ClassReference/index.html#//apple_ref/occ/cl/MPMediaQuery), 这个类的实例可以用于初始化播放器的播放内容。\n\n  ```{bash}\n  MPMediaQuery *mySong = [MPMediaQuery songsQuery]; // 这样我们就可以得到了本地音乐文件的所有内容啦\n\n  MPMediaItem *item =  [mySong items][0]; // 获取本地音乐文件的第一个文件\n\n  ```\n  [想对 MPMediaQuery 有更多的使用有更多的了解](#mediaQuery)\n  [更多关于播放队列](#moreAboutPlay)\n\n ---\n\n## <span id=\"play\">[Media playback](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/UsingMediaPlayback/UsingMediaPlayback.html#//apple_ref/doc/uid/TP40008765-CH100-SW1)</span>\n\n  - 播放的一些概念术语 ![Schematic representation of a music player object](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/musicPlayer.jpg)\n\n\n   说好的播放器，就需要一个播放器实例啦。那就是 `MPMusicPlayerController`.\n   ```{bash}\n   /* 生成一个播放器的实例 */\n   MPMusicPlayerController *player = [MPMusicPlayerController applicationMusicPlayer];\n   ```\n\n   但是，有了播放器，还需要播放的文件呢！上面我们的到了播放文件列表的一个 MPMediaQuery 实例。Just do it\n   ```{bash}\n   [player setQueueWithQuery: [MPMediaQuery songsQuery]];\n   /**\n   或者是\n     [player setQueueWithQuery: mySong];\n\n   */\n   ```\n\n   还没有完哦，如果播放器的播放状态改变了，我们也需要这个消息通知\n   ```{bash}\n   /**\n   ( handle_NowPlayingItemChanged: ) 和 ( handle_PlaybackStateChanged: ) 是自定义的方法。\n\n   在注销的时候，记得也把通知给注销掉哦。。。。。\n   */\n   // now playing\n   [notificationCenter addObserver:self\n                          selector:@selector(handle_NowPlayingItemChanged:)\n                              name:MPMusicPlayerControllerNowPlayingItemDidChangeNotification object:_myPlayer];\n\n    // playback state change\n    [notificationCenter addObserver:self\n                           selector:@selector(handle_PlaybackStateChanged:)\n                               name:MPMusicPlayerControllerPlaybackStateDidChangeNotification object:_myPlayer];\n\n    [player beginGeneratingPlaybackNotifications]; // player set the notification\n\n   ```\n\n   然后就可以开始播放了。。。\n   ```{bash}\n   /**\n   遵循了 `MPMediaPlayback` Delegate,\n\n   */\n   [player play]; // 播放\n\n   [_myPlayer pause]; // 暂停\n\n   [_myPlayer stop]; // 停止\n\n   [_myPlayer skipToBeginning]; // 重新开始播放\n\n   [_myPlayer skipToNextItem]; // 下一首\n\n   [_myPlayer skipToPreviousItem]; // 上一首\n\n   ... (还有一些都在这个实例里面的)\n\n   ```\n\n**到这里基本就没有了,一个简单的没有界面的播放器就完成了**\n\n---\n\n## <span id=\"mediaQuery\">更多关于 Media Query</span>\n\n  - Using a media query to access the device iPod library ![Using a media query to access the device iPod library](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/mediaQuery.jpg)\n\n  上文我们得到的 MPMediaQuery 的实例 mySong.和图中的 myQuery 一样的。\n\n\n  `media query` 提供了一个对于 `iPod Library` 的一个搜索描述，告诉数据库如何去获取相应的 `media item`，并且还有如何组织这些 `item`\n\n  有两个配置属性\n    - The `filter` is the description of what to retrieve. The filter is optional; a filterless query matches the entire iPod library.\n\n    - The `grouping` type is an optional key that specifies the arrangement to use for retrieved collections of media items.\n\n\n## <span id=\"moreAboutPlay\">更多关于播放队列</span>\n\n**有两种方法去设置播放的队列内容**\n\n  - Use a media item `collection`\n    ```{bash}\n    /**\n    musicPlayer 是 MPMusicPlayerController 的实例\n    */\n    [musicPlayer setQueueWithItemCollection: userMediaItemCollection];\n    ```\n\n  - Use a `media query`, which implicitly defines a collection\n    ```{bash}\n    /**\n    musicPlayer 是 MPMusicPlayerController 的实例\n    */\n    [musicPlayer setQueueWithQuery: [MPMediaQuery songsQuery]];\n    ```\n\n## <span id=\"moreLibrary\">更多关于使用iPod Library </span>\n\n- 如何使用更好的使用iPod Library ![Using the iPod library database access classes](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/database_access_classes.jpg)\n参考[官方文档](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/UsingTheiPodLibrary/UsingTheiPodLibrary.html)\n\n## <span id=\"itemPicker\">关于如何使用item picker</span>\n\n- 使用 Item Picker ![ The user interface of the media item picker](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/mediaPicker.jpg)\n\n[Using the Media Item Picker](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/UsingtheMediaItemPicker/UsingtheMediaItemPicker.html#//apple_ref/doc/uid/TP40008765-CH104-SW1)\n\n---\n\n## 参考链接信息\n[iPod Library Access Programming Guide](https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008765)\n\n[Media Player Framework Reference](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MediaPlayer_Framework/index.html#//apple_ref/doc/uid/TP40006952)\n\n[MPMusicPlayerController](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMusicPlayerController_ClassReference/index.html#//apple_ref/occ/cl/MPMusicPlayerController)\n\n[MPMediaPlayback](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaPlayback_protocol/index.html#//apple_ref/occ/intf/MPMediaPlayback)\n\n[MPMediaLibrary](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaLibrary_ClassReference/index.html#//apple_ref/occ/cl/MPMediaLibrary)\n","slug":"IOS-本地音乐播放","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzbl000lpe3q54c6klwv","content":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>  首先是了解一下 <code>iPod Library Access</code> ，知道本地音乐文件的来源。接着就是知道如何使用播放器的类实例 <code>MPMusicPlayerController</code> ，去播放本地的音乐文件。这样基本就可以了，为了把Apple的文档使用多一些。尝试使用 <code>Media item picker</code>，深入再操作一下 <code>iPod Library</code>.</p>\n<p>  接触的类有:</p>\n<ul>\n<li>MPMediaItem</li>\n<li>MPMusicPlayerController</li>\n<li>MPMediaQuery</li>\n</ul>\n<p>  其他参考类</p>\n<ul>\n<li>MPMediaGroupingAlbum</li>\n<li>MPMediaLibrary</li>\n</ul>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#about\">关于 iPod Library </a></li>\n<li><a href=\"#play\">使用播放器放音乐</a></li>\n</ul>\n<h2 id=\"使用前提醒\"><a href=\"#使用前提醒\" class=\"headerlink\" title=\"使用前提醒\"></a>使用前提醒</h2><p>   需要头文件</p>\n   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> 在项目的 `General` 的 `Linked Frameworks and Libraries` 里面加入 `MediaPlayer.framework`</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">#import &lt;MediaPlayer/MediaPlayer.h&gt; /* 在你需要播放器的文件里加上这个头文件 */</span><br></pre></td></tr></table></figure>\n<h2 id=\"About-iPod-Library-Access\"><a href=\"#About-iPod-Library-Access\" class=\"headerlink\" title=\"About iPod Library Access\"></a><span id=\"about\"><a href=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/AboutiPodLibraryAccess/AboutiPodLibraryAccess.html#//apple_ref/doc/uid/TP40008765-CH103-SW9\" target=\"_blank\" rel=\"external\">About iPod Library Access</a></span></h2><p>  如果你想播放本地的音乐，首先你要知道它存放的位置，iPod Library 就是存放它的地方。</p>\n<p>  而这个地方也是一个数据库</p>\n<hr>\n<ul>\n<li><p>先看图 <img src=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/iPodLibraryAccessOverview.jpg\" alt=\"Using iPod library access\"></p>\n<p>然后就是，我们的应用使用 <code>Media Query</code> 去获取 <code>iPod Library</code> 的音乐文件，然后应用交给 <code>Music Player</code> 去播放它们。</p>\n<p>然后在对照上图，就可以大概知道一个情况了。</p>\n<p>了解数据库的状态的改变，这需要 <a href=\"https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaLibrary_ClassReference/index.html#//apple_ref/c/data/MPMediaLibraryDidChangeNotification\" target=\"_blank\" rel=\"external\"><code>MPMediaLibraryDidChangeNotification</code></a> 来作为通知。</p>\n</li>\n</ul>\n<hr>\n<p>  返回的内容是一个 <code>MPMediaItem</code> 的数组，<code>MPMediaItem</code> 包含了一个媒体文件所有信息。</p>\n<p>  获取所有的音乐文件，我们还需要一个 <a href=\"https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaQuery_ClassReference/index.html#//apple_ref/occ/cl/MPMediaQuery\" target=\"_blank\" rel=\"external\"><code>MPMediaQuery</code></a>, 这个类的实例可以用于初始化播放器的播放内容。</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MPMediaQuery *mySong = [MPMediaQuery songsQuery]; // 这样我们就可以得到了本地音乐文件的所有内容啦</span><br><span class=\"line\"></span><br><span class=\"line\">MPMediaItem *item =  [mySong items][0]; // 获取本地音乐文件的第一个文件</span><br></pre></td></tr></table></figure>\n<p>  <a href=\"#mediaQuery\">想对 MPMediaQuery 有更多的使用有更多的了解</a><br>  <a href=\"#moreAboutPlay\">更多关于播放队列</a></p>\n<hr>\n<h2 id=\"Media-playback\"><a href=\"#Media-playback\" class=\"headerlink\" title=\"Media playback\"></a><span id=\"play\"><a href=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/UsingMediaPlayback/UsingMediaPlayback.html#//apple_ref/doc/uid/TP40008765-CH100-SW1\" target=\"_blank\" rel=\"external\">Media playback</a></span></h2><ul>\n<li>播放的一些概念术语 <img src=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/musicPlayer.jpg\" alt=\"Schematic representation of a music player object\"></li>\n</ul>\n<p>   说好的播放器，就需要一个播放器实例啦。那就是 <code>MPMusicPlayerController</code>.<br>   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 生成一个播放器的实例 */</span><br><span class=\"line\">MPMusicPlayerController *player = [MPMusicPlayerController applicationMusicPlayer];</span><br></pre></td></tr></table></figure></p>\n<p>   但是，有了播放器，还需要播放的文件呢！上面我们的到了播放文件列表的一个 MPMediaQuery 实例。Just do it<br>   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[player setQueueWithQuery: [MPMediaQuery songsQuery]];</span><br><span class=\"line\">/**</span><br><span class=\"line\">或者是</span><br><span class=\"line\">  [player setQueueWithQuery: mySong];</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span><br></pre></td></tr></table></figure></p>\n<p>   还没有完哦，如果播放器的播放状态改变了，我们也需要这个消息通知<br>   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">( handle_NowPlayingItemChanged: ) 和 ( handle_PlaybackStateChanged: ) 是自定义的方法。</span><br><span class=\"line\"></span><br><span class=\"line\">在注销的时候，记得也把通知给注销掉哦。。。。。</span><br><span class=\"line\">*/</span><br><span class=\"line\">// now playing</span><br><span class=\"line\">[notificationCenter addObserver:self</span><br><span class=\"line\">                       selector:@selector(handle_NowPlayingItemChanged:)</span><br><span class=\"line\">                           name:MPMusicPlayerControllerNowPlayingItemDidChangeNotification object:_myPlayer];</span><br><span class=\"line\"></span><br><span class=\"line\"> // playback state change</span><br><span class=\"line\"> [notificationCenter addObserver:self</span><br><span class=\"line\">                        selector:@selector(handle_PlaybackStateChanged:)</span><br><span class=\"line\">                            name:MPMusicPlayerControllerPlaybackStateDidChangeNotification object:_myPlayer];</span><br><span class=\"line\"></span><br><span class=\"line\"> [player beginGeneratingPlaybackNotifications]; // player set the notification</span><br></pre></td></tr></table></figure></p>\n<p>   然后就可以开始播放了。。。<br>   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">遵循了 `MPMediaPlayback` Delegate,</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span><br><span class=\"line\">[player play]; // 播放</span><br><span class=\"line\"></span><br><span class=\"line\">[_myPlayer pause]; // 暂停</span><br><span class=\"line\"></span><br><span class=\"line\">[_myPlayer stop]; // 停止</span><br><span class=\"line\"></span><br><span class=\"line\">[_myPlayer skipToBeginning]; // 重新开始播放</span><br><span class=\"line\"></span><br><span class=\"line\">[_myPlayer skipToNextItem]; // 下一首</span><br><span class=\"line\"></span><br><span class=\"line\">[_myPlayer skipToPreviousItem]; // 上一首</span><br><span class=\"line\"></span><br><span class=\"line\">... (还有一些都在这个实例里面的)</span><br></pre></td></tr></table></figure></p>\n<p><strong>到这里基本就没有了,一个简单的没有界面的播放器就完成了</strong></p>\n<hr>\n<h2 id=\"更多关于-Media-Query\"><a href=\"#更多关于-Media-Query\" class=\"headerlink\" title=\"更多关于 Media Query\"></a><span id=\"mediaQuery\">更多关于 Media Query</span></h2><ul>\n<li><p>Using a media query to access the device iPod library <img src=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/mediaQuery.jpg\" alt=\"Using a media query to access the device iPod library\"></p>\n<p>上文我们得到的 MPMediaQuery 的实例 mySong.和图中的 myQuery 一样的。</p>\n</li>\n</ul>\n<p>  <code>media query</code> 提供了一个对于 <code>iPod Library</code> 的一个搜索描述，告诉数据库如何去获取相应的 <code>media item</code>，并且还有如何组织这些 <code>item</code></p>\n<p>  有两个配置属性</p>\n<pre><code>- The `filter` is the description of what to retrieve. The filter is optional; a filterless query matches the entire iPod library.\n\n- The `grouping` type is an optional key that specifies the arrangement to use for retrieved collections of media items.\n</code></pre><h2 id=\"更多关于播放队列\"><a href=\"#更多关于播放队列\" class=\"headerlink\" title=\"更多关于播放队列\"></a><span id=\"moreAboutPlay\">更多关于播放队列</span></h2><p><strong>有两种方法去设置播放的队列内容</strong></p>\n<ul>\n<li><p>Use a media item <code>collection</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">musicPlayer 是 MPMusicPlayerController 的实例</span><br><span class=\"line\">*/</span><br><span class=\"line\">[musicPlayer setQueueWithItemCollection: userMediaItemCollection];</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Use a <code>media query</code>, which implicitly defines a collection</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">musicPlayer 是 MPMusicPlayerController 的实例</span><br><span class=\"line\">*/</span><br><span class=\"line\">[musicPlayer setQueueWithQuery: [MPMediaQuery songsQuery]];</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"更多关于使用iPod-Library\"><a href=\"#更多关于使用iPod-Library\" class=\"headerlink\" title=\"更多关于使用iPod Library \"></a><span id=\"moreLibrary\">更多关于使用iPod Library </span></h2><ul>\n<li>如何使用更好的使用iPod Library <img src=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/database_access_classes.jpg\" alt=\"Using the iPod library database access classes\"><br>参考<a href=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/UsingTheiPodLibrary/UsingTheiPodLibrary.html\" target=\"_blank\" rel=\"external\">官方文档</a></li>\n</ul>\n<h2 id=\"关于如何使用item-picker\"><a href=\"#关于如何使用item-picker\" class=\"headerlink\" title=\"关于如何使用item picker\"></a><span id=\"itemPicker\">关于如何使用item picker</span></h2><ul>\n<li>使用 Item Picker <img src=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/mediaPicker.jpg\" alt=\" The user interface of the media item picker\"></li>\n</ul>\n<p><a href=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/UsingtheMediaItemPicker/UsingtheMediaItemPicker.html#//apple_ref/doc/uid/TP40008765-CH104-SW1\" target=\"_blank\" rel=\"external\">Using the Media Item Picker</a></p>\n<hr>\n<h2 id=\"参考链接信息\"><a href=\"#参考链接信息\" class=\"headerlink\" title=\"参考链接信息\"></a>参考链接信息</h2><p><a href=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008765\" target=\"_blank\" rel=\"external\">iPod Library Access Programming Guide</a></p>\n<p><a href=\"https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MediaPlayer_Framework/index.html#//apple_ref/doc/uid/TP40006952\" target=\"_blank\" rel=\"external\">Media Player Framework Reference</a></p>\n<p><a href=\"https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMusicPlayerController_ClassReference/index.html#//apple_ref/occ/cl/MPMusicPlayerController\" target=\"_blank\" rel=\"external\">MPMusicPlayerController</a></p>\n<p><a href=\"https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaPlayback_protocol/index.html#//apple_ref/occ/intf/MPMediaPlayback\" target=\"_blank\" rel=\"external\">MPMediaPlayback</a></p>\n<p><a href=\"https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaLibrary_ClassReference/index.html#//apple_ref/occ/cl/MPMediaLibrary\" target=\"_blank\" rel=\"external\">MPMediaLibrary</a></p>\n","excerpt":"","more":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>  首先是了解一下 <code>iPod Library Access</code> ，知道本地音乐文件的来源。接着就是知道如何使用播放器的类实例 <code>MPMusicPlayerController</code> ，去播放本地的音乐文件。这样基本就可以了，为了把Apple的文档使用多一些。尝试使用 <code>Media item picker</code>，深入再操作一下 <code>iPod Library</code>.</p>\n<p>  接触的类有:</p>\n<ul>\n<li>MPMediaItem</li>\n<li>MPMusicPlayerController</li>\n<li>MPMediaQuery</li>\n</ul>\n<p>  其他参考类</p>\n<ul>\n<li>MPMediaGroupingAlbum</li>\n<li>MPMediaLibrary</li>\n</ul>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#about\">关于 iPod Library </a></li>\n<li><a href=\"#play\">使用播放器放音乐</a></li>\n</ul>\n<h2 id=\"使用前提醒\"><a href=\"#使用前提醒\" class=\"headerlink\" title=\"使用前提醒\"></a>使用前提醒</h2><p>   需要头文件</p>\n   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> 在项目的 `General` 的 `Linked Frameworks and Libraries` 里面加入 `MediaPlayer.framework`</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">#import &lt;MediaPlayer/MediaPlayer.h&gt; /* 在你需要播放器的文件里加上这个头文件 */</span><br></pre></td></tr></table></figure>\n<h2 id=\"About-iPod-Library-Access\"><a href=\"#About-iPod-Library-Access\" class=\"headerlink\" title=\"About iPod Library Access\"></a><span id=\"about\"><a href=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/AboutiPodLibraryAccess/AboutiPodLibraryAccess.html#//apple_ref/doc/uid/TP40008765-CH103-SW9\">About iPod Library Access</a></span></h2><p>  如果你想播放本地的音乐，首先你要知道它存放的位置，iPod Library 就是存放它的地方。</p>\n<p>  而这个地方也是一个数据库</p>\n<hr>\n<ul>\n<li><p>先看图 <img src=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/iPodLibraryAccessOverview.jpg\" alt=\"Using iPod library access\"></p>\n<p>然后就是，我们的应用使用 <code>Media Query</code> 去获取 <code>iPod Library</code> 的音乐文件，然后应用交给 <code>Music Player</code> 去播放它们。</p>\n<p>然后在对照上图，就可以大概知道一个情况了。</p>\n<p>了解数据库的状态的改变，这需要 <a href=\"https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaLibrary_ClassReference/index.html#//apple_ref/c/data/MPMediaLibraryDidChangeNotification\"><code>MPMediaLibraryDidChangeNotification</code></a> 来作为通知。</p>\n</li>\n</ul>\n<hr>\n<p>  返回的内容是一个 <code>MPMediaItem</code> 的数组，<code>MPMediaItem</code> 包含了一个媒体文件所有信息。</p>\n<p>  获取所有的音乐文件，我们还需要一个 <a href=\"https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaQuery_ClassReference/index.html#//apple_ref/occ/cl/MPMediaQuery\"><code>MPMediaQuery</code></a>, 这个类的实例可以用于初始化播放器的播放内容。</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MPMediaQuery *mySong = [MPMediaQuery songsQuery]; // 这样我们就可以得到了本地音乐文件的所有内容啦</span><br><span class=\"line\"></span><br><span class=\"line\">MPMediaItem *item =  [mySong items][0]; // 获取本地音乐文件的第一个文件</span><br></pre></td></tr></table></figure>\n<p>  <a href=\"#mediaQuery\">想对 MPMediaQuery 有更多的使用有更多的了解</a><br>  <a href=\"#moreAboutPlay\">更多关于播放队列</a></p>\n<hr>\n<h2 id=\"Media-playback\"><a href=\"#Media-playback\" class=\"headerlink\" title=\"Media playback\"></a><span id=\"play\"><a href=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/UsingMediaPlayback/UsingMediaPlayback.html#//apple_ref/doc/uid/TP40008765-CH100-SW1\">Media playback</a></span></h2><ul>\n<li>播放的一些概念术语 <img src=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/musicPlayer.jpg\" alt=\"Schematic representation of a music player object\"></li>\n</ul>\n<p>   说好的播放器，就需要一个播放器实例啦。那就是 <code>MPMusicPlayerController</code>.<br>   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 生成一个播放器的实例 */</span><br><span class=\"line\">MPMusicPlayerController *player = [MPMusicPlayerController applicationMusicPlayer];</span><br></pre></td></tr></table></figure></p>\n<p>   但是，有了播放器，还需要播放的文件呢！上面我们的到了播放文件列表的一个 MPMediaQuery 实例。Just do it<br>   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[player setQueueWithQuery: [MPMediaQuery songsQuery]];</span><br><span class=\"line\">/**</span><br><span class=\"line\">或者是</span><br><span class=\"line\">  [player setQueueWithQuery: mySong];</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span><br></pre></td></tr></table></figure></p>\n<p>   还没有完哦，如果播放器的播放状态改变了，我们也需要这个消息通知<br>   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">( handle_NowPlayingItemChanged: ) 和 ( handle_PlaybackStateChanged: ) 是自定义的方法。</span><br><span class=\"line\"></span><br><span class=\"line\">在注销的时候，记得也把通知给注销掉哦。。。。。</span><br><span class=\"line\">*/</span><br><span class=\"line\">// now playing</span><br><span class=\"line\">[notificationCenter addObserver:self</span><br><span class=\"line\">                       selector:@selector(handle_NowPlayingItemChanged:)</span><br><span class=\"line\">                           name:MPMusicPlayerControllerNowPlayingItemDidChangeNotification object:_myPlayer];</span><br><span class=\"line\"></span><br><span class=\"line\"> // playback state change</span><br><span class=\"line\"> [notificationCenter addObserver:self</span><br><span class=\"line\">                        selector:@selector(handle_PlaybackStateChanged:)</span><br><span class=\"line\">                            name:MPMusicPlayerControllerPlaybackStateDidChangeNotification object:_myPlayer];</span><br><span class=\"line\"></span><br><span class=\"line\"> [player beginGeneratingPlaybackNotifications]; // player set the notification</span><br></pre></td></tr></table></figure></p>\n<p>   然后就可以开始播放了。。。<br>   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">遵循了 `MPMediaPlayback` Delegate,</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span><br><span class=\"line\">[player play]; // 播放</span><br><span class=\"line\"></span><br><span class=\"line\">[_myPlayer pause]; // 暂停</span><br><span class=\"line\"></span><br><span class=\"line\">[_myPlayer stop]; // 停止</span><br><span class=\"line\"></span><br><span class=\"line\">[_myPlayer skipToBeginning]; // 重新开始播放</span><br><span class=\"line\"></span><br><span class=\"line\">[_myPlayer skipToNextItem]; // 下一首</span><br><span class=\"line\"></span><br><span class=\"line\">[_myPlayer skipToPreviousItem]; // 上一首</span><br><span class=\"line\"></span><br><span class=\"line\">... (还有一些都在这个实例里面的)</span><br></pre></td></tr></table></figure></p>\n<p><strong>到这里基本就没有了,一个简单的没有界面的播放器就完成了</strong></p>\n<hr>\n<h2 id=\"更多关于-Media-Query\"><a href=\"#更多关于-Media-Query\" class=\"headerlink\" title=\"更多关于 Media Query\"></a><span id=\"mediaQuery\">更多关于 Media Query</span></h2><ul>\n<li><p>Using a media query to access the device iPod library <img src=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/mediaQuery.jpg\" alt=\"Using a media query to access the device iPod library\"></p>\n<p>上文我们得到的 MPMediaQuery 的实例 mySong.和图中的 myQuery 一样的。</p>\n</li>\n</ul>\n<p>  <code>media query</code> 提供了一个对于 <code>iPod Library</code> 的一个搜索描述，告诉数据库如何去获取相应的 <code>media item</code>，并且还有如何组织这些 <code>item</code></p>\n<p>  有两个配置属性</p>\n<pre><code>- The `filter` is the description of what to retrieve. The filter is optional; a filterless query matches the entire iPod library.\n\n- The `grouping` type is an optional key that specifies the arrangement to use for retrieved collections of media items.\n</code></pre><h2 id=\"更多关于播放队列\"><a href=\"#更多关于播放队列\" class=\"headerlink\" title=\"更多关于播放队列\"></a><span id=\"moreAboutPlay\">更多关于播放队列</span></h2><p><strong>有两种方法去设置播放的队列内容</strong></p>\n<ul>\n<li><p>Use a media item <code>collection</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">musicPlayer 是 MPMusicPlayerController 的实例</span><br><span class=\"line\">*/</span><br><span class=\"line\">[musicPlayer setQueueWithItemCollection: userMediaItemCollection];</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Use a <code>media query</code>, which implicitly defines a collection</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">musicPlayer 是 MPMusicPlayerController 的实例</span><br><span class=\"line\">*/</span><br><span class=\"line\">[musicPlayer setQueueWithQuery: [MPMediaQuery songsQuery]];</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"更多关于使用iPod-Library\"><a href=\"#更多关于使用iPod-Library\" class=\"headerlink\" title=\"更多关于使用iPod Library \"></a><span id=\"moreLibrary\">更多关于使用iPod Library </span></h2><ul>\n<li>如何使用更好的使用iPod Library <img src=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/database_access_classes.jpg\" alt=\"Using the iPod library database access classes\"><br>参考<a href=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/UsingTheiPodLibrary/UsingTheiPodLibrary.html\">官方文档</a></li>\n</ul>\n<h2 id=\"关于如何使用item-picker\"><a href=\"#关于如何使用item-picker\" class=\"headerlink\" title=\"关于如何使用item picker\"></a><span id=\"itemPicker\">关于如何使用item picker</span></h2><ul>\n<li>使用 Item Picker <img src=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Art/mediaPicker.jpg\" alt=\" The user interface of the media item picker\"></li>\n</ul>\n<p><a href=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/UsingtheMediaItemPicker/UsingtheMediaItemPicker.html#//apple_ref/doc/uid/TP40008765-CH104-SW1\">Using the Media Item Picker</a></p>\n<hr>\n<h2 id=\"参考链接信息\"><a href=\"#参考链接信息\" class=\"headerlink\" title=\"参考链接信息\"></a>参考链接信息</h2><p><a href=\"https://developer.apple.com/library/ios/documentation/Audio/Conceptual/iPodLibraryAccess_Guide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008765\">iPod Library Access Programming Guide</a></p>\n<p><a href=\"https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MediaPlayer_Framework/index.html#//apple_ref/doc/uid/TP40006952\">Media Player Framework Reference</a></p>\n<p><a href=\"https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMusicPlayerController_ClassReference/index.html#//apple_ref/occ/cl/MPMusicPlayerController\">MPMusicPlayerController</a></p>\n<p><a href=\"https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaPlayback_protocol/index.html#//apple_ref/occ/intf/MPMediaPlayback\">MPMediaPlayback</a></p>\n<p><a href=\"https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaLibrary_ClassReference/index.html#//apple_ref/occ/cl/MPMediaLibrary\">MPMediaLibrary</a></p>\n"},{"title":"KVC 键路径的访问","date":"2016-03-13T15:03:47.000Z","_content":"\n## 路径访问简介\n\n   路径访问就是在类中还有类的实例，那么如何深层次的去访问呢？\n   通过路径访问的方式去实现\n\n## 方法调用\n\n  ``` java\n   /**\n   以点切分键路径，并使用第一个键接收器发送 valueForKey: 方法，然后再使用键路径的下一个键，向\n   得到的对象发送 valueForKey: 的方法，反复直到返回最后获得的对象。\n\n   */\n   - (id) valueForKeyPath: (NSString *)keyPath\n\n   /**\n   与 valueForKeyPath: 方法同样取出对象，这里只对路径中的最后一个键调用 setValue:forKey:\n   方法，并设定其属性 value.\n\n   */\n   - (void) setValue: (id)value\n          forKeyPath: (NSString *) keyPath\n  ```\n\n## 实验证明\n\n### 两个类\n- Person\n``` java\n@interface Person: NSObject\n{\n    NSString  *name;\n    NSString *email;\n    int         age;\n}\n\n@end\n@implementation Person\n@end\n```\n- WorkingGroup\n``` java\n@interface WorkingGroup: NSObject\n{\n   Person          *leader;   // the leader\n}\n@end\n\n@implementation WorkingGroup\n@end\n```\n\n### main.m\n``` java\nint main(void)\n{\n\n  @autoreleasepool{\n        NSLog(@\"start\");\n\n       Person *p = [[Person alloc] init];\n       [p setValue:@\"hehe\" forKey:@\"name\"];\n\n       WorkingGroup *aGroup = [[WorkingGroup alloc] init];\n       [aGroup setValue:p forKey:@\"leader\"];\n\n       NSLog(@\"start to move\");\n\n        id aPerson = [aGroup valueForKey:@\"leader\"];\n        id name = [aPerson valueForKey:@\"name\"];\n\n        NSLog(@\"without path => name: %@\", name);\n\n        // 这里实现 键路径的查询\n        id p_name = [aGroup valueForKeyPath:@\"leader.name\"];\n\n        NSLog(@\"with path => name: %@\", p_name);\n\n }\n\n  return 0;\n}\n```\n\n### 结果\n\n``` bash\n$ clang keyPathOperation.m -framework Foundation\n$ ./a.out\n2016-03-14 00:30:52.111 a.out[3880:429793] start\n2016-03-14 00:30:52.112 a.out[3880:429793] start to move\n2016-03-14 00:30:52.113 a.out[3880:429793] without path => name: hehe\n2016-03-14 00:30:52.113 a.out[3880:429793] with path => name: hehe\n```\n","source":"_posts/KVC-键路径的访问.md","raw":"title: KVC 键路径的访问\ndate: 2016-03-13 23:03:47\ntags:\n- KVC\n- IOS\n- keyPath\n\n---\n\n## 路径访问简介\n\n   路径访问就是在类中还有类的实例，那么如何深层次的去访问呢？\n   通过路径访问的方式去实现\n\n## 方法调用\n\n  ``` java\n   /**\n   以点切分键路径，并使用第一个键接收器发送 valueForKey: 方法，然后再使用键路径的下一个键，向\n   得到的对象发送 valueForKey: 的方法，反复直到返回最后获得的对象。\n\n   */\n   - (id) valueForKeyPath: (NSString *)keyPath\n\n   /**\n   与 valueForKeyPath: 方法同样取出对象，这里只对路径中的最后一个键调用 setValue:forKey:\n   方法，并设定其属性 value.\n\n   */\n   - (void) setValue: (id)value\n          forKeyPath: (NSString *) keyPath\n  ```\n\n## 实验证明\n\n### 两个类\n- Person\n``` java\n@interface Person: NSObject\n{\n    NSString  *name;\n    NSString *email;\n    int         age;\n}\n\n@end\n@implementation Person\n@end\n```\n- WorkingGroup\n``` java\n@interface WorkingGroup: NSObject\n{\n   Person          *leader;   // the leader\n}\n@end\n\n@implementation WorkingGroup\n@end\n```\n\n### main.m\n``` java\nint main(void)\n{\n\n  @autoreleasepool{\n        NSLog(@\"start\");\n\n       Person *p = [[Person alloc] init];\n       [p setValue:@\"hehe\" forKey:@\"name\"];\n\n       WorkingGroup *aGroup = [[WorkingGroup alloc] init];\n       [aGroup setValue:p forKey:@\"leader\"];\n\n       NSLog(@\"start to move\");\n\n        id aPerson = [aGroup valueForKey:@\"leader\"];\n        id name = [aPerson valueForKey:@\"name\"];\n\n        NSLog(@\"without path => name: %@\", name);\n\n        // 这里实现 键路径的查询\n        id p_name = [aGroup valueForKeyPath:@\"leader.name\"];\n\n        NSLog(@\"with path => name: %@\", p_name);\n\n }\n\n  return 0;\n}\n```\n\n### 结果\n\n``` bash\n$ clang keyPathOperation.m -framework Foundation\n$ ./a.out\n2016-03-14 00:30:52.111 a.out[3880:429793] start\n2016-03-14 00:30:52.112 a.out[3880:429793] start to move\n2016-03-14 00:30:52.113 a.out[3880:429793] without path => name: hehe\n2016-03-14 00:30:52.113 a.out[3880:429793] with path => name: hehe\n```\n","slug":"KVC-键路径的访问","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzbp000ope3q72hyn4ro","content":"<h2 id=\"路径访问简介\"><a href=\"#路径访问简介\" class=\"headerlink\" title=\"路径访问简介\"></a>路径访问简介</h2><p>   路径访问就是在类中还有类的实例，那么如何深层次的去访问呢？<br>   通过路径访问的方式去实现</p>\n<h2 id=\"方法调用\"><a href=\"#方法调用\" class=\"headerlink\" title=\"方法调用\"></a>方法调用</h2>  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">以点切分键路径，并使用第一个键接收器发送 valueForKey: 方法，然后再使用键路径的下一个键，向</span><br><span class=\"line\">得到的对象发送 valueForKey: 的方法，反复直到返回最后获得的对象。</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (id) valueForKeyPath: (NSString *)keyPath</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">与 valueForKeyPath: 方法同样取出对象，这里只对路径中的最后一个键调用 setValue:forKey:</span><br><span class=\"line\">方法，并设定其属性 value.</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) setValue: (id)value</span><br><span class=\"line\">       forKeyPath: (NSString *) keyPath</span><br></pre></td></tr></table></figure>\n<h2 id=\"实验证明\"><a href=\"#实验证明\" class=\"headerlink\" title=\"实验证明\"></a>实验证明</h2><h3 id=\"两个类\"><a href=\"#两个类\" class=\"headerlink\" title=\"两个类\"></a>两个类</h3><ul>\n<li><p>Person</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@interface</span> Person: NSObject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSString  *name;</span><br><span class=\"line\">    NSString *email;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>         age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@end</span></span><br><span class=\"line\"><span class=\"meta\">@implementation</span> Person</span><br><span class=\"line\"><span class=\"meta\">@end</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>WorkingGroup</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@interface</span> WorkingGroup: NSObject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   Person          *leader;   <span class=\"comment\">// the leader</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">@end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@implementation</span> WorkingGroup</span><br><span class=\"line\"><span class=\"meta\">@end</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"main-m\"><a href=\"#main-m\" class=\"headerlink\" title=\"main.m\"></a>main.m</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@autoreleasepool</span>&#123;</span><br><span class=\"line\">        NSLog(@<span class=\"string\">\"start\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">       Person *p = [[Person alloc] init];</span><br><span class=\"line\">       [p setValue:@<span class=\"string\">\"hehe\"</span> forKey:@<span class=\"string\">\"name\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">       WorkingGroup *aGroup = [[WorkingGroup alloc] init];</span><br><span class=\"line\">       [aGroup setValue:p forKey:@<span class=\"string\">\"leader\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">       NSLog(@<span class=\"string\">\"start to move\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        id aPerson = [aGroup valueForKey:@<span class=\"string\">\"leader\"</span>];</span><br><span class=\"line\">        id name = [aPerson valueForKey:@<span class=\"string\">\"name\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        NSLog(@<span class=\"string\">\"without path =&gt; name: %@\"</span>, name);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 这里实现 键路径的查询</span></span><br><span class=\"line\">        id p_name = [aGroup valueForKeyPath:@<span class=\"string\">\"leader.name\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        NSLog(@<span class=\"string\">\"with path =&gt; name: %@\"</span>, p_name);</span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ clang keyPathOperation.m -framework Foundation</span><br><span class=\"line\">$ ./a.out</span><br><span class=\"line\">2016-03-14 00:30:52.111 a.out[3880:429793] start</span><br><span class=\"line\">2016-03-14 00:30:52.112 a.out[3880:429793] start to move</span><br><span class=\"line\">2016-03-14 00:30:52.113 a.out[3880:429793] without path =&gt; name: hehe</span><br><span class=\"line\">2016-03-14 00:30:52.113 a.out[3880:429793] with path =&gt; name: hehe</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"路径访问简介\"><a href=\"#路径访问简介\" class=\"headerlink\" title=\"路径访问简介\"></a>路径访问简介</h2><p>   路径访问就是在类中还有类的实例，那么如何深层次的去访问呢？<br>   通过路径访问的方式去实现</p>\n<h2 id=\"方法调用\"><a href=\"#方法调用\" class=\"headerlink\" title=\"方法调用\"></a>方法调用</h2>  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">以点切分键路径，并使用第一个键接收器发送 valueForKey: 方法，然后再使用键路径的下一个键，向</span><br><span class=\"line\">得到的对象发送 valueForKey: 的方法，反复直到返回最后获得的对象。</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (id) valueForKeyPath: (NSString *)keyPath</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">与 valueForKeyPath: 方法同样取出对象，这里只对路径中的最后一个键调用 setValue:forKey:</span><br><span class=\"line\">方法，并设定其属性 value.</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) setValue: (id)value</span><br><span class=\"line\">       forKeyPath: (NSString *) keyPath</span><br></pre></td></tr></table></figure>\n<h2 id=\"实验证明\"><a href=\"#实验证明\" class=\"headerlink\" title=\"实验证明\"></a>实验证明</h2><h3 id=\"两个类\"><a href=\"#两个类\" class=\"headerlink\" title=\"两个类\"></a>两个类</h3><ul>\n<li><p>Person</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@interface</span> Person: NSObject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSString  *name;</span><br><span class=\"line\">    NSString *email;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>         age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@end</span></span><br><span class=\"line\"><span class=\"meta\">@implementation</span> Person</span><br><span class=\"line\"><span class=\"meta\">@end</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>WorkingGroup</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@interface</span> WorkingGroup: NSObject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   Person          *leader;   <span class=\"comment\">// the leader</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">@end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@implementation</span> WorkingGroup</span><br><span class=\"line\"><span class=\"meta\">@end</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"main-m\"><a href=\"#main-m\" class=\"headerlink\" title=\"main.m\"></a>main.m</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@autoreleasepool</span>&#123;</span><br><span class=\"line\">        NSLog(@<span class=\"string\">\"start\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">       Person *p = [[Person alloc] init];</span><br><span class=\"line\">       [p setValue:@<span class=\"string\">\"hehe\"</span> forKey:@<span class=\"string\">\"name\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">       WorkingGroup *aGroup = [[WorkingGroup alloc] init];</span><br><span class=\"line\">       [aGroup setValue:p forKey:@<span class=\"string\">\"leader\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">       NSLog(@<span class=\"string\">\"start to move\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        id aPerson = [aGroup valueForKey:@<span class=\"string\">\"leader\"</span>];</span><br><span class=\"line\">        id name = [aPerson valueForKey:@<span class=\"string\">\"name\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        NSLog(@<span class=\"string\">\"without path =&gt; name: %@\"</span>, name);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 这里实现 键路径的查询</span></span><br><span class=\"line\">        id p_name = [aGroup valueForKeyPath:@<span class=\"string\">\"leader.name\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        NSLog(@<span class=\"string\">\"with path =&gt; name: %@\"</span>, p_name);</span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ clang keyPathOperation.m -framework Foundation</span><br><span class=\"line\">$ ./a.out</span><br><span class=\"line\">2016-03-14 00:30:52.111 a.out[3880:429793] start</span><br><span class=\"line\">2016-03-14 00:30:52.112 a.out[3880:429793] start to move</span><br><span class=\"line\">2016-03-14 00:30:52.113 a.out[3880:429793] without path =&gt; name: hehe</span><br><span class=\"line\">2016-03-14 00:30:52.113 a.out[3880:429793] with path =&gt; name: hehe</span><br></pre></td></tr></table></figure>\n"},{"title":"KVO","date":"2016-03-14T02:02:48.000Z","_content":"\n## KVO 基础\n\n   **解释**: `Key-Value observing` 就是某个对象的属性改变时通知其他对象的机制。对于[被观察](#e1)对象来说，`键值观察(KVO)就是注册想要监视的属性的键路径和观察者`。\n\n   **目的**: 为了在GUI组件和程序之间调整值\n\n   **过程**: 当`属性改变`的时候，[观察者](#e2)就会接收到消息，虽然和 `NSNotification` 通知相似，但是 KVO 不存在通知中心的对象，所以不可以指定消息的选择器。\n\n   `KVO` 可以实现监视属性， 一对一的关系， 一对多关系等各种形式的属性，可以使用 `NSObject` 来实现的。\n\n## KVO 准则\n\n   > 使用 `键值编码的准则` 来访问 `访问器` 或者 `实例变量` 的情况下，才可以监视属性的变化。\n\n   **在方法内直接改变实例变量的变量值是不能被监视的** \\> [实例验证代码](https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/kvo_%E6%96%B9%E6%B3%95%E5%86%85%E8%B0%83%E7%94%A8%E4%BB%A3%E7%A0%81.m)\n\n   结果显示：\n   ``` bash\n   $ clang kvcsample.m -fobjc-arc -framework Foundation\n   $ ./a.out\n   $\n   ```\n   *并没有结果*\n\n\n   **准则具体如下**：\n  1. 随`访问器`方法而改变 - 这个时候访问器就是 @proeprty 所产生的 get 和 set 的方法名字。\n  2. 使用 `setValue:forKey:` 和键进行改变。此时可能不经过访问器\n  3. 使用 `setValue:forKeyPath:` 和键路径进行变化，也可能不经过访问器。不仅仅是最终的监视对象的属性，当路径中的属性发生变化时也会被通知。\n\n## KVO 的方法\n\n- **注册监视**\n``` java\n - (void) addObserver:(NSObject \\*) anObserver\n    forKeyPath:(NSString \\*) keyPath\n       options:(NSKeyValueObservingOptions) options\n       context:(void *)context**\n```\n监视键路径 `keyPath` 中的某个属性，[观察者](#e2)为 `anObserver`，消息的发送者为[被观察者](#e1)\n\n属性发生变化的时候，就会发送通知消息。\n\n消息包含变化内容的字典数据，context 中指定的任意指针。\n\noptions 指定字典数据包含什么样的值。\n   `NSKeyValueObservingOptionNew` ... 提供改变后的属性值\n   `NSKeyValueObservingOptionOld` ... 提供改变前的属性值。\n\n当属性改变的时候，下面的消息将会发送给观察者。   \n\n- **获取监视通知**\n``` java\n - (void)observeValueForKeyPath:(NSString *) keyPath\n                       ofObject:(id)object\n                         change:(NSDictionary *)change\n                        context:(void *)context\n```\n`change` 保存着改变的相关信息，context 返回注册观察者时指定的值。\n\n如果要停止监视，实现一下方法\n\n- **停止监视**\n``` java\n- (void)removeObserver: (NSObject *) anObserver\n            forKeyPath: (NSString *) keyPath\n```\n\n- **change 字典中保存的入口**\n  `NSKeyValueChangeKindKey`\n      属性改变的种类\n  `NSKeyValueChangeNewKey`\n      属性的新对象的值\n  `NSKeyValueChangeOldKey`\n      属性旧对象的值\n  `NSKeyValueChangeIndexesKey`\n      动态数组中进行了插入，删除，置换。表示执行了这些操作的索引集合 --- NSIndexSet 类\n      的实例为入口值\n\n## 验证\n   [用于验证的代码](https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/KVOsample.m)\n\n   **结果显示:**\n   ``` bash\n   --- Received by <<Person, Jiro, HP=140>> ---\n    Object=<<Person, Taro, HP=800>>, Path=hitPoint\n    Change={\n        kind = 1;\n        new = 800;\n        old = 500;\n    }\n    --- Received by <<Dragon, Choco, HP=400>> ---\n    Object=<<Dragon, Choco, HP=400>>, Path=master.hitPoint\n    Change={\n        kind = 1;\n        new = 800;\n        old = 500;\n    }\n    --- Received by <<Dragon, Choco, HP=400>> ---\n    Object=<<Dragon, Choco, HP=400>>, Path=master.hitPoint\n    Change={\n        kind = 1;\n        new = 140;\n        old = 600;\n    }\n    --- Received by <<Person, Jiro, HP=140>> ---\n    Object=<<Person, Taro, HP=500>>, Path=hitPoint\n    Change={\n        kind = 1;\n        new = 500;\n        old = 600;\n    }\n    --- Received by <<Dragon, Choco, HP=400>> ---\n    Object=<<Dragon, Choco, HP=400>>, Path=master.hitPoint\n    Change={\n        kind = 1;\n        new = 340;\n        old = 140;\n    }\n  ```\n\n  **代码的结果分析**\n   (1) 改变 p1 的 hitPoint，并确实向 p2 和 dra 发送了消息\n   (2) 虽然调用了更改 hitPoint 的消息，但是没有收到相应的消息\n   (3) 改变了 master ，收到了 master.hitPoint 的消息。即使不是指定的键路径的属性，在产生改变时也会被通知\n   (4)，(5) 使用声明属性改变了 p2, p1 的 hitPoint 也可以被监视。\n   (6) 删除了通知后就收不到了。\n\n## 名词解释\n  ### <span id=\"e1\">被观察者</span>\n  ``` bash\n  属性值发生改变的时候，会被观察者了解到它的发生情况\n  ```\n  ### <span id=\"e2\">观察者</span>\n  ``` bash\n  设置观察对象的主动者\n  ```\n","source":"_posts/KVO.md","raw":"title: KVO\ndate: 2016-03-14 10:02:48\ntags:\n- KVO\n- IOS\n- 键值观察\n---\n\n## KVO 基础\n\n   **解释**: `Key-Value observing` 就是某个对象的属性改变时通知其他对象的机制。对于[被观察](#e1)对象来说，`键值观察(KVO)就是注册想要监视的属性的键路径和观察者`。\n\n   **目的**: 为了在GUI组件和程序之间调整值\n\n   **过程**: 当`属性改变`的时候，[观察者](#e2)就会接收到消息，虽然和 `NSNotification` 通知相似，但是 KVO 不存在通知中心的对象，所以不可以指定消息的选择器。\n\n   `KVO` 可以实现监视属性， 一对一的关系， 一对多关系等各种形式的属性，可以使用 `NSObject` 来实现的。\n\n## KVO 准则\n\n   > 使用 `键值编码的准则` 来访问 `访问器` 或者 `实例变量` 的情况下，才可以监视属性的变化。\n\n   **在方法内直接改变实例变量的变量值是不能被监视的** \\> [实例验证代码](https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/kvo_%E6%96%B9%E6%B3%95%E5%86%85%E8%B0%83%E7%94%A8%E4%BB%A3%E7%A0%81.m)\n\n   结果显示：\n   ``` bash\n   $ clang kvcsample.m -fobjc-arc -framework Foundation\n   $ ./a.out\n   $\n   ```\n   *并没有结果*\n\n\n   **准则具体如下**：\n  1. 随`访问器`方法而改变 - 这个时候访问器就是 @proeprty 所产生的 get 和 set 的方法名字。\n  2. 使用 `setValue:forKey:` 和键进行改变。此时可能不经过访问器\n  3. 使用 `setValue:forKeyPath:` 和键路径进行变化，也可能不经过访问器。不仅仅是最终的监视对象的属性，当路径中的属性发生变化时也会被通知。\n\n## KVO 的方法\n\n- **注册监视**\n``` java\n - (void) addObserver:(NSObject \\*) anObserver\n    forKeyPath:(NSString \\*) keyPath\n       options:(NSKeyValueObservingOptions) options\n       context:(void *)context**\n```\n监视键路径 `keyPath` 中的某个属性，[观察者](#e2)为 `anObserver`，消息的发送者为[被观察者](#e1)\n\n属性发生变化的时候，就会发送通知消息。\n\n消息包含变化内容的字典数据，context 中指定的任意指针。\n\noptions 指定字典数据包含什么样的值。\n   `NSKeyValueObservingOptionNew` ... 提供改变后的属性值\n   `NSKeyValueObservingOptionOld` ... 提供改变前的属性值。\n\n当属性改变的时候，下面的消息将会发送给观察者。   \n\n- **获取监视通知**\n``` java\n - (void)observeValueForKeyPath:(NSString *) keyPath\n                       ofObject:(id)object\n                         change:(NSDictionary *)change\n                        context:(void *)context\n```\n`change` 保存着改变的相关信息，context 返回注册观察者时指定的值。\n\n如果要停止监视，实现一下方法\n\n- **停止监视**\n``` java\n- (void)removeObserver: (NSObject *) anObserver\n            forKeyPath: (NSString *) keyPath\n```\n\n- **change 字典中保存的入口**\n  `NSKeyValueChangeKindKey`\n      属性改变的种类\n  `NSKeyValueChangeNewKey`\n      属性的新对象的值\n  `NSKeyValueChangeOldKey`\n      属性旧对象的值\n  `NSKeyValueChangeIndexesKey`\n      动态数组中进行了插入，删除，置换。表示执行了这些操作的索引集合 --- NSIndexSet 类\n      的实例为入口值\n\n## 验证\n   [用于验证的代码](https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/KVOsample.m)\n\n   **结果显示:**\n   ``` bash\n   --- Received by <<Person, Jiro, HP=140>> ---\n    Object=<<Person, Taro, HP=800>>, Path=hitPoint\n    Change={\n        kind = 1;\n        new = 800;\n        old = 500;\n    }\n    --- Received by <<Dragon, Choco, HP=400>> ---\n    Object=<<Dragon, Choco, HP=400>>, Path=master.hitPoint\n    Change={\n        kind = 1;\n        new = 800;\n        old = 500;\n    }\n    --- Received by <<Dragon, Choco, HP=400>> ---\n    Object=<<Dragon, Choco, HP=400>>, Path=master.hitPoint\n    Change={\n        kind = 1;\n        new = 140;\n        old = 600;\n    }\n    --- Received by <<Person, Jiro, HP=140>> ---\n    Object=<<Person, Taro, HP=500>>, Path=hitPoint\n    Change={\n        kind = 1;\n        new = 500;\n        old = 600;\n    }\n    --- Received by <<Dragon, Choco, HP=400>> ---\n    Object=<<Dragon, Choco, HP=400>>, Path=master.hitPoint\n    Change={\n        kind = 1;\n        new = 340;\n        old = 140;\n    }\n  ```\n\n  **代码的结果分析**\n   (1) 改变 p1 的 hitPoint，并确实向 p2 和 dra 发送了消息\n   (2) 虽然调用了更改 hitPoint 的消息，但是没有收到相应的消息\n   (3) 改变了 master ，收到了 master.hitPoint 的消息。即使不是指定的键路径的属性，在产生改变时也会被通知\n   (4)，(5) 使用声明属性改变了 p2, p1 的 hitPoint 也可以被监视。\n   (6) 删除了通知后就收不到了。\n\n## 名词解释\n  ### <span id=\"e1\">被观察者</span>\n  ``` bash\n  属性值发生改变的时候，会被观察者了解到它的发生情况\n  ```\n  ### <span id=\"e2\">观察者</span>\n  ``` bash\n  设置观察对象的主动者\n  ```\n","slug":"KVO","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzbq000ppe3qgne7xwhp","content":"<h2 id=\"KVO-基础\"><a href=\"#KVO-基础\" class=\"headerlink\" title=\"KVO 基础\"></a>KVO 基础</h2><p>   <strong>解释</strong>: <code>Key-Value observing</code> 就是某个对象的属性改变时通知其他对象的机制。对于<a href=\"#e1\">被观察</a>对象来说，<code>键值观察(KVO)就是注册想要监视的属性的键路径和观察者</code>。</p>\n<p>   <strong>目的</strong>: 为了在GUI组件和程序之间调整值</p>\n<p>   <strong>过程</strong>: 当<code>属性改变</code>的时候，<a href=\"#e2\">观察者</a>就会接收到消息，虽然和 <code>NSNotification</code> 通知相似，但是 KVO 不存在通知中心的对象，所以不可以指定消息的选择器。</p>\n<p>   <code>KVO</code> 可以实现监视属性， 一对一的关系， 一对多关系等各种形式的属性，可以使用 <code>NSObject</code> 来实现的。</p>\n<h2 id=\"KVO-准则\"><a href=\"#KVO-准则\" class=\"headerlink\" title=\"KVO 准则\"></a>KVO 准则</h2><blockquote>\n<p>使用 <code>键值编码的准则</code> 来访问 <code>访问器</code> 或者 <code>实例变量</code> 的情况下，才可以监视属性的变化。</p>\n</blockquote>\n<p>   <strong>在方法内直接改变实例变量的变量值是不能被监视的</strong> > <a href=\"https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/kvo_%E6%96%B9%E6%B3%95%E5%86%85%E8%B0%83%E7%94%A8%E4%BB%A3%E7%A0%81.m\" target=\"_blank\" rel=\"external\">实例验证代码</a></p>\n<p>   结果显示：<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ clang kvcsample.m -fobjc-arc -framework Foundation</span><br><span class=\"line\">$ ./a.out</span><br><span class=\"line\">$</span><br></pre></td></tr></table></figure></p>\n<p>   <em>并没有结果</em></p>\n<p>   <strong>准则具体如下</strong>：</p>\n<ol>\n<li>随<code>访问器</code>方法而改变 - 这个时候访问器就是 @proeprty 所产生的 get 和 set 的方法名字。</li>\n<li>使用 <code>setValue:forKey:</code> 和键进行改变。此时可能不经过访问器</li>\n<li>使用 <code>setValue:forKeyPath:</code> 和键路径进行变化，也可能不经过访问器。不仅仅是最终的监视对象的属性，当路径中的属性发生变化时也会被通知。</li>\n</ol>\n<h2 id=\"KVO-的方法\"><a href=\"#KVO-的方法\" class=\"headerlink\" title=\"KVO 的方法\"></a>KVO 的方法</h2><ul>\n<li><strong>注册监视</strong><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"keyword\">void</span>) addObserver:(NSObject \\*) anObserver</span><br><span class=\"line\">   forKeyPath:(NSString \\*) keyPath</span><br><span class=\"line\">      options:(NSKeyValueObservingOptions) options</span><br><span class=\"line\">      context:(<span class=\"keyword\">void</span> *)context**</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>监视键路径 <code>keyPath</code> 中的某个属性，<a href=\"#e2\">观察者</a>为 <code>anObserver</code>，消息的发送者为<a href=\"#e1\">被观察者</a></p>\n<p>属性发生变化的时候，就会发送通知消息。</p>\n<p>消息包含变化内容的字典数据，context 中指定的任意指针。</p>\n<p>options 指定字典数据包含什么样的值。<br>   <code>NSKeyValueObservingOptionNew</code> … 提供改变后的属性值<br>   <code>NSKeyValueObservingOptionOld</code> … 提供改变前的属性值。</p>\n<p>当属性改变的时候，下面的消息将会发送给观察者。   </p>\n<ul>\n<li><strong>获取监视通知</strong><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"keyword\">void</span>)observeValueForKeyPath:(NSString *) keyPath</span><br><span class=\"line\">                      ofObject:(id)object</span><br><span class=\"line\">                        change:(NSDictionary *)change</span><br><span class=\"line\">                       context:(<span class=\"keyword\">void</span> *)context</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><code>change</code> 保存着改变的相关信息，context 返回注册观察者时指定的值。</p>\n<p>如果要停止监视，实现一下方法</p>\n<ul>\n<li><p><strong>停止监视</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"keyword\">void</span>)removeObserver: (NSObject *) anObserver</span><br><span class=\"line\">            forKeyPath: (NSString *) keyPath</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>change 字典中保存的入口</strong><br><code>NSKeyValueChangeKindKey</code></p>\n<pre><code>属性改变的种类\n</code></pre><p><code>NSKeyValueChangeNewKey</code></p>\n<pre><code>属性的新对象的值\n</code></pre><p><code>NSKeyValueChangeOldKey</code></p>\n<pre><code>属性旧对象的值\n</code></pre><p><code>NSKeyValueChangeIndexesKey</code></p>\n<pre><code>动态数组中进行了插入，删除，置换。表示执行了这些操作的索引集合 --- NSIndexSet 类\n的实例为入口值\n</code></pre></li>\n</ul>\n<h2 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h2><p>   <a href=\"https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/KVOsample.m\" target=\"_blank\" rel=\"external\">用于验证的代码</a></p>\n<p>   <strong>结果显示:</strong><br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--- Received by &lt;&lt;Person, Jiro, HP=140&gt;&gt; ---</span><br><span class=\"line\"> Object=&lt;&lt;Person, Taro, HP=800&gt;&gt;, Path=hitPoint</span><br><span class=\"line\"> Change=&#123;</span><br><span class=\"line\">     kind = 1;</span><br><span class=\"line\">     new = 800;</span><br><span class=\"line\">     old = 500;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> --- Received by &lt;&lt;Dragon, Choco, HP=400&gt;&gt; ---</span><br><span class=\"line\"> Object=&lt;&lt;Dragon, Choco, HP=400&gt;&gt;, Path=master.hitPoint</span><br><span class=\"line\"> Change=&#123;</span><br><span class=\"line\">     kind = 1;</span><br><span class=\"line\">     new = 800;</span><br><span class=\"line\">     old = 500;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> --- Received by &lt;&lt;Dragon, Choco, HP=400&gt;&gt; ---</span><br><span class=\"line\"> Object=&lt;&lt;Dragon, Choco, HP=400&gt;&gt;, Path=master.hitPoint</span><br><span class=\"line\"> Change=&#123;</span><br><span class=\"line\">     kind = 1;</span><br><span class=\"line\">     new = 140;</span><br><span class=\"line\">     old = 600;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> --- Received by &lt;&lt;Person, Jiro, HP=140&gt;&gt; ---</span><br><span class=\"line\"> Object=&lt;&lt;Person, Taro, HP=500&gt;&gt;, Path=hitPoint</span><br><span class=\"line\"> Change=&#123;</span><br><span class=\"line\">     kind = 1;</span><br><span class=\"line\">     new = 500;</span><br><span class=\"line\">     old = 600;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> --- Received by &lt;&lt;Dragon, Choco, HP=400&gt;&gt; ---</span><br><span class=\"line\"> Object=&lt;&lt;Dragon, Choco, HP=400&gt;&gt;, Path=master.hitPoint</span><br><span class=\"line\"> Change=&#123;</span><br><span class=\"line\">     kind = 1;</span><br><span class=\"line\">     new = 340;</span><br><span class=\"line\">     old = 140;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>  <strong>代码的结果分析</strong><br>   (1) 改变 p1 的 hitPoint，并确实向 p2 和 dra 发送了消息<br>   (2) 虽然调用了更改 hitPoint 的消息，但是没有收到相应的消息<br>   (3) 改变了 master ，收到了 master.hitPoint 的消息。即使不是指定的键路径的属性，在产生改变时也会被通知<br>   (4)，(5) 使用声明属性改变了 p2, p1 的 hitPoint 也可以被监视。<br>   (6) 删除了通知后就收不到了。</p>\n<h2 id=\"名词解释\"><a href=\"#名词解释\" class=\"headerlink\" title=\"名词解释\"></a>名词解释</h2><h3 id=\"被观察者\"><a href=\"#被观察者\" class=\"headerlink\" title=\"被观察者\"></a><span id=\"e1\">被观察者</span></h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">属性值发生改变的时候，会被观察者了解到它的发生情况</span><br></pre></td></tr></table></figure>\n<h3 id=\"观察者\"><a href=\"#观察者\" class=\"headerlink\" title=\"观察者\"></a><span id=\"e2\">观察者</span></h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">设置观察对象的主动者</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"KVO-基础\"><a href=\"#KVO-基础\" class=\"headerlink\" title=\"KVO 基础\"></a>KVO 基础</h2><p>   <strong>解释</strong>: <code>Key-Value observing</code> 就是某个对象的属性改变时通知其他对象的机制。对于<a href=\"#e1\">被观察</a>对象来说，<code>键值观察(KVO)就是注册想要监视的属性的键路径和观察者</code>。</p>\n<p>   <strong>目的</strong>: 为了在GUI组件和程序之间调整值</p>\n<p>   <strong>过程</strong>: 当<code>属性改变</code>的时候，<a href=\"#e2\">观察者</a>就会接收到消息，虽然和 <code>NSNotification</code> 通知相似，但是 KVO 不存在通知中心的对象，所以不可以指定消息的选择器。</p>\n<p>   <code>KVO</code> 可以实现监视属性， 一对一的关系， 一对多关系等各种形式的属性，可以使用 <code>NSObject</code> 来实现的。</p>\n<h2 id=\"KVO-准则\"><a href=\"#KVO-准则\" class=\"headerlink\" title=\"KVO 准则\"></a>KVO 准则</h2><blockquote>\n<p>使用 <code>键值编码的准则</code> 来访问 <code>访问器</code> 或者 <code>实例变量</code> 的情况下，才可以监视属性的变化。</p>\n</blockquote>\n<p>   <strong>在方法内直接改变实例变量的变量值是不能被监视的</strong> > <a href=\"https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/kvo_%E6%96%B9%E6%B3%95%E5%86%85%E8%B0%83%E7%94%A8%E4%BB%A3%E7%A0%81.m\">实例验证代码</a></p>\n<p>   结果显示：<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ clang kvcsample.m -fobjc-arc -framework Foundation</span><br><span class=\"line\">$ ./a.out</span><br><span class=\"line\">$</span><br></pre></td></tr></table></figure></p>\n<p>   <em>并没有结果</em></p>\n<p>   <strong>准则具体如下</strong>：</p>\n<ol>\n<li>随<code>访问器</code>方法而改变 - 这个时候访问器就是 @proeprty 所产生的 get 和 set 的方法名字。</li>\n<li>使用 <code>setValue:forKey:</code> 和键进行改变。此时可能不经过访问器</li>\n<li>使用 <code>setValue:forKeyPath:</code> 和键路径进行变化，也可能不经过访问器。不仅仅是最终的监视对象的属性，当路径中的属性发生变化时也会被通知。</li>\n</ol>\n<h2 id=\"KVO-的方法\"><a href=\"#KVO-的方法\" class=\"headerlink\" title=\"KVO 的方法\"></a>KVO 的方法</h2><ul>\n<li><strong>注册监视</strong><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"keyword\">void</span>) addObserver:(NSObject \\*) anObserver</span><br><span class=\"line\">   forKeyPath:(NSString \\*) keyPath</span><br><span class=\"line\">      options:(NSKeyValueObservingOptions) options</span><br><span class=\"line\">      context:(<span class=\"keyword\">void</span> *)context**</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>监视键路径 <code>keyPath</code> 中的某个属性，<a href=\"#e2\">观察者</a>为 <code>anObserver</code>，消息的发送者为<a href=\"#e1\">被观察者</a></p>\n<p>属性发生变化的时候，就会发送通知消息。</p>\n<p>消息包含变化内容的字典数据，context 中指定的任意指针。</p>\n<p>options 指定字典数据包含什么样的值。<br>   <code>NSKeyValueObservingOptionNew</code> … 提供改变后的属性值<br>   <code>NSKeyValueObservingOptionOld</code> … 提供改变前的属性值。</p>\n<p>当属性改变的时候，下面的消息将会发送给观察者。   </p>\n<ul>\n<li><strong>获取监视通知</strong><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"keyword\">void</span>)observeValueForKeyPath:(NSString *) keyPath</span><br><span class=\"line\">                      ofObject:(id)object</span><br><span class=\"line\">                        change:(NSDictionary *)change</span><br><span class=\"line\">                       context:(<span class=\"keyword\">void</span> *)context</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><code>change</code> 保存着改变的相关信息，context 返回注册观察者时指定的值。</p>\n<p>如果要停止监视，实现一下方法</p>\n<ul>\n<li><p><strong>停止监视</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"keyword\">void</span>)removeObserver: (NSObject *) anObserver</span><br><span class=\"line\">            forKeyPath: (NSString *) keyPath</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>change 字典中保存的入口</strong><br><code>NSKeyValueChangeKindKey</code></p>\n<pre><code>属性改变的种类\n</code></pre><p><code>NSKeyValueChangeNewKey</code></p>\n<pre><code>属性的新对象的值\n</code></pre><p><code>NSKeyValueChangeOldKey</code></p>\n<pre><code>属性旧对象的值\n</code></pre><p><code>NSKeyValueChangeIndexesKey</code></p>\n<pre><code>动态数组中进行了插入，删除，置换。表示执行了这些操作的索引集合 --- NSIndexSet 类\n的实例为入口值\n</code></pre></li>\n</ul>\n<h2 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h2><p>   <a href=\"https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/KVOsample.m\">用于验证的代码</a></p>\n<p>   <strong>结果显示:</strong><br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--- Received by &lt;&lt;Person, Jiro, HP=140&gt;&gt; ---</span><br><span class=\"line\"> Object=&lt;&lt;Person, Taro, HP=800&gt;&gt;, Path=hitPoint</span><br><span class=\"line\"> Change=&#123;</span><br><span class=\"line\">     kind = 1;</span><br><span class=\"line\">     new = 800;</span><br><span class=\"line\">     old = 500;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> --- Received by &lt;&lt;Dragon, Choco, HP=400&gt;&gt; ---</span><br><span class=\"line\"> Object=&lt;&lt;Dragon, Choco, HP=400&gt;&gt;, Path=master.hitPoint</span><br><span class=\"line\"> Change=&#123;</span><br><span class=\"line\">     kind = 1;</span><br><span class=\"line\">     new = 800;</span><br><span class=\"line\">     old = 500;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> --- Received by &lt;&lt;Dragon, Choco, HP=400&gt;&gt; ---</span><br><span class=\"line\"> Object=&lt;&lt;Dragon, Choco, HP=400&gt;&gt;, Path=master.hitPoint</span><br><span class=\"line\"> Change=&#123;</span><br><span class=\"line\">     kind = 1;</span><br><span class=\"line\">     new = 140;</span><br><span class=\"line\">     old = 600;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> --- Received by &lt;&lt;Person, Jiro, HP=140&gt;&gt; ---</span><br><span class=\"line\"> Object=&lt;&lt;Person, Taro, HP=500&gt;&gt;, Path=hitPoint</span><br><span class=\"line\"> Change=&#123;</span><br><span class=\"line\">     kind = 1;</span><br><span class=\"line\">     new = 500;</span><br><span class=\"line\">     old = 600;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> --- Received by &lt;&lt;Dragon, Choco, HP=400&gt;&gt; ---</span><br><span class=\"line\"> Object=&lt;&lt;Dragon, Choco, HP=400&gt;&gt;, Path=master.hitPoint</span><br><span class=\"line\"> Change=&#123;</span><br><span class=\"line\">     kind = 1;</span><br><span class=\"line\">     new = 340;</span><br><span class=\"line\">     old = 140;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>  <strong>代码的结果分析</strong><br>   (1) 改变 p1 的 hitPoint，并确实向 p2 和 dra 发送了消息<br>   (2) 虽然调用了更改 hitPoint 的消息，但是没有收到相应的消息<br>   (3) 改变了 master ，收到了 master.hitPoint 的消息。即使不是指定的键路径的属性，在产生改变时也会被通知<br>   (4)，(5) 使用声明属性改变了 p2, p1 的 hitPoint 也可以被监视。<br>   (6) 删除了通知后就收不到了。</p>\n<h2 id=\"名词解释\"><a href=\"#名词解释\" class=\"headerlink\" title=\"名词解释\"></a>名词解释</h2><h3 id=\"被观察者\"><a href=\"#被观察者\" class=\"headerlink\" title=\"被观察者\"></a><span id=\"e1\">被观察者</span></h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">属性值发生改变的时候，会被观察者了解到它的发生情况</span><br></pre></td></tr></table></figure>\n<h3 id=\"观察者\"><a href=\"#观察者\" class=\"headerlink\" title=\"观察者\"></a><span id=\"e2\">观察者</span></h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">设置观察对象的主动者</span><br></pre></td></tr></table></figure>\n"},{"title":"Linux 文件属性的结构体","date":"2016-03-08T07:57:28.000Z","_content":"\n## 从帮助中查信息\n  ``` bash\n  $ man -k file | grep -i status\n  fileno [ferror]      (3)  - check and reset stream status\n  fstat                (3p)  - get file status\n  fstatat              (2)  - get file status relative to a directory file descriptor\n  fstat [stat]         (2)  - get file status\n  lstat [stat]         (2)  - get file status\n  stat                 (1)  - display file or file system status\n  stat                 (2)  - get file status\n  stat                 (3p)  - get file status\n\n  $ man 2 stat\n  ...(内容省略)\n  ```\n\n## 文件结构体所在的头文件\n\n - sys/stat.h\n ``` bash\n #include <sys/stat.h>\n ```\n\n## 文件结构体\n\n - 结构体 \\- `stat`\n ``` bash \n struct stat {\n               dev_t     st_dev;     /* ID of device containing file */\n               ino_t     st_ino;     /* inode number */\n               mode_t    st_mode;    /* protection */\n               nlink_t   st_nlink;   /* number of hard links */\n               uid_t     st_uid;     /* user ID of owner */\n               gid_t     st_gid;     /* group ID of owner */\n               dev_t     st_rdev;    /* device ID (if special file) */\n               off_t     st_size;    /* total size, in bytes */\n               blksize_t st_blksize; /* blocksize for file system I/O */\n               blkcnt_t  st_blocks;  /* number of 512B blocks allocated */\n               time_t    st_atime;   /* time of last access */\n               time_t    st_mtime;   /* time of last modification */\n               time_t    st_ctime;   /* time of last status change */\n           };\n ```\n","source":"_posts/Linux-文件属性的结构体.md","raw":"title: Linux 文件属性的结构体\ndate: 2016-03-08 15:57:28\ntags:\n- Linux\n- file\n- struct\n- stat\n---\n\n## 从帮助中查信息\n  ``` bash\n  $ man -k file | grep -i status\n  fileno [ferror]      (3)  - check and reset stream status\n  fstat                (3p)  - get file status\n  fstatat              (2)  - get file status relative to a directory file descriptor\n  fstat [stat]         (2)  - get file status\n  lstat [stat]         (2)  - get file status\n  stat                 (1)  - display file or file system status\n  stat                 (2)  - get file status\n  stat                 (3p)  - get file status\n\n  $ man 2 stat\n  ...(内容省略)\n  ```\n\n## 文件结构体所在的头文件\n\n - sys/stat.h\n ``` bash\n #include <sys/stat.h>\n ```\n\n## 文件结构体\n\n - 结构体 \\- `stat`\n ``` bash \n struct stat {\n               dev_t     st_dev;     /* ID of device containing file */\n               ino_t     st_ino;     /* inode number */\n               mode_t    st_mode;    /* protection */\n               nlink_t   st_nlink;   /* number of hard links */\n               uid_t     st_uid;     /* user ID of owner */\n               gid_t     st_gid;     /* group ID of owner */\n               dev_t     st_rdev;    /* device ID (if special file) */\n               off_t     st_size;    /* total size, in bytes */\n               blksize_t st_blksize; /* blocksize for file system I/O */\n               blkcnt_t  st_blocks;  /* number of 512B blocks allocated */\n               time_t    st_atime;   /* time of last access */\n               time_t    st_mtime;   /* time of last modification */\n               time_t    st_ctime;   /* time of last status change */\n           };\n ```\n","slug":"Linux-文件属性的结构体","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzbu000qpe3qgjbhclst","content":"<h2 id=\"从帮助中查信息\"><a href=\"#从帮助中查信息\" class=\"headerlink\" title=\"从帮助中查信息\"></a>从帮助中查信息</h2>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ man -k file | grep -i status</span><br><span class=\"line\">fileno [ferror]      (3)  - check and reset stream status</span><br><span class=\"line\">fstat                (3p)  - get file status</span><br><span class=\"line\">fstatat              (2)  - get file status relative to a directory file descriptor</span><br><span class=\"line\">fstat [<span class=\"built_in\">stat</span>]         (2)  - get file status</span><br><span class=\"line\">lstat [<span class=\"built_in\">stat</span>]         (2)  - get file status</span><br><span class=\"line\"><span class=\"built_in\">stat</span>                 (1)  - display file or file system status</span><br><span class=\"line\"><span class=\"built_in\">stat</span>                 (2)  - get file status</span><br><span class=\"line\"><span class=\"built_in\">stat</span>                 (3p)  - get file status</span><br><span class=\"line\"></span><br><span class=\"line\">$ man 2 <span class=\"built_in\">stat</span></span><br><span class=\"line\">...(内容省略)</span><br></pre></td></tr></table></figure>\n<h2 id=\"文件结构体所在的头文件\"><a href=\"#文件结构体所在的头文件\" class=\"headerlink\" title=\"文件结构体所在的头文件\"></a>文件结构体所在的头文件</h2><ul>\n<li>sys/stat.h<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#include &lt;sys/stat.h&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"文件结构体\"><a href=\"#文件结构体\" class=\"headerlink\" title=\"文件结构体\"></a>文件结构体</h2><ul>\n<li>结构体 - <code>stat</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct <span class=\"built_in\">stat</span> &#123;</span><br><span class=\"line\">              dev_t     st_dev;     /* ID of device containing file */</span><br><span class=\"line\">              ino_t     st_ino;     /* inode number */</span><br><span class=\"line\">              mode_t    st_mode;    /* protection */</span><br><span class=\"line\">              nlink_t   st_nlink;   /* number of hard links */</span><br><span class=\"line\">              uid_t     st_uid;     /* user ID of owner */</span><br><span class=\"line\">              gid_t     st_gid;     /* group ID of owner */</span><br><span class=\"line\">              dev_t     st_rdev;    /* device ID (<span class=\"keyword\">if</span> special file) */</span><br><span class=\"line\">              off_t     st_size;    /* total size, <span class=\"keyword\">in</span> bytes */</span><br><span class=\"line\">              blksize_t st_blksize; /* blocksize <span class=\"keyword\">for</span> file system I/O */</span><br><span class=\"line\">              blkcnt_t  st_blocks;  /* number of 512B blocks allocated */</span><br><span class=\"line\">              time_t    st_atime;   /* time of last access */</span><br><span class=\"line\">              time_t    st_mtime;   /* time of last modification */</span><br><span class=\"line\">              time_t    st_ctime;   /* time of last status change */</span><br><span class=\"line\">          &#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"从帮助中查信息\"><a href=\"#从帮助中查信息\" class=\"headerlink\" title=\"从帮助中查信息\"></a>从帮助中查信息</h2>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ man -k file | grep -i status</span><br><span class=\"line\">fileno [ferror]      (3)  - check and reset stream status</span><br><span class=\"line\">fstat                (3p)  - get file status</span><br><span class=\"line\">fstatat              (2)  - get file status relative to a directory file descriptor</span><br><span class=\"line\">fstat [<span class=\"built_in\">stat</span>]         (2)  - get file status</span><br><span class=\"line\">lstat [<span class=\"built_in\">stat</span>]         (2)  - get file status</span><br><span class=\"line\"><span class=\"built_in\">stat</span>                 (1)  - display file or file system status</span><br><span class=\"line\"><span class=\"built_in\">stat</span>                 (2)  - get file status</span><br><span class=\"line\"><span class=\"built_in\">stat</span>                 (3p)  - get file status</span><br><span class=\"line\"></span><br><span class=\"line\">$ man 2 <span class=\"built_in\">stat</span></span><br><span class=\"line\">...(内容省略)</span><br></pre></td></tr></table></figure>\n<h2 id=\"文件结构体所在的头文件\"><a href=\"#文件结构体所在的头文件\" class=\"headerlink\" title=\"文件结构体所在的头文件\"></a>文件结构体所在的头文件</h2><ul>\n<li>sys/stat.h<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#include &lt;sys/stat.h&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"文件结构体\"><a href=\"#文件结构体\" class=\"headerlink\" title=\"文件结构体\"></a>文件结构体</h2><ul>\n<li>结构体 - <code>stat</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct <span class=\"built_in\">stat</span> &#123;</span><br><span class=\"line\">              dev_t     st_dev;     /* ID of device containing file */</span><br><span class=\"line\">              ino_t     st_ino;     /* inode number */</span><br><span class=\"line\">              mode_t    st_mode;    /* protection */</span><br><span class=\"line\">              nlink_t   st_nlink;   /* number of hard links */</span><br><span class=\"line\">              uid_t     st_uid;     /* user ID of owner */</span><br><span class=\"line\">              gid_t     st_gid;     /* group ID of owner */</span><br><span class=\"line\">              dev_t     st_rdev;    /* device ID (<span class=\"keyword\">if</span> special file) */</span><br><span class=\"line\">              off_t     st_size;    /* total size, <span class=\"keyword\">in</span> bytes */</span><br><span class=\"line\">              blksize_t st_blksize; /* blocksize <span class=\"keyword\">for</span> file system I/O */</span><br><span class=\"line\">              blkcnt_t  st_blocks;  /* number of 512B blocks allocated */</span><br><span class=\"line\">              time_t    st_atime;   /* time of last access */</span><br><span class=\"line\">              time_t    st_mtime;   /* time of last modification */</span><br><span class=\"line\">              time_t    st_ctime;   /* time of last status change */</span><br><span class=\"line\">          &#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"Linux 文件属性读取","date":"2016-03-08T08:10:09.000Z","_content":"\n## 简单说一下\n\n  **使用 stat 函数，通过文件的绝对路径或者相对路径的文件名去打开相应文件的属性**\n  \n## 包含的头文件\n  ``` bash\n  #include <sys/stat.h>\n  ```\n\n## 参考函数\n  ``` bash\n  int stat(const char *path, struct stat *buf);\n\n  ```\n## 读取文件属性\n\n  ``` bash\n  ...\n\n  struct stat *infobuf;\n\n  if (stat(\"/etc/passwd\", &infobuf) == -1) {\n    perror(\"/etc/passwd\");\n  } else {\n    printf(\"The size of /etc/passwod is %d\\n\", infobuf.st_size);\n  }\n\n  ...\n\n  ```\n\n  [stat 结构](http://scofieldwyq.github.io/2016/03/08/Linux-%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93/)\n","source":"_posts/Linux-文件属性读取.md","raw":"title: Linux 文件属性读取\ndate: 2016-03-08 16:10:09\ntags:\n- Linux\n- file attribute\n- stat\n\n---\n\n## 简单说一下\n\n  **使用 stat 函数，通过文件的绝对路径或者相对路径的文件名去打开相应文件的属性**\n  \n## 包含的头文件\n  ``` bash\n  #include <sys/stat.h>\n  ```\n\n## 参考函数\n  ``` bash\n  int stat(const char *path, struct stat *buf);\n\n  ```\n## 读取文件属性\n\n  ``` bash\n  ...\n\n  struct stat *infobuf;\n\n  if (stat(\"/etc/passwd\", &infobuf) == -1) {\n    perror(\"/etc/passwd\");\n  } else {\n    printf(\"The size of /etc/passwod is %d\\n\", infobuf.st_size);\n  }\n\n  ...\n\n  ```\n\n  [stat 结构](http://scofieldwyq.github.io/2016/03/08/Linux-%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93/)\n","slug":"Linux-文件属性读取","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzbv000spe3qaph9s7ht","content":"<h2 id=\"简单说一下\"><a href=\"#简单说一下\" class=\"headerlink\" title=\"简单说一下\"></a>简单说一下</h2><p>  <strong>使用 stat 函数，通过文件的绝对路径或者相对路径的文件名去打开相应文件的属性</strong></p>\n<h2 id=\"包含的头文件\"><a href=\"#包含的头文件\" class=\"headerlink\" title=\"包含的头文件\"></a>包含的头文件</h2>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#include &lt;sys/stat.h&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参考函数\"><a href=\"#参考函数\" class=\"headerlink\" title=\"参考函数\"></a>参考函数</h2>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int <span class=\"built_in\">stat</span>(const char *path, struct <span class=\"built_in\">stat</span> *buf);</span><br></pre></td></tr></table></figure>\n<h2 id=\"读取文件属性\"><a href=\"#读取文件属性\" class=\"headerlink\" title=\"读取文件属性\"></a>读取文件属性</h2>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">struct <span class=\"built_in\">stat</span> *infobuf;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">stat</span>(<span class=\"string\">\"/etc/passwd\"</span>, &amp;infobuf) == -1) &#123;</span><br><span class=\"line\">  perror(<span class=\"string\">\"/etc/passwd\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"The size of /etc/passwod is %d\\n\"</span>, infobuf.st_size);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>  <a href=\"http://scofieldwyq.github.io/2016/03/08/Linux-%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93/\" target=\"_blank\" rel=\"external\">stat 结构</a></p>\n","excerpt":"","more":"<h2 id=\"简单说一下\"><a href=\"#简单说一下\" class=\"headerlink\" title=\"简单说一下\"></a>简单说一下</h2><p>  <strong>使用 stat 函数，通过文件的绝对路径或者相对路径的文件名去打开相应文件的属性</strong></p>\n<h2 id=\"包含的头文件\"><a href=\"#包含的头文件\" class=\"headerlink\" title=\"包含的头文件\"></a>包含的头文件</h2>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#include &lt;sys/stat.h&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参考函数\"><a href=\"#参考函数\" class=\"headerlink\" title=\"参考函数\"></a>参考函数</h2>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int <span class=\"built_in\">stat</span>(const char *path, struct <span class=\"built_in\">stat</span> *buf);</span><br></pre></td></tr></table></figure>\n<h2 id=\"读取文件属性\"><a href=\"#读取文件属性\" class=\"headerlink\" title=\"读取文件属性\"></a>读取文件属性</h2>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">struct <span class=\"built_in\">stat</span> *infobuf;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">stat</span>(<span class=\"string\">\"/etc/passwd\"</span>, &amp;infobuf) == -1) &#123;</span><br><span class=\"line\">  perror(<span class=\"string\">\"/etc/passwd\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"The size of /etc/passwod is %d\\n\"</span>, infobuf.st_size);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>  <a href=\"http://scofieldwyq.github.io/2016/03/08/Linux-%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93/\">stat 结构</a></p>\n"},{"title":"Linux 目录内容的结构","date":"2016-03-08T07:41:10.000Z","_content":"\n## 从帮助中查信息\n\n  ``` bash\n  $ man -k direct | grep read\n  readdir              (2)  - read directory entry\n  readdir              (3p)  - read a directory\n  readdir              (3)  - read a directory\n  readdir_r [readdir]  (3p)  - read a directory\n  readdir_r [readdir]  (3)  - read a directory\n  readlinkat           (2)  - read value of a symbolic link relative to a directory file descriptor\n  seekdir              (3)  - set the position of the next readdir() call in the directory stream\n\n  $ man 3 readdir\n  ...(内容省略)\n\n  ```\n\n## 目录结构所在的头文件\n\n  - dirent.h\n   ``` bash\n    #include <dirent.h>\n   ```\n\n## 保存目录内容的结构体\n\n  - 结构体 \\- `dirent`\n   ``` bash \n   struct dirent {\n                 ino_t          d_ino;       /* inode number */\n                 off_t          d_off;       /* offset to the next dirent */\n                 unsigned short d_reclen;    /* length of this record */\n                 unsigned char  d_type;      /* type of file; not supported\n                                                by all file system types */\n                 char           d_name[256]; /* filename */\n             };\n   ```\n","source":"_posts/Linux-目录内容的结构.md","raw":"title: Linux 目录内容的结构\ndate: 2016-03-08 15:41:10\ntags:\n- Linux\n- Directory\n- struct\n- dirent\n\n---\n\n## 从帮助中查信息\n\n  ``` bash\n  $ man -k direct | grep read\n  readdir              (2)  - read directory entry\n  readdir              (3p)  - read a directory\n  readdir              (3)  - read a directory\n  readdir_r [readdir]  (3p)  - read a directory\n  readdir_r [readdir]  (3)  - read a directory\n  readlinkat           (2)  - read value of a symbolic link relative to a directory file descriptor\n  seekdir              (3)  - set the position of the next readdir() call in the directory stream\n\n  $ man 3 readdir\n  ...(内容省略)\n\n  ```\n\n## 目录结构所在的头文件\n\n  - dirent.h\n   ``` bash\n    #include <dirent.h>\n   ```\n\n## 保存目录内容的结构体\n\n  - 结构体 \\- `dirent`\n   ``` bash \n   struct dirent {\n                 ino_t          d_ino;       /* inode number */\n                 off_t          d_off;       /* offset to the next dirent */\n                 unsigned short d_reclen;    /* length of this record */\n                 unsigned char  d_type;      /* type of file; not supported\n                                                by all file system types */\n                 char           d_name[256]; /* filename */\n             };\n   ```\n","slug":"Linux-目录内容的结构","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzbx000tpe3qk84rzh5u","content":"<h2 id=\"从帮助中查信息\"><a href=\"#从帮助中查信息\" class=\"headerlink\" title=\"从帮助中查信息\"></a>从帮助中查信息</h2>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ man -k direct | grep <span class=\"built_in\">read</span></span><br><span class=\"line\">readdir              (2)  - <span class=\"built_in\">read</span> directory entry</span><br><span class=\"line\">readdir              (3p)  - <span class=\"built_in\">read</span> a directory</span><br><span class=\"line\">readdir              (3)  - <span class=\"built_in\">read</span> a directory</span><br><span class=\"line\">readdir_r [readdir]  (3p)  - <span class=\"built_in\">read</span> a directory</span><br><span class=\"line\">readdir_r [readdir]  (3)  - <span class=\"built_in\">read</span> a directory</span><br><span class=\"line\">readlinkat           (2)  - <span class=\"built_in\">read</span> value of a symbolic link relative to a directory file descriptor</span><br><span class=\"line\">seekdir              (3)  - <span class=\"built_in\">set</span> the position of the next readdir() call <span class=\"keyword\">in</span> the directory stream</span><br><span class=\"line\"></span><br><span class=\"line\">$ man 3 readdir</span><br><span class=\"line\">...(内容省略)</span><br></pre></td></tr></table></figure>\n<h2 id=\"目录结构所在的头文件\"><a href=\"#目录结构所在的头文件\" class=\"headerlink\" title=\"目录结构所在的头文件\"></a>目录结构所在的头文件</h2><ul>\n<li>dirent.h<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#include &lt;dirent.h&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"保存目录内容的结构体\"><a href=\"#保存目录内容的结构体\" class=\"headerlink\" title=\"保存目录内容的结构体\"></a>保存目录内容的结构体</h2><ul>\n<li>结构体 - <code>dirent</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct dirent &#123;</span><br><span class=\"line\">              ino_t          d_ino;       /* inode number */</span><br><span class=\"line\">              off_t          d_off;       /* offset to the next dirent */</span><br><span class=\"line\">              unsigned short d_reclen;    /* length of this record */</span><br><span class=\"line\">              unsigned char  d_<span class=\"built_in\">type</span>;      /* <span class=\"built_in\">type</span> of file; not supported</span><br><span class=\"line\">                                             by all file system types */</span><br><span class=\"line\">              char           d_name[256]; /* filename */</span><br><span class=\"line\">          &#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"从帮助中查信息\"><a href=\"#从帮助中查信息\" class=\"headerlink\" title=\"从帮助中查信息\"></a>从帮助中查信息</h2>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ man -k direct | grep <span class=\"built_in\">read</span></span><br><span class=\"line\">readdir              (2)  - <span class=\"built_in\">read</span> directory entry</span><br><span class=\"line\">readdir              (3p)  - <span class=\"built_in\">read</span> a directory</span><br><span class=\"line\">readdir              (3)  - <span class=\"built_in\">read</span> a directory</span><br><span class=\"line\">readdir_r [readdir]  (3p)  - <span class=\"built_in\">read</span> a directory</span><br><span class=\"line\">readdir_r [readdir]  (3)  - <span class=\"built_in\">read</span> a directory</span><br><span class=\"line\">readlinkat           (2)  - <span class=\"built_in\">read</span> value of a symbolic link relative to a directory file descriptor</span><br><span class=\"line\">seekdir              (3)  - <span class=\"built_in\">set</span> the position of the next readdir() call <span class=\"keyword\">in</span> the directory stream</span><br><span class=\"line\"></span><br><span class=\"line\">$ man 3 readdir</span><br><span class=\"line\">...(内容省略)</span><br></pre></td></tr></table></figure>\n<h2 id=\"目录结构所在的头文件\"><a href=\"#目录结构所在的头文件\" class=\"headerlink\" title=\"目录结构所在的头文件\"></a>目录结构所在的头文件</h2><ul>\n<li>dirent.h<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#include &lt;dirent.h&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"保存目录内容的结构体\"><a href=\"#保存目录内容的结构体\" class=\"headerlink\" title=\"保存目录内容的结构体\"></a>保存目录内容的结构体</h2><ul>\n<li>结构体 - <code>dirent</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct dirent &#123;</span><br><span class=\"line\">              ino_t          d_ino;       /* inode number */</span><br><span class=\"line\">              off_t          d_off;       /* offset to the next dirent */</span><br><span class=\"line\">              unsigned short d_reclen;    /* length of this record */</span><br><span class=\"line\">              unsigned char  d_<span class=\"built_in\">type</span>;      /* <span class=\"built_in\">type</span> of file; not supported</span><br><span class=\"line\">                                             by all file system types */</span><br><span class=\"line\">              char           d_name[256]; /* filename */</span><br><span class=\"line\">          &#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"Linux 目录操作","date":"2016-03-08T08:09:48.000Z","_content":"\n## 简单说明一下\n\n  **目录是文件的列表，在Linux下对于目录来说是有系统调用可以使用来操作目录的。**\n\n  **目录的操作需要一个目录文件绝对路径或者当前目录的相对路径。**\n\n  **目录操作的大概过程为：打开目录，读取目录内容放入目录的结构体里面，然后对于结构体的数据进行呈现，最后不需要的时候关闭目录。**\n\n  **打开目录，会得到一个打开的目录文件描述符 `DIR` (一个无符号整数)，读取目录内容需要目录的文件描述符.**\n\n  **`DIR` 作为 打开目录的文件描述符的宏参数**\n\n---\n\n## open\n\n - 函数参考\n  ``` bash\n  DIR *opendir(const char *name); /* name: 目录的绝对路径或者相对路径 */\n  ```\n\n- 开始打开文件\n  ``` bash\n  /**\n  使用该函数打开目录，返回的目录文件描述符可以用于读取目录内容。\n\n  */\n  ...\n  DIR *dir_ptr ; /* 目录文件描述符指针 */\n\n  if ((dir_ptr = opendir(\"/\")) == NULL) { /* 打开目录 */\n    fprintf(stderr, \"something error: %s\", name);\n  }\n  ...\n\n  ```\n  ---\n\n## read\n\n  - 函数参考\n  ``` bash\n  int readdir(unsigned int fd, struct old_linux_dirent *dirp,\n                   unsigned int count);\n  ```\n\n  - 开始读取目录内容\n  ``` bash\n  /**\n  使用该目录文件描述符，读取目录文件的内容，放入结构体指针中。\n\n  */\n  ...\n  struct dirent *direntp; /* 目录结构体指针 */\n\n  while ((direntp = readdir(dir_ptr)) != NULL) { /* 读取存入结构体 */\n    printf(\"%s\\n\", direntp->d_name);\n  }\n  ...\n\n  ```\n\n  [dirent 结构体的内容](http://scofieldwyq.github.io/2016/03/08/Linux-%E7%9B%AE%E5%BD%95%E5%86%85%E5%AE%B9%E7%9A%84%E7%BB%93%E6%9E%84/)\n\n## close\n\n  - 函数参考\n  ``` bash\n  int closedir(DIR *dirp);\n  ```\n\n  - 关闭目录\n  ``` bash \n  /**\n  使用目录文件描述符关闭目录。\n\n  */\n  ...\n  closedir(dir_ptr);\n  ...\n\n  ```\n\n---\n\n## move curser\n","source":"_posts/Linux-目录操作.md","raw":"title: Linux 目录操作\ndate: 2016-03-08 16:09:48\ntags:\n- Linux\n- Directory\n- opendir\n- readdir\n- closedir\n- seekdir\n- Directory_operation\n\n---\n\n## 简单说明一下\n\n  **目录是文件的列表，在Linux下对于目录来说是有系统调用可以使用来操作目录的。**\n\n  **目录的操作需要一个目录文件绝对路径或者当前目录的相对路径。**\n\n  **目录操作的大概过程为：打开目录，读取目录内容放入目录的结构体里面，然后对于结构体的数据进行呈现，最后不需要的时候关闭目录。**\n\n  **打开目录，会得到一个打开的目录文件描述符 `DIR` (一个无符号整数)，读取目录内容需要目录的文件描述符.**\n\n  **`DIR` 作为 打开目录的文件描述符的宏参数**\n\n---\n\n## open\n\n - 函数参考\n  ``` bash\n  DIR *opendir(const char *name); /* name: 目录的绝对路径或者相对路径 */\n  ```\n\n- 开始打开文件\n  ``` bash\n  /**\n  使用该函数打开目录，返回的目录文件描述符可以用于读取目录内容。\n\n  */\n  ...\n  DIR *dir_ptr ; /* 目录文件描述符指针 */\n\n  if ((dir_ptr = opendir(\"/\")) == NULL) { /* 打开目录 */\n    fprintf(stderr, \"something error: %s\", name);\n  }\n  ...\n\n  ```\n  ---\n\n## read\n\n  - 函数参考\n  ``` bash\n  int readdir(unsigned int fd, struct old_linux_dirent *dirp,\n                   unsigned int count);\n  ```\n\n  - 开始读取目录内容\n  ``` bash\n  /**\n  使用该目录文件描述符，读取目录文件的内容，放入结构体指针中。\n\n  */\n  ...\n  struct dirent *direntp; /* 目录结构体指针 */\n\n  while ((direntp = readdir(dir_ptr)) != NULL) { /* 读取存入结构体 */\n    printf(\"%s\\n\", direntp->d_name);\n  }\n  ...\n\n  ```\n\n  [dirent 结构体的内容](http://scofieldwyq.github.io/2016/03/08/Linux-%E7%9B%AE%E5%BD%95%E5%86%85%E5%AE%B9%E7%9A%84%E7%BB%93%E6%9E%84/)\n\n## close\n\n  - 函数参考\n  ``` bash\n  int closedir(DIR *dirp);\n  ```\n\n  - 关闭目录\n  ``` bash \n  /**\n  使用目录文件描述符关闭目录。\n\n  */\n  ...\n  closedir(dir_ptr);\n  ...\n\n  ```\n\n---\n\n## move curser\n","slug":"Linux-目录操作","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzbz000vpe3qlqfp96kw","content":"<h2 id=\"简单说明一下\"><a href=\"#简单说明一下\" class=\"headerlink\" title=\"简单说明一下\"></a>简单说明一下</h2><p>  <strong>目录是文件的列表，在Linux下对于目录来说是有系统调用可以使用来操作目录的。</strong></p>\n<p>  <strong>目录的操作需要一个目录文件绝对路径或者当前目录的相对路径。</strong></p>\n<p>  <strong>目录操作的大概过程为：打开目录，读取目录内容放入目录的结构体里面，然后对于结构体的数据进行呈现，最后不需要的时候关闭目录。</strong></p>\n<p>  <strong>打开目录，会得到一个打开的目录文件描述符 <code>DIR</code> (一个无符号整数)，读取目录内容需要目录的文件描述符.</strong></p>\n<p>  <strong><code>DIR</code> 作为 打开目录的文件描述符的宏参数</strong></p>\n<hr>\n<h2 id=\"open\"><a href=\"#open\" class=\"headerlink\" title=\"open\"></a>open</h2><ul>\n<li>函数参考<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DIR *opendir(const char *name); /* name: 目录的绝对路径或者相对路径 */</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>开始打开文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">使用该函数打开目录，返回的目录文件描述符可以用于读取目录内容。</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span><br><span class=\"line\">...</span><br><span class=\"line\">DIR *dir_ptr ; /* 目录文件描述符指针 */</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ((dir_ptr = opendir(<span class=\"string\">\"/\"</span>)) == NULL) &#123; /* 打开目录 */</span><br><span class=\"line\">  fprintf(stderr, <span class=\"string\">\"something error: %s\"</span>, name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n</ul>\n<h2 id=\"read\"><a href=\"#read\" class=\"headerlink\" title=\"read\"></a>read</h2><ul>\n<li><p>函数参考</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int readdir(unsigned int fd, struct old_linux_dirent *dirp,</span><br><span class=\"line\">                 unsigned int count);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开始读取目录内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">使用该目录文件描述符，读取目录文件的内容，放入结构体指针中。</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span><br><span class=\"line\">...</span><br><span class=\"line\">struct dirent *direntp; /* 目录结构体指针 */</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> ((direntp = readdir(dir_ptr)) != NULL) &#123; /* 读取存入结构体 */</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\\n\"</span>, direntp-&gt;d_name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://scofieldwyq.github.io/2016/03/08/Linux-%E7%9B%AE%E5%BD%95%E5%86%85%E5%AE%B9%E7%9A%84%E7%BB%93%E6%9E%84/\" target=\"_blank\" rel=\"external\">dirent 结构体的内容</a></p>\n</li>\n</ul>\n<h2 id=\"close\"><a href=\"#close\" class=\"headerlink\" title=\"close\"></a>close</h2><ul>\n<li><p>函数参考</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int closedir(DIR *dirp);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">使用目录文件描述符关闭目录。</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span><br><span class=\"line\">...</span><br><span class=\"line\">closedir(dir_ptr);</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h2 id=\"move-curser\"><a href=\"#move-curser\" class=\"headerlink\" title=\"move curser\"></a>move curser</h2>","excerpt":"","more":"<h2 id=\"简单说明一下\"><a href=\"#简单说明一下\" class=\"headerlink\" title=\"简单说明一下\"></a>简单说明一下</h2><p>  <strong>目录是文件的列表，在Linux下对于目录来说是有系统调用可以使用来操作目录的。</strong></p>\n<p>  <strong>目录的操作需要一个目录文件绝对路径或者当前目录的相对路径。</strong></p>\n<p>  <strong>目录操作的大概过程为：打开目录，读取目录内容放入目录的结构体里面，然后对于结构体的数据进行呈现，最后不需要的时候关闭目录。</strong></p>\n<p>  <strong>打开目录，会得到一个打开的目录文件描述符 <code>DIR</code> (一个无符号整数)，读取目录内容需要目录的文件描述符.</strong></p>\n<p>  <strong><code>DIR</code> 作为 打开目录的文件描述符的宏参数</strong></p>\n<hr>\n<h2 id=\"open\"><a href=\"#open\" class=\"headerlink\" title=\"open\"></a>open</h2><ul>\n<li>函数参考<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DIR *opendir(const char *name); /* name: 目录的绝对路径或者相对路径 */</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>开始打开文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">使用该函数打开目录，返回的目录文件描述符可以用于读取目录内容。</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span><br><span class=\"line\">...</span><br><span class=\"line\">DIR *dir_ptr ; /* 目录文件描述符指针 */</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ((dir_ptr = opendir(<span class=\"string\">\"/\"</span>)) == NULL) &#123; /* 打开目录 */</span><br><span class=\"line\">  fprintf(stderr, <span class=\"string\">\"something error: %s\"</span>, name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n</ul>\n<h2 id=\"read\"><a href=\"#read\" class=\"headerlink\" title=\"read\"></a>read</h2><ul>\n<li><p>函数参考</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int readdir(unsigned int fd, struct old_linux_dirent *dirp,</span><br><span class=\"line\">                 unsigned int count);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开始读取目录内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">使用该目录文件描述符，读取目录文件的内容，放入结构体指针中。</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span><br><span class=\"line\">...</span><br><span class=\"line\">struct dirent *direntp; /* 目录结构体指针 */</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> ((direntp = readdir(dir_ptr)) != NULL) &#123; /* 读取存入结构体 */</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\\n\"</span>, direntp-&gt;d_name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://scofieldwyq.github.io/2016/03/08/Linux-%E7%9B%AE%E5%BD%95%E5%86%85%E5%AE%B9%E7%9A%84%E7%BB%93%E6%9E%84/\">dirent 结构体的内容</a></p>\n</li>\n</ul>\n<h2 id=\"close\"><a href=\"#close\" class=\"headerlink\" title=\"close\"></a>close</h2><ul>\n<li><p>函数参考</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int closedir(DIR *dirp);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">使用目录文件描述符关闭目录。</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span><br><span class=\"line\">...</span><br><span class=\"line\">closedir(dir_ptr);</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h2 id=\"move-curser\"><a href=\"#move-curser\" class=\"headerlink\" title=\"move curser\"></a>move curser</h2>"},{"title":"Mac 键盘快捷键","date":"2016-03-23T14:18:25.000Z","_content":"> 按组合键来执行通常需要鼠标、触控板或其他输入设备才能完成的操作。\n\n## 键盘上的表示\n - Command ⌘\n\n - Shift ⇧\n\n - Option ⌥\n\n - Control ⌃\n\n - Caps Lock ⇪\n\n - Fn\n\n ``` bash\n    如果您使用的是 Windows PC 专用键盘，请用 Alt 键代替 Option 键，用 Windows 标志键代替 Command 键。\n    有些 Mac 键盘和快捷键使用顶行中的特殊按键，这些按键上有音量图标、显示屏亮度图标和其他功能图标。\n    按下图标键可执行相应功能，或将其与 Fn 键组合使用来用作 F1、F2、F3 或其他标准功能键。\n ```\n## 快捷键的操作\n - 剪切、拷贝、粘贴和其他常用快捷键\n\n - 睡眠、注销和关机快捷键\n\n - 文稿快捷键\n\n - Finder 快捷键\n\n 具体详见 [Mac 键盘快捷键 - Apple 支持.pdf](https://github.com/scofieldWyq/wyqBlog/blob/master/resource/Mac%20%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE%20-%20Apple%20%E6%94%AF%E6%8C%81.pdf)\n\n## 参考链接\n- [Mac 键盘快捷键](https://support.apple.com/zh-cn/HT201236)\n","source":"_posts/Mac-键盘快捷键.md","raw":"title: Mac 键盘快捷键\ndate: 2016-03-23 22:18:25\ntags:\n- Mac\n- 快捷键\n\n---\n> 按组合键来执行通常需要鼠标、触控板或其他输入设备才能完成的操作。\n\n## 键盘上的表示\n - Command ⌘\n\n - Shift ⇧\n\n - Option ⌥\n\n - Control ⌃\n\n - Caps Lock ⇪\n\n - Fn\n\n ``` bash\n    如果您使用的是 Windows PC 专用键盘，请用 Alt 键代替 Option 键，用 Windows 标志键代替 Command 键。\n    有些 Mac 键盘和快捷键使用顶行中的特殊按键，这些按键上有音量图标、显示屏亮度图标和其他功能图标。\n    按下图标键可执行相应功能，或将其与 Fn 键组合使用来用作 F1、F2、F3 或其他标准功能键。\n ```\n## 快捷键的操作\n - 剪切、拷贝、粘贴和其他常用快捷键\n\n - 睡眠、注销和关机快捷键\n\n - 文稿快捷键\n\n - Finder 快捷键\n\n 具体详见 [Mac 键盘快捷键 - Apple 支持.pdf](https://github.com/scofieldWyq/wyqBlog/blob/master/resource/Mac%20%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE%20-%20Apple%20%E6%94%AF%E6%8C%81.pdf)\n\n## 参考链接\n- [Mac 键盘快捷键](https://support.apple.com/zh-cn/HT201236)\n","slug":"Mac-键盘快捷键","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzc0000xpe3qv4vatcdu","content":"<blockquote>\n<p>按组合键来执行通常需要鼠标、触控板或其他输入设备才能完成的操作。</p>\n</blockquote>\n<h2 id=\"键盘上的表示\"><a href=\"#键盘上的表示\" class=\"headerlink\" title=\"键盘上的表示\"></a>键盘上的表示</h2><ul>\n<li><p>Command ⌘</p>\n</li>\n<li><p>Shift ⇧</p>\n</li>\n<li><p>Option ⌥</p>\n</li>\n<li><p>Control ⌃</p>\n</li>\n<li><p>Caps Lock ⇪</p>\n</li>\n<li><p>Fn</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果您使用的是 Windows PC 专用键盘，请用 Alt 键代替 Option 键，用 Windows 标志键代替 Command 键。</span><br><span class=\"line\">有些 Mac 键盘和快捷键使用顶行中的特殊按键，这些按键上有音量图标、显示屏亮度图标和其他功能图标。</span><br><span class=\"line\">按下图标键可执行相应功能，或将其与 Fn 键组合使用来用作 F1、F2、F3 或其他标准功能键。</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"快捷键的操作\"><a href=\"#快捷键的操作\" class=\"headerlink\" title=\"快捷键的操作\"></a>快捷键的操作</h2><ul>\n<li><p>剪切、拷贝、粘贴和其他常用快捷键</p>\n</li>\n<li><p>睡眠、注销和关机快捷键</p>\n</li>\n<li><p>文稿快捷键</p>\n</li>\n<li><p>Finder 快捷键</p>\n<p>具体详见 <a href=\"https://github.com/scofieldWyq/wyqBlog/blob/master/resource/Mac%20%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE%20-%20Apple%20%E6%94%AF%E6%8C%81.pdf\" target=\"_blank\" rel=\"external\">Mac 键盘快捷键 - Apple 支持.pdf</a></p>\n</li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://support.apple.com/zh-cn/HT201236\" target=\"_blank\" rel=\"external\">Mac 键盘快捷键</a></li>\n</ul>\n","excerpt":"","more":"<blockquote>\n<p>按组合键来执行通常需要鼠标、触控板或其他输入设备才能完成的操作。</p>\n</blockquote>\n<h2 id=\"键盘上的表示\"><a href=\"#键盘上的表示\" class=\"headerlink\" title=\"键盘上的表示\"></a>键盘上的表示</h2><ul>\n<li><p>Command ⌘</p>\n</li>\n<li><p>Shift ⇧</p>\n</li>\n<li><p>Option ⌥</p>\n</li>\n<li><p>Control ⌃</p>\n</li>\n<li><p>Caps Lock ⇪</p>\n</li>\n<li><p>Fn</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果您使用的是 Windows PC 专用键盘，请用 Alt 键代替 Option 键，用 Windows 标志键代替 Command 键。</span><br><span class=\"line\">有些 Mac 键盘和快捷键使用顶行中的特殊按键，这些按键上有音量图标、显示屏亮度图标和其他功能图标。</span><br><span class=\"line\">按下图标键可执行相应功能，或将其与 Fn 键组合使用来用作 F1、F2、F3 或其他标准功能键。</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"快捷键的操作\"><a href=\"#快捷键的操作\" class=\"headerlink\" title=\"快捷键的操作\"></a>快捷键的操作</h2><ul>\n<li><p>剪切、拷贝、粘贴和其他常用快捷键</p>\n</li>\n<li><p>睡眠、注销和关机快捷键</p>\n</li>\n<li><p>文稿快捷键</p>\n</li>\n<li><p>Finder 快捷键</p>\n<p>具体详见 <a href=\"https://github.com/scofieldWyq/wyqBlog/blob/master/resource/Mac%20%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE%20-%20Apple%20%E6%94%AF%E6%8C%81.pdf\">Mac 键盘快捷键 - Apple 支持.pdf</a></p>\n</li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://support.apple.com/zh-cn/HT201236\">Mac 键盘快捷键</a></li>\n</ul>\n"},{"title":"Man为什么查不到和书上的相似的结果","date":"2016-03-04T02:33:37.000Z","_content":"\n## 解决man无法找到你想要的内容\n - [安装好man后，发现你查询的内容是 No manual entry for *** ](#q1)\n - [man -k {file} | grep {read} 没有结果](#q2)\n\n## <span id=\"q1\">1.安装好 `man` 后，发现你查询的内容是 `No manual entry for ***` </span>\n\n **原因： 没有安装 `man-pages`**\n\n **解决方案**\n ``` bash\n $ sudo yum install -y man-pages //如果权限问题，切换到root下\n ```\n\n## <span id=\"q2\">2.man -k {file} | grep {read} 没有结果</span>\n\n **原因：本地数据库没有更新**\n\n **解决方案**\n ``` bash \n $ sudo makewhatis //如果权限问题，切换到 root 下\n ```\n","source":"_posts/Man为什么查不到和书上的相似的结果.md","raw":"title: Man为什么查不到和书上的相似的结果\ndate: 2016-03-04 10:33:37\ntags:\n- Linux\n- Man\n- command line\n- keyword -k\n\n---\n\n## 解决man无法找到你想要的内容\n - [安装好man后，发现你查询的内容是 No manual entry for *** ](#q1)\n - [man -k {file} | grep {read} 没有结果](#q2)\n\n## <span id=\"q1\">1.安装好 `man` 后，发现你查询的内容是 `No manual entry for ***` </span>\n\n **原因： 没有安装 `man-pages`**\n\n **解决方案**\n ``` bash\n $ sudo yum install -y man-pages //如果权限问题，切换到root下\n ```\n\n## <span id=\"q2\">2.man -k {file} | grep {read} 没有结果</span>\n\n **原因：本地数据库没有更新**\n\n **解决方案**\n ``` bash \n $ sudo makewhatis //如果权限问题，切换到 root 下\n ```\n","slug":"Man为什么查不到和书上的相似的结果","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzc10010pe3q0khs1pru","content":"<h2 id=\"解决man无法找到你想要的内容\"><a href=\"#解决man无法找到你想要的内容\" class=\"headerlink\" title=\"解决man无法找到你想要的内容\"></a>解决man无法找到你想要的内容</h2><ul>\n<li><a href=\"#q1\">安装好man后，发现你查询的内容是 No manual entry for <em>*</em> </a></li>\n<li><a href=\"#q2\">man -k {file} | grep {read} 没有结果</a></li>\n</ul>\n<h2 id=\"1-安装好-man-后，发现你查询的内容是-No-manual-entry-for\"><a href=\"#1-安装好-man-后，发现你查询的内容是-No-manual-entry-for\" class=\"headerlink\" title=\"1.安装好 man 后，发现你查询的内容是 No manual entry for *** \"></a><span id=\"q1\">1.安装好 <code>man</code> 后，发现你查询的内容是 <code>No manual entry for ***</code> </span></h2><p> <strong>原因： 没有安装 <code>man-pages</code></strong></p>\n<p> <strong>解决方案</strong><br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install -y man-pages //如果权限问题，切换到root下</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-man-k-file-grep-read-没有结果\"><a href=\"#2-man-k-file-grep-read-没有结果\" class=\"headerlink\" title=\"2.man -k {file} | grep {read} 没有结果\"></a><span id=\"q2\">2.man -k {file} | grep {read} 没有结果</span></h2><p> <strong>原因：本地数据库没有更新</strong></p>\n<p> <strong>解决方案</strong><br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo makewhatis //如果权限问题，切换到 root 下</span><br></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h2 id=\"解决man无法找到你想要的内容\"><a href=\"#解决man无法找到你想要的内容\" class=\"headerlink\" title=\"解决man无法找到你想要的内容\"></a>解决man无法找到你想要的内容</h2><ul>\n<li><a href=\"#q1\">安装好man后，发现你查询的内容是 No manual entry for <em>*</em> </a></li>\n<li><a href=\"#q2\">man -k {file} | grep {read} 没有结果</a></li>\n</ul>\n<h2 id=\"1-安装好-man-后，发现你查询的内容是-No-manual-entry-for\"><a href=\"#1-安装好-man-后，发现你查询的内容是-No-manual-entry-for\" class=\"headerlink\" title=\"1.安装好 man 后，发现你查询的内容是 No manual entry for *** \"></a><span id=\"q1\">1.安装好 <code>man</code> 后，发现你查询的内容是 <code>No manual entry for ***</code> </span></h2><p> <strong>原因： 没有安装 <code>man-pages</code></strong></p>\n<p> <strong>解决方案</strong><br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install -y man-pages //如果权限问题，切换到root下</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-man-k-file-grep-read-没有结果\"><a href=\"#2-man-k-file-grep-read-没有结果\" class=\"headerlink\" title=\"2.man -k {file} | grep {read} 没有结果\"></a><span id=\"q2\">2.man -k {file} | grep {read} 没有结果</span></h2><p> <strong>原因：本地数据库没有更新</strong></p>\n<p> <strong>解决方案</strong><br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo makewhatis //如果权限问题，切换到 root 下</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Mysql 建立数据库和删除数据库","date":"2016-03-16T04:05:37.000Z","_content":"\n## 创建数据库\n\n - CREATE DATABASE `databaseName`\n ``` sql\n   mysql> CREATE DATABASE test;\n   Query OK, 1 row affected (0.05 sec)\n   mysql> SHOW DATABASES;\n  +--------------------+\n  | Database           |\n  +--------------------+\n  | information_schema |\n  | demo               |\n  | mysql              |\n  | performance_schema |\n  | studentSystem      |\n  | sys                |\n  | test               |\n  | zh                 |\n  +--------------------+\n  8 rows in set (0.03 sec)\n\n ```\n\n - CREATE DATABASE IF NOT EXISTS `databaseName`\n ``` sql\n   mysql> CREATE DATABASE IF NOT EXISTS test1;\n   Query OK, 1 row affected (0.00 sec)\n\n   mysql> SHOW DATABASES;\n   +--------------------+\n   | Database           |\n   +--------------------+\n   | information_schema |\n   | demo               |\n   | mysql              |\n   | performance_schema |\n   | studentSystem      |\n   | sys                |\n   | test               |\n   | test1              |\n   | zh                 |\n   +--------------------+\n   9 rows in set (0.00 sec)\n ```\n\n## 删除数据库\n\n  - DROP DATABASE `databaseName`\n  ``` sql\n  mysql> DROP DATABASE test;\n  Query OK, 0 rows affected (0.05 sec)\n\n  mysql> SHOW DATABASES;\n  +--------------------+\n  | Database           |\n  +--------------------+\n  | information_schema |\n  | demo               |\n  | mysql              |\n  | performance_schema |\n  | studentSystem      |\n  | sys                |\n  | test1              |\n  | zh                 |\n  +--------------------+\n  8 rows in set (0.03 sec)\n  ```\n\n  - DROP DATABASE IF EXISTS `databaseName`\n  ``` sql\n  mysql> DROP DATABASE IF EXISTS test1;\n  Query OK, 0 rows affected (0.00 sec)\n\n  mysql> SHOW DATABASES;\n  +--------------------+\n  | Database           |\n  +--------------------+\n  | information_schema |\n  | demo               |\n  | mysql              |\n  | performance_schema |\n  | studentSystem      |\n  | sys                |\n  | zh                 |\n  +--------------------+\n  7 rows in set (0.00 sec)\n  ```\n\n## 参考链接\n\n - [Mysql命令drop database：删除数据库](http://c.biancheng.net/cpp/html/1446.html)\n - [mysql create database 指定utf-8编码](http://outofmemory.cn/code-snippet/2533/mysql-create-database-specify-utf-8-coding)\n - [Mysql命令create：创建数据库](http://c.biancheng.net/cpp/html/1444.html)\n","source":"_posts/Mysql-建立数据库和删除数据库.md","raw":"title: Mysql 建立数据库和删除数据库\ndate: 2016-03-16 12:05:37\ntags:\n- Mysql\n- database\n\n---\n\n## 创建数据库\n\n - CREATE DATABASE `databaseName`\n ``` sql\n   mysql> CREATE DATABASE test;\n   Query OK, 1 row affected (0.05 sec)\n   mysql> SHOW DATABASES;\n  +--------------------+\n  | Database           |\n  +--------------------+\n  | information_schema |\n  | demo               |\n  | mysql              |\n  | performance_schema |\n  | studentSystem      |\n  | sys                |\n  | test               |\n  | zh                 |\n  +--------------------+\n  8 rows in set (0.03 sec)\n\n ```\n\n - CREATE DATABASE IF NOT EXISTS `databaseName`\n ``` sql\n   mysql> CREATE DATABASE IF NOT EXISTS test1;\n   Query OK, 1 row affected (0.00 sec)\n\n   mysql> SHOW DATABASES;\n   +--------------------+\n   | Database           |\n   +--------------------+\n   | information_schema |\n   | demo               |\n   | mysql              |\n   | performance_schema |\n   | studentSystem      |\n   | sys                |\n   | test               |\n   | test1              |\n   | zh                 |\n   +--------------------+\n   9 rows in set (0.00 sec)\n ```\n\n## 删除数据库\n\n  - DROP DATABASE `databaseName`\n  ``` sql\n  mysql> DROP DATABASE test;\n  Query OK, 0 rows affected (0.05 sec)\n\n  mysql> SHOW DATABASES;\n  +--------------------+\n  | Database           |\n  +--------------------+\n  | information_schema |\n  | demo               |\n  | mysql              |\n  | performance_schema |\n  | studentSystem      |\n  | sys                |\n  | test1              |\n  | zh                 |\n  +--------------------+\n  8 rows in set (0.03 sec)\n  ```\n\n  - DROP DATABASE IF EXISTS `databaseName`\n  ``` sql\n  mysql> DROP DATABASE IF EXISTS test1;\n  Query OK, 0 rows affected (0.00 sec)\n\n  mysql> SHOW DATABASES;\n  +--------------------+\n  | Database           |\n  +--------------------+\n  | information_schema |\n  | demo               |\n  | mysql              |\n  | performance_schema |\n  | studentSystem      |\n  | sys                |\n  | zh                 |\n  +--------------------+\n  7 rows in set (0.00 sec)\n  ```\n\n## 参考链接\n\n - [Mysql命令drop database：删除数据库](http://c.biancheng.net/cpp/html/1446.html)\n - [mysql create database 指定utf-8编码](http://outofmemory.cn/code-snippet/2533/mysql-create-database-specify-utf-8-coding)\n - [Mysql命令create：创建数据库](http://c.biancheng.net/cpp/html/1444.html)\n","slug":"Mysql-建立数据库和删除数据库","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzc20012pe3qs1pf574a","content":"<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><ul>\n<li><p>CREATE DATABASE <code>databaseName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> mysql&gt; CREATE DATABASE test;</span><br><span class=\"line\"> Query OK, 1 row affected (0.05 sec)</span><br><span class=\"line\"> mysql&gt; SHOW DATABASES;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| demo               |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| studentSystem      |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">| test               |</span><br><span class=\"line\">| zh                 |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">8 rows in set (0.03 sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>CREATE DATABASE IF NOT EXISTS <code>databaseName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE DATABASE IF NOT EXISTS test1;</span><br><span class=\"line\">Query OK, 1 row affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SHOW DATABASES;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| demo               |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| studentSystem      |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">| test               |</span><br><span class=\"line\">| test1              |</span><br><span class=\"line\">| zh                 |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">9 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"删除数据库\"><a href=\"#删除数据库\" class=\"headerlink\" title=\"删除数据库\"></a>删除数据库</h2><ul>\n<li><p>DROP DATABASE <code>databaseName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP DATABASE test;</span><br><span class=\"line\">Query OK, 0 rows affected (0.05 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SHOW DATABASES;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| demo               |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| studentSystem      |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">| test1              |</span><br><span class=\"line\">| zh                 |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">8 rows in set (0.03 sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>DROP DATABASE IF EXISTS <code>databaseName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP DATABASE IF EXISTS test1;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SHOW DATABASES;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| demo               |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| studentSystem      |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">| zh                 |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">7 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://c.biancheng.net/cpp/html/1446.html\" target=\"_blank\" rel=\"external\">Mysql命令drop database：删除数据库</a></li>\n<li><a href=\"http://outofmemory.cn/code-snippet/2533/mysql-create-database-specify-utf-8-coding\" target=\"_blank\" rel=\"external\">mysql create database 指定utf-8编码</a></li>\n<li><a href=\"http://c.biancheng.net/cpp/html/1444.html\" target=\"_blank\" rel=\"external\">Mysql命令create：创建数据库</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><ul>\n<li><p>CREATE DATABASE <code>databaseName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> mysql&gt; CREATE DATABASE test;</span><br><span class=\"line\"> Query OK, 1 row affected (0.05 sec)</span><br><span class=\"line\"> mysql&gt; SHOW DATABASES;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| demo               |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| studentSystem      |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">| test               |</span><br><span class=\"line\">| zh                 |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">8 rows in set (0.03 sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>CREATE DATABASE IF NOT EXISTS <code>databaseName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE DATABASE IF NOT EXISTS test1;</span><br><span class=\"line\">Query OK, 1 row affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SHOW DATABASES;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| demo               |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| studentSystem      |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">| test               |</span><br><span class=\"line\">| test1              |</span><br><span class=\"line\">| zh                 |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">9 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"删除数据库\"><a href=\"#删除数据库\" class=\"headerlink\" title=\"删除数据库\"></a>删除数据库</h2><ul>\n<li><p>DROP DATABASE <code>databaseName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP DATABASE test;</span><br><span class=\"line\">Query OK, 0 rows affected (0.05 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SHOW DATABASES;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| demo               |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| studentSystem      |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">| test1              |</span><br><span class=\"line\">| zh                 |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">8 rows in set (0.03 sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>DROP DATABASE IF EXISTS <code>databaseName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP DATABASE IF EXISTS test1;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SHOW DATABASES;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| demo               |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| studentSystem      |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">| zh                 |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">7 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://c.biancheng.net/cpp/html/1446.html\">Mysql命令drop database：删除数据库</a></li>\n<li><a href=\"http://outofmemory.cn/code-snippet/2533/mysql-create-database-specify-utf-8-coding\">mysql create database 指定utf-8编码</a></li>\n<li><a href=\"http://c.biancheng.net/cpp/html/1444.html\">Mysql命令create：创建数据库</a></li>\n</ul>\n"},{"title":"Mysql 建立表和删除表","date":"2016-03-16T04:05:59.000Z","_content":"\n## 创建表\n  - CREATE TABLE `tableName`\n  ``` sql\n    mysql> CREATE TABLE person (\n                number INT(11),\n                name VARCHAR(255),\n                birthday DATE\n                );\n  ```\n\n  - CREATE TABLE IF NOT EXISTS `tableName`\n  ``` sql\n    mysql> CREATE TABLE IF NOT EXISTS person (\n                    number INT(11),\n                    name VARCHAR(255),\n                    birthday DATE\n                    );\n  ```\n\n## 删除表\n  - DROP TABLE `tableName`\n  ``` sql\n  mysql> DROP TABLE  tbl_name;\n\n  ```\n\n  - DROP TABLE IF EXISTS `tableName`\n  ``` sql\n  mysql> DROP TABLE IF EXISTS tbl_name;\n  \n  ```\n\n## 参考链接\n- [mysql创建和删除表](http://www.cnblogs.com/ggjucheng/archive/2012/11/03/2752082.html)\n","source":"_posts/Mysql-建立表和删除表.md","raw":"title: Mysql 建立表和删除表\ndate: 2016-03-16 12:05:59\ntags:\n- Mysql\n- table\n\n---\n\n## 创建表\n  - CREATE TABLE `tableName`\n  ``` sql\n    mysql> CREATE TABLE person (\n                number INT(11),\n                name VARCHAR(255),\n                birthday DATE\n                );\n  ```\n\n  - CREATE TABLE IF NOT EXISTS `tableName`\n  ``` sql\n    mysql> CREATE TABLE IF NOT EXISTS person (\n                    number INT(11),\n                    name VARCHAR(255),\n                    birthday DATE\n                    );\n  ```\n\n## 删除表\n  - DROP TABLE `tableName`\n  ``` sql\n  mysql> DROP TABLE  tbl_name;\n\n  ```\n\n  - DROP TABLE IF EXISTS `tableName`\n  ``` sql\n  mysql> DROP TABLE IF EXISTS tbl_name;\n  \n  ```\n\n## 参考链接\n- [mysql创建和删除表](http://www.cnblogs.com/ggjucheng/archive/2012/11/03/2752082.html)\n","slug":"Mysql-建立表和删除表","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzc30014pe3qruchj4s3","content":"<h2 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><ul>\n<li><p>CREATE TABLE <code>tableName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE TABLE person (</span><br><span class=\"line\">            number INT(11),</span><br><span class=\"line\">            name VARCHAR(255),</span><br><span class=\"line\">            birthday DATE</span><br><span class=\"line\">            );</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>CREATE TABLE IF NOT EXISTS <code>tableName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE TABLE IF NOT EXISTS person (</span><br><span class=\"line\">                number INT(11),</span><br><span class=\"line\">                name VARCHAR(255),</span><br><span class=\"line\">                birthday DATE</span><br><span class=\"line\">                );</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"删除表\"><a href=\"#删除表\" class=\"headerlink\" title=\"删除表\"></a>删除表</h2><ul>\n<li><p>DROP TABLE <code>tableName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP TABLE  tbl_name;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>DROP TABLE IF EXISTS <code>tableName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP TABLE IF EXISTS tbl_name;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.cnblogs.com/ggjucheng/archive/2012/11/03/2752082.html\" target=\"_blank\" rel=\"external\">mysql创建和删除表</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><ul>\n<li><p>CREATE TABLE <code>tableName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE TABLE person (</span><br><span class=\"line\">            number INT(11),</span><br><span class=\"line\">            name VARCHAR(255),</span><br><span class=\"line\">            birthday DATE</span><br><span class=\"line\">            );</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>CREATE TABLE IF NOT EXISTS <code>tableName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE TABLE IF NOT EXISTS person (</span><br><span class=\"line\">                number INT(11),</span><br><span class=\"line\">                name VARCHAR(255),</span><br><span class=\"line\">                birthday DATE</span><br><span class=\"line\">                );</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"删除表\"><a href=\"#删除表\" class=\"headerlink\" title=\"删除表\"></a>删除表</h2><ul>\n<li><p>DROP TABLE <code>tableName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP TABLE  tbl_name;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>DROP TABLE IF EXISTS <code>tableName</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP TABLE IF EXISTS tbl_name;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.cnblogs.com/ggjucheng/archive/2012/11/03/2752082.html\">mysql创建和删除表</a></li>\n</ul>\n"},{"title":"Mysql 数据类型","date":"2016-03-13T07:27:00.000Z","_content":"\n## 数据类型\n\n  - [INT](#int)\n  - [FLOAT](#float)\n  - [CHAR](#char)\n  - [TIME](#time)\n  - [SET](#set)\n\n## <span id=\"int\">1.INT</span>\n\n - **SMALLINT**\n ``` bash\n     字节：2\n     描述：整数，从-32000到 +32000范围\n     推荐使用：存储相对比较小的整数。 比如: 年纪，数量\n ```\n\n - **INT**\n ``` bash\n     字节：4\n     描述：整数，从-2000000000 到 +2000000000 范围\n     推荐使用： 存储中等整数 例如: 距离\n ```\n\n - **BIGINT**\n ``` bash\n     字节：8\n     描述：不能用SMALLINT 或 INT描述的超大整数。\n     推荐使用：存储超大的整数 例如: 科学/数学数据\n ```\n\n## <span id=\"float\">2.FLOAT</span>\n\n - **FLOAT**\n ``` bash\n     字节：4\n     描述：单精度浮点型数据\n     推荐使用：存储小数数据 例如:测量，温度\n ```\n\n - **DOUBLE**\n ``` bash\n     字节：8\n     描述：双精度浮点型数据\n     推荐使用：需要双精度存储的小数数据 例如:科学数据\n ```\n\n - **DECIMAL**\n ``` bash\n     字节：变量;取决于精度与长度\n     描述：用户自定义精度的浮点型数据\n     推荐使用：以特别高的精度存储小数数据。  例如:货币数额，科学数据\n ```\n\n## <span id=\"char\">3.CHAR</span>\n\n - **CHAR**\n ``` bash\n     字节：特定字符串长度(高达255字 符)\n     描述：固定长度的字符串\n     推荐使用：存储通常包含预定义字符串的变量 例如: 定期航线，国家或邮编\n ```\n\n - **VARCHAR**\n ``` bash\n     字节：变量; 1 + 实际字符串长度 (高达 255 字 符)\n     描述：具有最大限制的可变长度的字符串  \n     推荐使用：存储不同长度的字符串值(高达一个特定的最大限度). 例如:名字，密码，短文标签\n ```\n\n - **TEXT**\n ``` bash\n     字节：Variable; 2 +聽 actual string length\n     描述：没有最大长度限制的可变长度的字符串\n     推荐使用：存储大型文本数据,例如: 新闻故事，产品描述\n ```\n - **BLOB**\n ``` bash\n     字节：变量；2 + 实际字符串长度\n     描述：二进制字符串\n     推荐使用：存储二进制数据 例如:图片，附件，二进制文档\n ```\n\n## <span id=\"time\">4.TIME</span>\n\n - **DATE**\n ``` bash\n     字节：3\n     描述：以 yyyy-mm-dd格式的日期\n     推荐使用：存储日期  例如:生日，产品满期\n ```\n\n - **TIME**\n ``` bash\n     字节：3\n     描述：以 hh:mm:ss格式的时间\n     推荐使用：存储时间或时间间隔  例如:报警声，两时间之间的间隔，任务开始/结束时间\n ```\n\n - **DATETIME**\n ``` bash\n     字节：8\n     描述：以yyyy-mm-ddhh:mm:ss格式结合日期和时间\n     推荐使用：存储包含日期和时间的数据 例如:提醒的人，事件\n ```\n\n - **TIMESTAMP**\n ``` bash\n     字节：4\n     描述：以yyyy-mm-ddhh:mm:ss格式结合日期和时间\n     推荐使用：记录即时时间  例如：事件提醒器，“最后进入”的时间标记\n ```\n\n - **YEAR**\n ``` bash\n     字节：1\n     描述：以 yyyy格式的年份\n     推荐使用：存储年份  例如:毕业年，出生年\n ```\n\n## <span id=\"set\">5.集合</span>\n\n - **ENUM**\n ``` bash\n     字节：1或 2个字节\n     描述：一组数据，用户可从中选择其中一个\n     推荐使用：存储字符属性，只能从中选择之一 例如:布尔量选择，如性别\n ```\n\n - **SET**\n ``` bash\n     字节：从1到8字节;取决于设置的大小\n     描述：一组数据，用户可从中选择其中0，1或更多。\n     推荐使用：存储字符属性，可从中选择多个字符的联合。  例如:多选项选择，比如业余爱好和兴趣\n ```\n","source":"_posts/Mysql-数据类型.md","raw":"title: Mysql 数据类型\ndate: 2016-03-13 15:27:00\ntags:\n- Mysql\n- 数据类型\n- 数据库\n- database\n\n---\n\n## 数据类型\n\n  - [INT](#int)\n  - [FLOAT](#float)\n  - [CHAR](#char)\n  - [TIME](#time)\n  - [SET](#set)\n\n## <span id=\"int\">1.INT</span>\n\n - **SMALLINT**\n ``` bash\n     字节：2\n     描述：整数，从-32000到 +32000范围\n     推荐使用：存储相对比较小的整数。 比如: 年纪，数量\n ```\n\n - **INT**\n ``` bash\n     字节：4\n     描述：整数，从-2000000000 到 +2000000000 范围\n     推荐使用： 存储中等整数 例如: 距离\n ```\n\n - **BIGINT**\n ``` bash\n     字节：8\n     描述：不能用SMALLINT 或 INT描述的超大整数。\n     推荐使用：存储超大的整数 例如: 科学/数学数据\n ```\n\n## <span id=\"float\">2.FLOAT</span>\n\n - **FLOAT**\n ``` bash\n     字节：4\n     描述：单精度浮点型数据\n     推荐使用：存储小数数据 例如:测量，温度\n ```\n\n - **DOUBLE**\n ``` bash\n     字节：8\n     描述：双精度浮点型数据\n     推荐使用：需要双精度存储的小数数据 例如:科学数据\n ```\n\n - **DECIMAL**\n ``` bash\n     字节：变量;取决于精度与长度\n     描述：用户自定义精度的浮点型数据\n     推荐使用：以特别高的精度存储小数数据。  例如:货币数额，科学数据\n ```\n\n## <span id=\"char\">3.CHAR</span>\n\n - **CHAR**\n ``` bash\n     字节：特定字符串长度(高达255字 符)\n     描述：固定长度的字符串\n     推荐使用：存储通常包含预定义字符串的变量 例如: 定期航线，国家或邮编\n ```\n\n - **VARCHAR**\n ``` bash\n     字节：变量; 1 + 实际字符串长度 (高达 255 字 符)\n     描述：具有最大限制的可变长度的字符串  \n     推荐使用：存储不同长度的字符串值(高达一个特定的最大限度). 例如:名字，密码，短文标签\n ```\n\n - **TEXT**\n ``` bash\n     字节：Variable; 2 +聽 actual string length\n     描述：没有最大长度限制的可变长度的字符串\n     推荐使用：存储大型文本数据,例如: 新闻故事，产品描述\n ```\n - **BLOB**\n ``` bash\n     字节：变量；2 + 实际字符串长度\n     描述：二进制字符串\n     推荐使用：存储二进制数据 例如:图片，附件，二进制文档\n ```\n\n## <span id=\"time\">4.TIME</span>\n\n - **DATE**\n ``` bash\n     字节：3\n     描述：以 yyyy-mm-dd格式的日期\n     推荐使用：存储日期  例如:生日，产品满期\n ```\n\n - **TIME**\n ``` bash\n     字节：3\n     描述：以 hh:mm:ss格式的时间\n     推荐使用：存储时间或时间间隔  例如:报警声，两时间之间的间隔，任务开始/结束时间\n ```\n\n - **DATETIME**\n ``` bash\n     字节：8\n     描述：以yyyy-mm-ddhh:mm:ss格式结合日期和时间\n     推荐使用：存储包含日期和时间的数据 例如:提醒的人，事件\n ```\n\n - **TIMESTAMP**\n ``` bash\n     字节：4\n     描述：以yyyy-mm-ddhh:mm:ss格式结合日期和时间\n     推荐使用：记录即时时间  例如：事件提醒器，“最后进入”的时间标记\n ```\n\n - **YEAR**\n ``` bash\n     字节：1\n     描述：以 yyyy格式的年份\n     推荐使用：存储年份  例如:毕业年，出生年\n ```\n\n## <span id=\"set\">5.集合</span>\n\n - **ENUM**\n ``` bash\n     字节：1或 2个字节\n     描述：一组数据，用户可从中选择其中一个\n     推荐使用：存储字符属性，只能从中选择之一 例如:布尔量选择，如性别\n ```\n\n - **SET**\n ``` bash\n     字节：从1到8字节;取决于设置的大小\n     描述：一组数据，用户可从中选择其中0，1或更多。\n     推荐使用：存储字符属性，可从中选择多个字符的联合。  例如:多选项选择，比如业余爱好和兴趣\n ```\n","slug":"Mysql-数据类型","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzc50015pe3qi2gi9dqq","content":"<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><ul>\n<li><a href=\"#int\">INT</a></li>\n<li><a href=\"#float\">FLOAT</a></li>\n<li><a href=\"#char\">CHAR</a></li>\n<li><a href=\"#time\">TIME</a></li>\n<li><a href=\"#set\">SET</a></li>\n</ul>\n<h2 id=\"1-INT\"><a href=\"#1-INT\" class=\"headerlink\" title=\"1.INT\"></a><span id=\"int\">1.INT</span></h2><ul>\n<li><p><strong>SMALLINT</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：2</span><br><span class=\"line\">描述：整数，从-32000到 +32000范围</span><br><span class=\"line\">推荐使用：存储相对比较小的整数。 比如: 年纪，数量</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>INT</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：4</span><br><span class=\"line\">描述：整数，从-2000000000 到 +2000000000 范围</span><br><span class=\"line\">推荐使用： 存储中等整数 例如: 距离</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>BIGINT</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：8</span><br><span class=\"line\">描述：不能用SMALLINT 或 INT描述的超大整数。</span><br><span class=\"line\">推荐使用：存储超大的整数 例如: 科学/数学数据</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"2-FLOAT\"><a href=\"#2-FLOAT\" class=\"headerlink\" title=\"2.FLOAT\"></a><span id=\"float\">2.FLOAT</span></h2><ul>\n<li><p><strong>FLOAT</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：4</span><br><span class=\"line\">描述：单精度浮点型数据</span><br><span class=\"line\">推荐使用：存储小数数据 例如:测量，温度</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>DOUBLE</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：8</span><br><span class=\"line\">描述：双精度浮点型数据</span><br><span class=\"line\">推荐使用：需要双精度存储的小数数据 例如:科学数据</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>DECIMAL</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：变量;取决于精度与长度</span><br><span class=\"line\">描述：用户自定义精度的浮点型数据</span><br><span class=\"line\">推荐使用：以特别高的精度存储小数数据。  例如:货币数额，科学数据</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"3-CHAR\"><a href=\"#3-CHAR\" class=\"headerlink\" title=\"3.CHAR\"></a><span id=\"char\">3.CHAR</span></h2><ul>\n<li><p><strong>CHAR</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：特定字符串长度(高达255字 符)</span><br><span class=\"line\">描述：固定长度的字符串</span><br><span class=\"line\">推荐使用：存储通常包含预定义字符串的变量 例如: 定期航线，国家或邮编</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>VARCHAR</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：变量; 1 + 实际字符串长度 (高达 255 字 符)</span><br><span class=\"line\">描述：具有最大限制的可变长度的字符串  </span><br><span class=\"line\">推荐使用：存储不同长度的字符串值(高达一个特定的最大限度). 例如:名字，密码，短文标签</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>TEXT</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：Variable; 2 +聽 actual string length</span><br><span class=\"line\">描述：没有最大长度限制的可变长度的字符串</span><br><span class=\"line\">推荐使用：存储大型文本数据,例如: 新闻故事，产品描述</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>BLOB</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：变量；2 + 实际字符串长度</span><br><span class=\"line\">描述：二进制字符串</span><br><span class=\"line\">推荐使用：存储二进制数据 例如:图片，附件，二进制文档</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"4-TIME\"><a href=\"#4-TIME\" class=\"headerlink\" title=\"4.TIME\"></a><span id=\"time\">4.TIME</span></h2><ul>\n<li><p><strong>DATE</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：3</span><br><span class=\"line\">描述：以 yyyy-mm-dd格式的日期</span><br><span class=\"line\">推荐使用：存储日期  例如:生日，产品满期</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>TIME</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：3</span><br><span class=\"line\">描述：以 hh:mm:ss格式的时间</span><br><span class=\"line\">推荐使用：存储时间或时间间隔  例如:报警声，两时间之间的间隔，任务开始/结束时间</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>DATETIME</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：8</span><br><span class=\"line\">描述：以yyyy-mm-ddhh:mm:ss格式结合日期和时间</span><br><span class=\"line\">推荐使用：存储包含日期和时间的数据 例如:提醒的人，事件</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>TIMESTAMP</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：4</span><br><span class=\"line\">描述：以yyyy-mm-ddhh:mm:ss格式结合日期和时间</span><br><span class=\"line\">推荐使用：记录即时时间  例如：事件提醒器，“最后进入”的时间标记</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>YEAR</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：1</span><br><span class=\"line\">描述：以 yyyy格式的年份</span><br><span class=\"line\">推荐使用：存储年份  例如:毕业年，出生年</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"5-集合\"><a href=\"#5-集合\" class=\"headerlink\" title=\"5.集合\"></a><span id=\"set\">5.集合</span></h2><ul>\n<li><p><strong>ENUM</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：1或 2个字节</span><br><span class=\"line\">描述：一组数据，用户可从中选择其中一个</span><br><span class=\"line\">推荐使用：存储字符属性，只能从中选择之一 例如:布尔量选择，如性别</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>SET</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：从1到8字节;取决于设置的大小</span><br><span class=\"line\">描述：一组数据，用户可从中选择其中0，1或更多。</span><br><span class=\"line\">推荐使用：存储字符属性，可从中选择多个字符的联合。  例如:多选项选择，比如业余爱好和兴趣</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><ul>\n<li><a href=\"#int\">INT</a></li>\n<li><a href=\"#float\">FLOAT</a></li>\n<li><a href=\"#char\">CHAR</a></li>\n<li><a href=\"#time\">TIME</a></li>\n<li><a href=\"#set\">SET</a></li>\n</ul>\n<h2 id=\"1-INT\"><a href=\"#1-INT\" class=\"headerlink\" title=\"1.INT\"></a><span id=\"int\">1.INT</span></h2><ul>\n<li><p><strong>SMALLINT</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：2</span><br><span class=\"line\">描述：整数，从-32000到 +32000范围</span><br><span class=\"line\">推荐使用：存储相对比较小的整数。 比如: 年纪，数量</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>INT</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：4</span><br><span class=\"line\">描述：整数，从-2000000000 到 +2000000000 范围</span><br><span class=\"line\">推荐使用： 存储中等整数 例如: 距离</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>BIGINT</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：8</span><br><span class=\"line\">描述：不能用SMALLINT 或 INT描述的超大整数。</span><br><span class=\"line\">推荐使用：存储超大的整数 例如: 科学/数学数据</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"2-FLOAT\"><a href=\"#2-FLOAT\" class=\"headerlink\" title=\"2.FLOAT\"></a><span id=\"float\">2.FLOAT</span></h2><ul>\n<li><p><strong>FLOAT</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：4</span><br><span class=\"line\">描述：单精度浮点型数据</span><br><span class=\"line\">推荐使用：存储小数数据 例如:测量，温度</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>DOUBLE</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：8</span><br><span class=\"line\">描述：双精度浮点型数据</span><br><span class=\"line\">推荐使用：需要双精度存储的小数数据 例如:科学数据</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>DECIMAL</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：变量;取决于精度与长度</span><br><span class=\"line\">描述：用户自定义精度的浮点型数据</span><br><span class=\"line\">推荐使用：以特别高的精度存储小数数据。  例如:货币数额，科学数据</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"3-CHAR\"><a href=\"#3-CHAR\" class=\"headerlink\" title=\"3.CHAR\"></a><span id=\"char\">3.CHAR</span></h2><ul>\n<li><p><strong>CHAR</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：特定字符串长度(高达255字 符)</span><br><span class=\"line\">描述：固定长度的字符串</span><br><span class=\"line\">推荐使用：存储通常包含预定义字符串的变量 例如: 定期航线，国家或邮编</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>VARCHAR</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：变量; 1 + 实际字符串长度 (高达 255 字 符)</span><br><span class=\"line\">描述：具有最大限制的可变长度的字符串  </span><br><span class=\"line\">推荐使用：存储不同长度的字符串值(高达一个特定的最大限度). 例如:名字，密码，短文标签</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>TEXT</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：Variable; 2 +聽 actual string length</span><br><span class=\"line\">描述：没有最大长度限制的可变长度的字符串</span><br><span class=\"line\">推荐使用：存储大型文本数据,例如: 新闻故事，产品描述</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>BLOB</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：变量；2 + 实际字符串长度</span><br><span class=\"line\">描述：二进制字符串</span><br><span class=\"line\">推荐使用：存储二进制数据 例如:图片，附件，二进制文档</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"4-TIME\"><a href=\"#4-TIME\" class=\"headerlink\" title=\"4.TIME\"></a><span id=\"time\">4.TIME</span></h2><ul>\n<li><p><strong>DATE</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：3</span><br><span class=\"line\">描述：以 yyyy-mm-dd格式的日期</span><br><span class=\"line\">推荐使用：存储日期  例如:生日，产品满期</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>TIME</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：3</span><br><span class=\"line\">描述：以 hh:mm:ss格式的时间</span><br><span class=\"line\">推荐使用：存储时间或时间间隔  例如:报警声，两时间之间的间隔，任务开始/结束时间</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>DATETIME</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：8</span><br><span class=\"line\">描述：以yyyy-mm-ddhh:mm:ss格式结合日期和时间</span><br><span class=\"line\">推荐使用：存储包含日期和时间的数据 例如:提醒的人，事件</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>TIMESTAMP</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：4</span><br><span class=\"line\">描述：以yyyy-mm-ddhh:mm:ss格式结合日期和时间</span><br><span class=\"line\">推荐使用：记录即时时间  例如：事件提醒器，“最后进入”的时间标记</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>YEAR</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：1</span><br><span class=\"line\">描述：以 yyyy格式的年份</span><br><span class=\"line\">推荐使用：存储年份  例如:毕业年，出生年</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"5-集合\"><a href=\"#5-集合\" class=\"headerlink\" title=\"5.集合\"></a><span id=\"set\">5.集合</span></h2><ul>\n<li><p><strong>ENUM</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：1或 2个字节</span><br><span class=\"line\">描述：一组数据，用户可从中选择其中一个</span><br><span class=\"line\">推荐使用：存储字符属性，只能从中选择之一 例如:布尔量选择，如性别</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>SET</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字节：从1到8字节;取决于设置的大小</span><br><span class=\"line\">描述：一组数据，用户可从中选择其中0，1或更多。</span><br><span class=\"line\">推荐使用：存储字符属性，可从中选择多个字符的联合。  例如:多选项选择，比如业余爱好和兴趣</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"Mysql 数据类型的属性","date":"2016-03-13T08:00:16.000Z","_content":"\n## AUTO_INCREMENT\nauto_increment能为新插入的行赋一个唯一的整数标识符。为列赋此属性将为每个新插入的行赋值为上一次插入的ID+1。\nMySQL要求将auto_increment属性用于作为主键的列。此外，每个表只允许有一个auto_increment列。例如：\n\n``` SQL\nid smallint not null auto_increment primary key\n```\n\n---\n\n## BINARY\nbinary属性只用于char和varchar值。当为列指定了该属性时，将以区分大小写的方式排序。与之相反，忽略binary\n属性时，将使用不区分大小写的方式排序。例如：\n\n``` SQL\nhostname char(25) binary not null\n```\n\n---\n\n## DEFAULT\ndefault属性确保在没有任何值可用的情况下，赋予某个常量值，这个值必须是常量，因为MySQL不允许插入函数或表达式值。\n此外，此属性无法用于BLOB或TEXT列。如果已经为此列指定了NULL属性，没有指定默认值时默认值将为NULL，否则默认值将\n依赖于字段的数据类型。例如：\n\n``` SQL\nsubscribed enum('0', '1') not null default '0'\n```\n\n---\n\n## INDEX\n如果所有其他因素都相同，要加速数据库查询，使用索引通常是最重要的一个步骤。索引一个列会为该列创建一个有序的键数\n组，每个键指向其相应的表行。以后针对输入条件可以搜索这个有序的键数组，与搜索整个未索引的表相比，这将在性能方面\n得到极大的提升。\n\n``` SQL\ncreate table employees\n(\n    id varchar(9) not null,\n    firstname varchar(15) not null,\n    lastname varchar(25) not null,\n    email varchar(45) not null,\n    phone varchar(10) not null,\n    index lastname(lastname),\n    primary key(id)\n);\n```\n\n---\n\n## NOT NULL\n如果将一个列定义为not null，将不允许向该列插入null值。建议在重要情况下始终使用not null属性，因为它提供了\n一个基本验证，确保已经向查询传递了所有必要的值。\n\n---\n\n## NULL\n为列指定null属性时，该列可以保持为空，而不论行中其它列是否已经被填充。记住，null精确的说法是“无”，而不是空字符串或0。\n\n---\n\n## PRIMARY KEY\nprimary key属性用于确保指定行的唯一性。指定为主键的列中，值不能重复，也不能为空。为指定为主键的列赋予auto_increment属性\n是很常见的，因为此列不必与行数据有任何关系，而只是作为一个唯一标识符。主键又分为以下两种：\n\n(1)单字段主键\n如果输入到数据库中的每行都已经有不可修改的唯一标识符，一般会使用单字段主键。注意，此主键一旦设置就不能再修改。\n(2)多字段主键\n如果记录中任何一个字段都不可能保证唯一性，就可以使用多字段主键。这时，多个字段联合起来确保唯一性。如果出现这种情况，指定一\n个auto_increment整数作为主键是更好的办法。\n\n---\n\n## UNIQUE\n被赋予unique属性的列将确保所有值都有不同的值，只是null值可以重复。一般会指定一个列为unique，以确保该列的所有值都不同。例如：\n\n``` SQL\nemail varchar(45) unique\n```\n\n---\n\n## ZEROFILL\nzerofill属性可用于任何数值类型，用0填充所有剩余字段空间。例如，无符号int的默认宽度是10；因此，当“零填充”的int值为4时，将\n表示它为0000000004。例如：\n\n``` SQL\norderid int unsigned zerofill not null\n```\n\n---\n\n## 引用参考\n\n - [MySQL数据类型和属性](http://www.jellythink.com/archives/642)\n","source":"_posts/Mysql-数据类型的属性.md","raw":"title: Mysql 数据类型的属性\ndate: 2016-03-13 16:00:16\ntags:\n- Mysql\n- 数据类型\n- 属性\n- database\n- 数据库\n\n---\n\n## AUTO_INCREMENT\nauto_increment能为新插入的行赋一个唯一的整数标识符。为列赋此属性将为每个新插入的行赋值为上一次插入的ID+1。\nMySQL要求将auto_increment属性用于作为主键的列。此外，每个表只允许有一个auto_increment列。例如：\n\n``` SQL\nid smallint not null auto_increment primary key\n```\n\n---\n\n## BINARY\nbinary属性只用于char和varchar值。当为列指定了该属性时，将以区分大小写的方式排序。与之相反，忽略binary\n属性时，将使用不区分大小写的方式排序。例如：\n\n``` SQL\nhostname char(25) binary not null\n```\n\n---\n\n## DEFAULT\ndefault属性确保在没有任何值可用的情况下，赋予某个常量值，这个值必须是常量，因为MySQL不允许插入函数或表达式值。\n此外，此属性无法用于BLOB或TEXT列。如果已经为此列指定了NULL属性，没有指定默认值时默认值将为NULL，否则默认值将\n依赖于字段的数据类型。例如：\n\n``` SQL\nsubscribed enum('0', '1') not null default '0'\n```\n\n---\n\n## INDEX\n如果所有其他因素都相同，要加速数据库查询，使用索引通常是最重要的一个步骤。索引一个列会为该列创建一个有序的键数\n组，每个键指向其相应的表行。以后针对输入条件可以搜索这个有序的键数组，与搜索整个未索引的表相比，这将在性能方面\n得到极大的提升。\n\n``` SQL\ncreate table employees\n(\n    id varchar(9) not null,\n    firstname varchar(15) not null,\n    lastname varchar(25) not null,\n    email varchar(45) not null,\n    phone varchar(10) not null,\n    index lastname(lastname),\n    primary key(id)\n);\n```\n\n---\n\n## NOT NULL\n如果将一个列定义为not null，将不允许向该列插入null值。建议在重要情况下始终使用not null属性，因为它提供了\n一个基本验证，确保已经向查询传递了所有必要的值。\n\n---\n\n## NULL\n为列指定null属性时，该列可以保持为空，而不论行中其它列是否已经被填充。记住，null精确的说法是“无”，而不是空字符串或0。\n\n---\n\n## PRIMARY KEY\nprimary key属性用于确保指定行的唯一性。指定为主键的列中，值不能重复，也不能为空。为指定为主键的列赋予auto_increment属性\n是很常见的，因为此列不必与行数据有任何关系，而只是作为一个唯一标识符。主键又分为以下两种：\n\n(1)单字段主键\n如果输入到数据库中的每行都已经有不可修改的唯一标识符，一般会使用单字段主键。注意，此主键一旦设置就不能再修改。\n(2)多字段主键\n如果记录中任何一个字段都不可能保证唯一性，就可以使用多字段主键。这时，多个字段联合起来确保唯一性。如果出现这种情况，指定一\n个auto_increment整数作为主键是更好的办法。\n\n---\n\n## UNIQUE\n被赋予unique属性的列将确保所有值都有不同的值，只是null值可以重复。一般会指定一个列为unique，以确保该列的所有值都不同。例如：\n\n``` SQL\nemail varchar(45) unique\n```\n\n---\n\n## ZEROFILL\nzerofill属性可用于任何数值类型，用0填充所有剩余字段空间。例如，无符号int的默认宽度是10；因此，当“零填充”的int值为4时，将\n表示它为0000000004。例如：\n\n``` SQL\norderid int unsigned zerofill not null\n```\n\n---\n\n## 引用参考\n\n - [MySQL数据类型和属性](http://www.jellythink.com/archives/642)\n","slug":"Mysql-数据类型的属性","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzc80017pe3q8bjz873j","content":"<h2 id=\"AUTO-INCREMENT\"><a href=\"#AUTO-INCREMENT\" class=\"headerlink\" title=\"AUTO_INCREMENT\"></a>AUTO_INCREMENT</h2><p>auto_increment能为新插入的行赋一个唯一的整数标识符。为列赋此属性将为每个新插入的行赋值为上一次插入的ID+1。<br>MySQL要求将auto_increment属性用于作为主键的列。此外，每个表只允许有一个auto_increment列。例如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id smallint not null auto_increment primary key</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"BINARY\"><a href=\"#BINARY\" class=\"headerlink\" title=\"BINARY\"></a>BINARY</h2><p>binary属性只用于char和varchar值。当为列指定了该属性时，将以区分大小写的方式排序。与之相反，忽略binary<br>属性时，将使用不区分大小写的方式排序。例如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hostname char(25) binary not null</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"DEFAULT\"><a href=\"#DEFAULT\" class=\"headerlink\" title=\"DEFAULT\"></a>DEFAULT</h2><p>default属性确保在没有任何值可用的情况下，赋予某个常量值，这个值必须是常量，因为MySQL不允许插入函数或表达式值。<br>此外，此属性无法用于BLOB或TEXT列。如果已经为此列指定了NULL属性，没有指定默认值时默认值将为NULL，否则默认值将<br>依赖于字段的数据类型。例如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subscribed enum('0', '1') not null default '0'</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"INDEX\"><a href=\"#INDEX\" class=\"headerlink\" title=\"INDEX\"></a>INDEX</h2><p>如果所有其他因素都相同，要加速数据库查询，使用索引通常是最重要的一个步骤。索引一个列会为该列创建一个有序的键数<br>组，每个键指向其相应的表行。以后针对输入条件可以搜索这个有序的键数组，与搜索整个未索引的表相比，这将在性能方面<br>得到极大的提升。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> employees</span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">9</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    firstname <span class=\"built_in\">varchar</span>(<span class=\"number\">15</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    lastname <span class=\"built_in\">varchar</span>(<span class=\"number\">25</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    email <span class=\"built_in\">varchar</span>(<span class=\"number\">45</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    phone <span class=\"built_in\">varchar</span>(<span class=\"number\">10</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"keyword\">index</span> lastname(lastname),</span><br><span class=\"line\">    primary <span class=\"keyword\">key</span>(<span class=\"keyword\">id</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"NOT-NULL\"><a href=\"#NOT-NULL\" class=\"headerlink\" title=\"NOT NULL\"></a>NOT NULL</h2><p>如果将一个列定义为not null，将不允许向该列插入null值。建议在重要情况下始终使用not null属性，因为它提供了<br>一个基本验证，确保已经向查询传递了所有必要的值。</p>\n<hr>\n<h2 id=\"NULL\"><a href=\"#NULL\" class=\"headerlink\" title=\"NULL\"></a>NULL</h2><p>为列指定null属性时，该列可以保持为空，而不论行中其它列是否已经被填充。记住，null精确的说法是“无”，而不是空字符串或0。</p>\n<hr>\n<h2 id=\"PRIMARY-KEY\"><a href=\"#PRIMARY-KEY\" class=\"headerlink\" title=\"PRIMARY KEY\"></a>PRIMARY KEY</h2><p>primary key属性用于确保指定行的唯一性。指定为主键的列中，值不能重复，也不能为空。为指定为主键的列赋予auto_increment属性<br>是很常见的，因为此列不必与行数据有任何关系，而只是作为一个唯一标识符。主键又分为以下两种：</p>\n<p>(1)单字段主键<br>如果输入到数据库中的每行都已经有不可修改的唯一标识符，一般会使用单字段主键。注意，此主键一旦设置就不能再修改。<br>(2)多字段主键<br>如果记录中任何一个字段都不可能保证唯一性，就可以使用多字段主键。这时，多个字段联合起来确保唯一性。如果出现这种情况，指定一<br>个auto_increment整数作为主键是更好的办法。</p>\n<hr>\n<h2 id=\"UNIQUE\"><a href=\"#UNIQUE\" class=\"headerlink\" title=\"UNIQUE\"></a>UNIQUE</h2><p>被赋予unique属性的列将确保所有值都有不同的值，只是null值可以重复。一般会指定一个列为unique，以确保该列的所有值都不同。例如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">email varchar(45) unique</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"ZEROFILL\"><a href=\"#ZEROFILL\" class=\"headerlink\" title=\"ZEROFILL\"></a>ZEROFILL</h2><p>zerofill属性可用于任何数值类型，用0填充所有剩余字段空间。例如，无符号int的默认宽度是10；因此，当“零填充”的int值为4时，将<br>表示它为0000000004。例如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">orderid int unsigned zerofill not null</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"引用参考\"><a href=\"#引用参考\" class=\"headerlink\" title=\"引用参考\"></a>引用参考</h2><ul>\n<li><a href=\"http://www.jellythink.com/archives/642\" target=\"_blank\" rel=\"external\">MySQL数据类型和属性</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"AUTO-INCREMENT\"><a href=\"#AUTO-INCREMENT\" class=\"headerlink\" title=\"AUTO_INCREMENT\"></a>AUTO_INCREMENT</h2><p>auto_increment能为新插入的行赋一个唯一的整数标识符。为列赋此属性将为每个新插入的行赋值为上一次插入的ID+1。<br>MySQL要求将auto_increment属性用于作为主键的列。此外，每个表只允许有一个auto_increment列。例如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id smallint not null auto_increment primary key</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"BINARY\"><a href=\"#BINARY\" class=\"headerlink\" title=\"BINARY\"></a>BINARY</h2><p>binary属性只用于char和varchar值。当为列指定了该属性时，将以区分大小写的方式排序。与之相反，忽略binary<br>属性时，将使用不区分大小写的方式排序。例如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hostname char(25) binary not null</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"DEFAULT\"><a href=\"#DEFAULT\" class=\"headerlink\" title=\"DEFAULT\"></a>DEFAULT</h2><p>default属性确保在没有任何值可用的情况下，赋予某个常量值，这个值必须是常量，因为MySQL不允许插入函数或表达式值。<br>此外，此属性无法用于BLOB或TEXT列。如果已经为此列指定了NULL属性，没有指定默认值时默认值将为NULL，否则默认值将<br>依赖于字段的数据类型。例如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subscribed enum('0', '1') not null default '0'</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"INDEX\"><a href=\"#INDEX\" class=\"headerlink\" title=\"INDEX\"></a>INDEX</h2><p>如果所有其他因素都相同，要加速数据库查询，使用索引通常是最重要的一个步骤。索引一个列会为该列创建一个有序的键数<br>组，每个键指向其相应的表行。以后针对输入条件可以搜索这个有序的键数组，与搜索整个未索引的表相比，这将在性能方面<br>得到极大的提升。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> employees</span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">9</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    firstname <span class=\"built_in\">varchar</span>(<span class=\"number\">15</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    lastname <span class=\"built_in\">varchar</span>(<span class=\"number\">25</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    email <span class=\"built_in\">varchar</span>(<span class=\"number\">45</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    phone <span class=\"built_in\">varchar</span>(<span class=\"number\">10</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"keyword\">index</span> lastname(lastname),</span><br><span class=\"line\">    primary <span class=\"keyword\">key</span>(<span class=\"keyword\">id</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"NOT-NULL\"><a href=\"#NOT-NULL\" class=\"headerlink\" title=\"NOT NULL\"></a>NOT NULL</h2><p>如果将一个列定义为not null，将不允许向该列插入null值。建议在重要情况下始终使用not null属性，因为它提供了<br>一个基本验证，确保已经向查询传递了所有必要的值。</p>\n<hr>\n<h2 id=\"NULL\"><a href=\"#NULL\" class=\"headerlink\" title=\"NULL\"></a>NULL</h2><p>为列指定null属性时，该列可以保持为空，而不论行中其它列是否已经被填充。记住，null精确的说法是“无”，而不是空字符串或0。</p>\n<hr>\n<h2 id=\"PRIMARY-KEY\"><a href=\"#PRIMARY-KEY\" class=\"headerlink\" title=\"PRIMARY KEY\"></a>PRIMARY KEY</h2><p>primary key属性用于确保指定行的唯一性。指定为主键的列中，值不能重复，也不能为空。为指定为主键的列赋予auto_increment属性<br>是很常见的，因为此列不必与行数据有任何关系，而只是作为一个唯一标识符。主键又分为以下两种：</p>\n<p>(1)单字段主键<br>如果输入到数据库中的每行都已经有不可修改的唯一标识符，一般会使用单字段主键。注意，此主键一旦设置就不能再修改。<br>(2)多字段主键<br>如果记录中任何一个字段都不可能保证唯一性，就可以使用多字段主键。这时，多个字段联合起来确保唯一性。如果出现这种情况，指定一<br>个auto_increment整数作为主键是更好的办法。</p>\n<hr>\n<h2 id=\"UNIQUE\"><a href=\"#UNIQUE\" class=\"headerlink\" title=\"UNIQUE\"></a>UNIQUE</h2><p>被赋予unique属性的列将确保所有值都有不同的值，只是null值可以重复。一般会指定一个列为unique，以确保该列的所有值都不同。例如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">email varchar(45) unique</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"ZEROFILL\"><a href=\"#ZEROFILL\" class=\"headerlink\" title=\"ZEROFILL\"></a>ZEROFILL</h2><p>zerofill属性可用于任何数值类型，用0填充所有剩余字段空间。例如，无符号int的默认宽度是10；因此，当“零填充”的int值为4时，将<br>表示它为0000000004。例如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">orderid int unsigned zerofill not null</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"引用参考\"><a href=\"#引用参考\" class=\"headerlink\" title=\"引用参考\"></a>引用参考</h2><ul>\n<li><a href=\"http://www.jellythink.com/archives/642\">MySQL数据类型和属性</a></li>\n</ul>\n"},{"title":"Mysql 表内容的插入","date":"2016-03-16T09:07:00.000Z","_content":"\n## INSERT\n\n  表插入的语法：\n  ``` sql\n    INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n      [INTO] tbl_name [(col_name,...)]\n      VALUES ({expr | DEFAULT},...),(...),...\n      [ ON DUPLICATE KEY UPDATE col_name=expr, ... ]\n    或：\n    INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n      [INTO] tbl_name\n      SET col_name={expr | DEFAULT}, ...\n      [ ON DUPLICATE KEY UPDATE col_name=expr, ... ]\n    或：\n  INSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE]\n      [INTO] tbl_name [(col_name,...)]\n      SELECT ...\n      [ ON DUPLICATE KEY UPDATE col_name=expr, ... ]\n  ```\n\n## 实验证明\n\n- 如果列清单和VALUES清单均为空清单，则INSERT会创建一个行，每个列都被设置为默认值：\n\n ``` sql\n INSERT INTO tbl_name () VALUES();\n ```\n- 假设worker表只有name和email,插入一条数据\n\n ``` sql\n INSERT INTO worker VALUES(“tom”,”tom@yahoo.com”);\n ```\n- 批量插入多条数据\n ``` sql\n INSERT INTO worker VALUES(‘tom','tom@yahoo.com'),(‘paul','paul@yahoo.com');\n ```\n\n- 给出要赋值的那个列，然后再列出值的插入数据\n ``` sql\n insert into worker (name) values ('tom');\n ```\n\n## 参考链接\n- [mysql insert语句操作实例讲解](http://www.jb51.net/article/58087.htm)\n","source":"_posts/Mysql-表内容的插入.md","raw":"title: Mysql 表内容的插入\ndate: 2016-03-16 17:07:00\ntags:\n- Mysql\n- INSERT\n\n---\n\n## INSERT\n\n  表插入的语法：\n  ``` sql\n    INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n      [INTO] tbl_name [(col_name,...)]\n      VALUES ({expr | DEFAULT},...),(...),...\n      [ ON DUPLICATE KEY UPDATE col_name=expr, ... ]\n    或：\n    INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n      [INTO] tbl_name\n      SET col_name={expr | DEFAULT}, ...\n      [ ON DUPLICATE KEY UPDATE col_name=expr, ... ]\n    或：\n  INSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE]\n      [INTO] tbl_name [(col_name,...)]\n      SELECT ...\n      [ ON DUPLICATE KEY UPDATE col_name=expr, ... ]\n  ```\n\n## 实验证明\n\n- 如果列清单和VALUES清单均为空清单，则INSERT会创建一个行，每个列都被设置为默认值：\n\n ``` sql\n INSERT INTO tbl_name () VALUES();\n ```\n- 假设worker表只有name和email,插入一条数据\n\n ``` sql\n INSERT INTO worker VALUES(“tom”,”tom@yahoo.com”);\n ```\n- 批量插入多条数据\n ``` sql\n INSERT INTO worker VALUES(‘tom','tom@yahoo.com'),(‘paul','paul@yahoo.com');\n ```\n\n- 给出要赋值的那个列，然后再列出值的插入数据\n ``` sql\n insert into worker (name) values ('tom');\n ```\n\n## 参考链接\n- [mysql insert语句操作实例讲解](http://www.jb51.net/article/58087.htm)\n","slug":"Mysql-表内容的插入","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzc90018pe3qcdw83omv","content":"<h2 id=\"INSERT\"><a href=\"#INSERT\" class=\"headerlink\" title=\"INSERT\"></a>INSERT</h2><p>  表插入的语法：<br>  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">INSERT</span> [<span class=\"keyword\">LOW_PRIORITY</span> | <span class=\"keyword\">DELAYED</span> | <span class=\"keyword\">HIGH_PRIORITY</span>] [<span class=\"keyword\">IGNORE</span>]</span><br><span class=\"line\">    [<span class=\"keyword\">INTO</span>] tbl_name [(col_name,...)]</span><br><span class=\"line\">    <span class=\"keyword\">VALUES</span> (&#123;expr | <span class=\"keyword\">DEFAULT</span>&#125;,...),(...),...</span><br><span class=\"line\">    [ <span class=\"keyword\">ON</span> <span class=\"keyword\">DUPLICATE</span> <span class=\"keyword\">KEY</span> <span class=\"keyword\">UPDATE</span> col_name=expr, ... ]</span><br><span class=\"line\">  或：</span><br><span class=\"line\">  <span class=\"keyword\">INSERT</span> [<span class=\"keyword\">LOW_PRIORITY</span> | <span class=\"keyword\">DELAYED</span> | <span class=\"keyword\">HIGH_PRIORITY</span>] [<span class=\"keyword\">IGNORE</span>]</span><br><span class=\"line\">    [<span class=\"keyword\">INTO</span>] tbl_name</span><br><span class=\"line\">    <span class=\"keyword\">SET</span> col_name=&#123;expr | <span class=\"keyword\">DEFAULT</span>&#125;, ...</span><br><span class=\"line\">    [ <span class=\"keyword\">ON</span> <span class=\"keyword\">DUPLICATE</span> <span class=\"keyword\">KEY</span> <span class=\"keyword\">UPDATE</span> col_name=expr, ... ]</span><br><span class=\"line\">  或：</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> [<span class=\"keyword\">LOW_PRIORITY</span> | <span class=\"keyword\">HIGH_PRIORITY</span>] [<span class=\"keyword\">IGNORE</span>]</span><br><span class=\"line\">    [<span class=\"keyword\">INTO</span>] tbl_name [(col_name,...)]</span><br><span class=\"line\">    <span class=\"keyword\">SELECT</span> ...</span><br><span class=\"line\">    [ <span class=\"keyword\">ON</span> <span class=\"keyword\">DUPLICATE</span> <span class=\"keyword\">KEY</span> <span class=\"keyword\">UPDATE</span> col_name=expr, ... ]</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"实验证明\"><a href=\"#实验证明\" class=\"headerlink\" title=\"实验证明\"></a>实验证明</h2><ul>\n<li><p>如果列清单和VALUES清单均为空清单，则INSERT会创建一个行，每个列都被设置为默认值：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> tbl_name () <span class=\"keyword\">VALUES</span>();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>假设worker表只有name和email,插入一条数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> worker <span class=\"keyword\">VALUES</span>(“tom”,”tom@yahoo.com”);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>批量插入多条数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> worker <span class=\"keyword\">VALUES</span>(‘tom<span class=\"string\">','</span>tom@yahoo.com<span class=\"string\">'),(‘paul'</span>,<span class=\"string\">'paul@yahoo.com'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>给出要赋值的那个列，然后再列出值的插入数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> worker (<span class=\"keyword\">name</span>) <span class=\"keyword\">values</span> (<span class=\"string\">'tom'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.jb51.net/article/58087.htm\" target=\"_blank\" rel=\"external\">mysql insert语句操作实例讲解</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"INSERT\"><a href=\"#INSERT\" class=\"headerlink\" title=\"INSERT\"></a>INSERT</h2><p>  表插入的语法：<br>  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">INSERT</span> [<span class=\"keyword\">LOW_PRIORITY</span> | <span class=\"keyword\">DELAYED</span> | <span class=\"keyword\">HIGH_PRIORITY</span>] [<span class=\"keyword\">IGNORE</span>]</span><br><span class=\"line\">    [<span class=\"keyword\">INTO</span>] tbl_name [(col_name,...)]</span><br><span class=\"line\">    <span class=\"keyword\">VALUES</span> (&#123;expr | <span class=\"keyword\">DEFAULT</span>&#125;,...),(...),...</span><br><span class=\"line\">    [ <span class=\"keyword\">ON</span> <span class=\"keyword\">DUPLICATE</span> <span class=\"keyword\">KEY</span> <span class=\"keyword\">UPDATE</span> col_name=expr, ... ]</span><br><span class=\"line\">  或：</span><br><span class=\"line\">  <span class=\"keyword\">INSERT</span> [<span class=\"keyword\">LOW_PRIORITY</span> | <span class=\"keyword\">DELAYED</span> | <span class=\"keyword\">HIGH_PRIORITY</span>] [<span class=\"keyword\">IGNORE</span>]</span><br><span class=\"line\">    [<span class=\"keyword\">INTO</span>] tbl_name</span><br><span class=\"line\">    <span class=\"keyword\">SET</span> col_name=&#123;expr | <span class=\"keyword\">DEFAULT</span>&#125;, ...</span><br><span class=\"line\">    [ <span class=\"keyword\">ON</span> <span class=\"keyword\">DUPLICATE</span> <span class=\"keyword\">KEY</span> <span class=\"keyword\">UPDATE</span> col_name=expr, ... ]</span><br><span class=\"line\">  或：</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> [<span class=\"keyword\">LOW_PRIORITY</span> | <span class=\"keyword\">HIGH_PRIORITY</span>] [<span class=\"keyword\">IGNORE</span>]</span><br><span class=\"line\">    [<span class=\"keyword\">INTO</span>] tbl_name [(col_name,...)]</span><br><span class=\"line\">    <span class=\"keyword\">SELECT</span> ...</span><br><span class=\"line\">    [ <span class=\"keyword\">ON</span> <span class=\"keyword\">DUPLICATE</span> <span class=\"keyword\">KEY</span> <span class=\"keyword\">UPDATE</span> col_name=expr, ... ]</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"实验证明\"><a href=\"#实验证明\" class=\"headerlink\" title=\"实验证明\"></a>实验证明</h2><ul>\n<li><p>如果列清单和VALUES清单均为空清单，则INSERT会创建一个行，每个列都被设置为默认值：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> tbl_name () <span class=\"keyword\">VALUES</span>();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>假设worker表只有name和email,插入一条数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> worker <span class=\"keyword\">VALUES</span>(“tom”,”tom@yahoo.com”);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>批量插入多条数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> worker <span class=\"keyword\">VALUES</span>(‘tom<span class=\"string\">','</span>tom@yahoo.com<span class=\"string\">'),(‘paul'</span>,<span class=\"string\">'paul@yahoo.com'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>给出要赋值的那个列，然后再列出值的插入数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> worker (<span class=\"keyword\">name</span>) <span class=\"keyword\">values</span> (<span class=\"string\">'tom'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.jb51.net/article/58087.htm\">mysql insert语句操作实例讲解</a></li>\n</ul>\n"},{"title":"Mysql 视图创建","date":"2016-03-16T07:15:50.000Z","_content":"\n## 关于视图 - 简单看看([如果不想知道视图用来干嘛的，那就跳过咯](#create))\n\n  `SQL` 中，视图时基于SQL语句的结果集的可视化的表\n\n  `视图`包含行和列，就像一个真实的表一样。\n\n  `视图`中的字段来自于一个或者多个数据库中的表的字段。\n\n  结果就是感觉就是单一的一张表，也可以说是间接的表啦。\n\n  使用`视图`，主要是为在操作数据库的时候，不在需要频繁多次去读取和处理不同字段，再进行第二次的处理形成我们所需要的数据。在这一步上面，我们可以提高效率，得到我们所需要的内容哦。\n\n  这样，我们可以把多张表合并成一张表，经过过滤之后的一张表哦。\n\n  `视图`是一种虚拟的表。`视图`从数据库中的一个或多个表导出来的表。`视图`还可以从已经存在的视图的基础上定义。数据库中只存放了视图的定义，而并没有存放视图中的数据。这些数据存放在原来的表中。使用视图查询数据时，数据库系统会从原来的表中取出对应的数据。因此，视图中的数据是依赖于原来的表中的数据的。一旦表中的数据发生改变，显示在视图中的数据也会发生改变。\n\n  `视图`是在原有的表或者视图的基础上重新定义的虚拟表，这可以从原有的表上选取对用户有用的信息。那些对用户没有用，或者用户没有权限了解的信息，都可以直接屏蔽掉。这样做既使应用简单化，也保证了系统的安全。视图起着类似于筛选的作用。视图的作用归纳为如下几点：\n    1．使操作简单化\n    2．增加数据的安全性\n    3．提高表的逻辑独立性\n\n  [`注释`：数据库的设计和结构不会受到视图中的函数、where 或 join 语句的影响。]\n\n\n  **OK,实际上。意思就是把多张表经过处理后的到一张整理过的，有需要的一张表，但是这个表的操作不会影响到原表的完整性，读它就可以啦。**\n\n## <span id=\"create\">创建视图</span>\n\n**语法：**\n``` sql\n  CREATE VIEW viewName AS\n  SELECT column_name(s)\n  FROM table_name\n  WHERE condition\n```\n[`注释`：视图总是显示最近的数据。每当用户查询视图时，数据库引擎通过使用 SQL 语句来重建数据。]\n\n\n## 实践检验问题\n\n   **可以从某个查询内部、某个存储过程内部，或者从另一个视图内部来使用视图。通过向视图添加函数、join 等等，我们可以向用户精确地提交我们希望提交的数据。**\n\n   需要[准备数据文件](https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/mysql_create_view_database_prepare.sql)来做好操作的准备,里面是关于教师和学生的一个数据库表。\n\n### 走起\n **创建视图**\n  ``` sql\n    mysql> CREATE VIEW student_teacher AS\n        -> SELECT sname, tname\n        -> FROM student, teacher\n        -> WHERE student.tno=teacher.tno;\n\n    Query OK, 0 rows affected (0.13 sec)\n\n    mysql> select * from student_teacher;\n    +-------+-------+\n    | sname | tname |\n    +-------+-------+\n    | sa    | wa    |\n    | sb    | wa    |\n    | sc    | wa    |\n    | sd    | wa    |\n    | se    | wa    |\n    | sf    | wa    |\n    | sg    | wa    |\n    | sh    | wa    |\n    | si    | wa    |\n    | sj    | wa    |\n    | sk    | wa    |\n    | sl    | wa    |\n    | sm    | wa    |\n    | sn    | wa    |\n    +-------+-------+\n    14 rows in set (0.06 sec)\n\n  ```\n\n  这样，我们就可以得到了关于教师和学生的一个列表，但是我们并不知道这个是来自于两个表哦。\n\n **更新视图**\n ``` sql\n SQL CREATE OR REPLACE VIEW Syntax\n\n  CREATE OR REPLACE VIEW view_name AS\n  SELECT column_name(s)\n  FROM table_name\n  WHERE condition\n\n  ------------------------\n ```\n\n  这个是一个简单的例子。\n\n **撤销视图**\n ``` sql\n   SQL DROP VIEW Syntax\n   DROP VIEW view_name\n\n   ------------------------\n   mysql> DROP VIEW student_teacher;\n   Query OK, 0 rows affected (0.30 sec)\n\n ```\n## 参考链接\n- [MySQL 视图的创建，修改与删除](http://www.360doc.com/content/13/1117/22/7669533_330092770.shtml)\n- [MySQL视图表创建与修改](http://www.linuxidc.com/Linux/2012-02/53842.htm)\n- [mysql的视图操作](http://zhangzhenyihi.blog.163.com/blog/static/13548809420141104122391/)\n- [mysql中create view创建、更新和删除视图](http://www.php186.com/content/article/mysql/22726.html)\n- [MySQL中INSERT的一般用法](http://www.blogjava.net/midnightPigMan/archive/2014/12/15/421406.html)\n- [Mysql命令insert into：向表中插入数据（记录）](http://c.biancheng.net/cpp/html/1452.html)\n- [insert 出错](http://jingyan.baidu.com/article/9f7e7ec05c5ad76f281554ab.html)\n- [Mysql列约束,字段属性](http://wenku.baidu.com/link?url=SJeXJhp0ZgeTQnFfJhc4WUQL5Ov_34l57QKeUcW6nkcY0-GJO5ImFQHUuZpDeB-jTJ6buU87_AAJ2ix8ZWX0J0fwKIcqmWei7HKQd1RMopy)\n","source":"_posts/Mysql-视图创建.md","raw":"title: Mysql 视图创建\ndate: 2016-03-16 15:15:50\ntags:\n- Mysql\n- VIEW\n- 视图\n\n---\n\n## 关于视图 - 简单看看([如果不想知道视图用来干嘛的，那就跳过咯](#create))\n\n  `SQL` 中，视图时基于SQL语句的结果集的可视化的表\n\n  `视图`包含行和列，就像一个真实的表一样。\n\n  `视图`中的字段来自于一个或者多个数据库中的表的字段。\n\n  结果就是感觉就是单一的一张表，也可以说是间接的表啦。\n\n  使用`视图`，主要是为在操作数据库的时候，不在需要频繁多次去读取和处理不同字段，再进行第二次的处理形成我们所需要的数据。在这一步上面，我们可以提高效率，得到我们所需要的内容哦。\n\n  这样，我们可以把多张表合并成一张表，经过过滤之后的一张表哦。\n\n  `视图`是一种虚拟的表。`视图`从数据库中的一个或多个表导出来的表。`视图`还可以从已经存在的视图的基础上定义。数据库中只存放了视图的定义，而并没有存放视图中的数据。这些数据存放在原来的表中。使用视图查询数据时，数据库系统会从原来的表中取出对应的数据。因此，视图中的数据是依赖于原来的表中的数据的。一旦表中的数据发生改变，显示在视图中的数据也会发生改变。\n\n  `视图`是在原有的表或者视图的基础上重新定义的虚拟表，这可以从原有的表上选取对用户有用的信息。那些对用户没有用，或者用户没有权限了解的信息，都可以直接屏蔽掉。这样做既使应用简单化，也保证了系统的安全。视图起着类似于筛选的作用。视图的作用归纳为如下几点：\n    1．使操作简单化\n    2．增加数据的安全性\n    3．提高表的逻辑独立性\n\n  [`注释`：数据库的设计和结构不会受到视图中的函数、where 或 join 语句的影响。]\n\n\n  **OK,实际上。意思就是把多张表经过处理后的到一张整理过的，有需要的一张表，但是这个表的操作不会影响到原表的完整性，读它就可以啦。**\n\n## <span id=\"create\">创建视图</span>\n\n**语法：**\n``` sql\n  CREATE VIEW viewName AS\n  SELECT column_name(s)\n  FROM table_name\n  WHERE condition\n```\n[`注释`：视图总是显示最近的数据。每当用户查询视图时，数据库引擎通过使用 SQL 语句来重建数据。]\n\n\n## 实践检验问题\n\n   **可以从某个查询内部、某个存储过程内部，或者从另一个视图内部来使用视图。通过向视图添加函数、join 等等，我们可以向用户精确地提交我们希望提交的数据。**\n\n   需要[准备数据文件](https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/mysql_create_view_database_prepare.sql)来做好操作的准备,里面是关于教师和学生的一个数据库表。\n\n### 走起\n **创建视图**\n  ``` sql\n    mysql> CREATE VIEW student_teacher AS\n        -> SELECT sname, tname\n        -> FROM student, teacher\n        -> WHERE student.tno=teacher.tno;\n\n    Query OK, 0 rows affected (0.13 sec)\n\n    mysql> select * from student_teacher;\n    +-------+-------+\n    | sname | tname |\n    +-------+-------+\n    | sa    | wa    |\n    | sb    | wa    |\n    | sc    | wa    |\n    | sd    | wa    |\n    | se    | wa    |\n    | sf    | wa    |\n    | sg    | wa    |\n    | sh    | wa    |\n    | si    | wa    |\n    | sj    | wa    |\n    | sk    | wa    |\n    | sl    | wa    |\n    | sm    | wa    |\n    | sn    | wa    |\n    +-------+-------+\n    14 rows in set (0.06 sec)\n\n  ```\n\n  这样，我们就可以得到了关于教师和学生的一个列表，但是我们并不知道这个是来自于两个表哦。\n\n **更新视图**\n ``` sql\n SQL CREATE OR REPLACE VIEW Syntax\n\n  CREATE OR REPLACE VIEW view_name AS\n  SELECT column_name(s)\n  FROM table_name\n  WHERE condition\n\n  ------------------------\n ```\n\n  这个是一个简单的例子。\n\n **撤销视图**\n ``` sql\n   SQL DROP VIEW Syntax\n   DROP VIEW view_name\n\n   ------------------------\n   mysql> DROP VIEW student_teacher;\n   Query OK, 0 rows affected (0.30 sec)\n\n ```\n## 参考链接\n- [MySQL 视图的创建，修改与删除](http://www.360doc.com/content/13/1117/22/7669533_330092770.shtml)\n- [MySQL视图表创建与修改](http://www.linuxidc.com/Linux/2012-02/53842.htm)\n- [mysql的视图操作](http://zhangzhenyihi.blog.163.com/blog/static/13548809420141104122391/)\n- [mysql中create view创建、更新和删除视图](http://www.php186.com/content/article/mysql/22726.html)\n- [MySQL中INSERT的一般用法](http://www.blogjava.net/midnightPigMan/archive/2014/12/15/421406.html)\n- [Mysql命令insert into：向表中插入数据（记录）](http://c.biancheng.net/cpp/html/1452.html)\n- [insert 出错](http://jingyan.baidu.com/article/9f7e7ec05c5ad76f281554ab.html)\n- [Mysql列约束,字段属性](http://wenku.baidu.com/link?url=SJeXJhp0ZgeTQnFfJhc4WUQL5Ov_34l57QKeUcW6nkcY0-GJO5ImFQHUuZpDeB-jTJ6buU87_AAJ2ix8ZWX0J0fwKIcqmWei7HKQd1RMopy)\n","slug":"Mysql-视图创建","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzcb001ape3qgya3bdzm","content":"<h2 id=\"关于视图-简单看看-如果不想知道视图用来干嘛的，那就跳过咯\"><a href=\"#关于视图-简单看看-如果不想知道视图用来干嘛的，那就跳过咯\" class=\"headerlink\" title=\"关于视图 - 简单看看(如果不想知道视图用来干嘛的，那就跳过咯)\"></a>关于视图 - 简单看看(<a href=\"#create\">如果不想知道视图用来干嘛的，那就跳过咯</a>)</h2><p>  <code>SQL</code> 中，视图时基于SQL语句的结果集的可视化的表</p>\n<p>  <code>视图</code>包含行和列，就像一个真实的表一样。</p>\n<p>  <code>视图</code>中的字段来自于一个或者多个数据库中的表的字段。</p>\n<p>  结果就是感觉就是单一的一张表，也可以说是间接的表啦。</p>\n<p>  使用<code>视图</code>，主要是为在操作数据库的时候，不在需要频繁多次去读取和处理不同字段，再进行第二次的处理形成我们所需要的数据。在这一步上面，我们可以提高效率，得到我们所需要的内容哦。</p>\n<p>  这样，我们可以把多张表合并成一张表，经过过滤之后的一张表哦。</p>\n<p>  <code>视图</code>是一种虚拟的表。<code>视图</code>从数据库中的一个或多个表导出来的表。<code>视图</code>还可以从已经存在的视图的基础上定义。数据库中只存放了视图的定义，而并没有存放视图中的数据。这些数据存放在原来的表中。使用视图查询数据时，数据库系统会从原来的表中取出对应的数据。因此，视图中的数据是依赖于原来的表中的数据的。一旦表中的数据发生改变，显示在视图中的数据也会发生改变。</p>\n<p>  <code>视图</code>是在原有的表或者视图的基础上重新定义的虚拟表，这可以从原有的表上选取对用户有用的信息。那些对用户没有用，或者用户没有权限了解的信息，都可以直接屏蔽掉。这样做既使应用简单化，也保证了系统的安全。视图起着类似于筛选的作用。视图的作用归纳为如下几点：<br>    1．使操作简单化<br>    2．增加数据的安全性<br>    3．提高表的逻辑独立性</p>\n<p>  [<code>注释</code>：数据库的设计和结构不会受到视图中的函数、where 或 join 语句的影响。]</p>\n<p>  <strong>OK,实际上。意思就是把多张表经过处理后的到一张整理过的，有需要的一张表，但是这个表的操作不会影响到原表的完整性，读它就可以啦。</strong></p>\n<h2 id=\"创建视图\"><a href=\"#创建视图\" class=\"headerlink\" title=\"创建视图\"></a><span id=\"create\">创建视图</span></h2><p><strong>语法：</strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> viewName <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> column_name(s)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> table_name</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> condition</span><br></pre></td></tr></table></figure></p>\n<p>[<code>注释</code>：视图总是显示最近的数据。每当用户查询视图时，数据库引擎通过使用 SQL 语句来重建数据。]</p>\n<h2 id=\"实践检验问题\"><a href=\"#实践检验问题\" class=\"headerlink\" title=\"实践检验问题\"></a>实践检验问题</h2><p>   <strong>可以从某个查询内部、某个存储过程内部，或者从另一个视图内部来使用视图。通过向视图添加函数、join 等等，我们可以向用户精确地提交我们希望提交的数据。</strong></p>\n<p>   需要<a href=\"https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/mysql_create_view_database_prepare.sql\" target=\"_blank\" rel=\"external\">准备数据文件</a>来做好操作的准备,里面是关于教师和学生的一个数据库表。</p>\n<h3 id=\"走起\"><a href=\"#走起\" class=\"headerlink\" title=\"走起\"></a>走起</h3><p> <strong>创建视图</strong><br>  <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE VIEW student_teacher AS</span><br><span class=\"line\">    -&gt; SELECT sname, tname</span><br><span class=\"line\">    -&gt; FROM student, teacher</span><br><span class=\"line\">    -&gt; WHERE student.tno=teacher.tno;</span><br><span class=\"line\"></span><br><span class=\"line\">Query OK, 0 rows affected (0.13 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from student_teacher;</span><br><span class=\"line\">+-------+-------+</span><br><span class=\"line\">| sname | tname |</span><br><span class=\"line\">+-------+-------+</span><br><span class=\"line\">| sa    | wa    |</span><br><span class=\"line\">| sb    | wa    |</span><br><span class=\"line\">| sc    | wa    |</span><br><span class=\"line\">| sd    | wa    |</span><br><span class=\"line\">| se    | wa    |</span><br><span class=\"line\">| sf    | wa    |</span><br><span class=\"line\">| sg    | wa    |</span><br><span class=\"line\">| sh    | wa    |</span><br><span class=\"line\">| si    | wa    |</span><br><span class=\"line\">| sj    | wa    |</span><br><span class=\"line\">| sk    | wa    |</span><br><span class=\"line\">| sl    | wa    |</span><br><span class=\"line\">| sm    | wa    |</span><br><span class=\"line\">| sn    | wa    |</span><br><span class=\"line\">+-------+-------+</span><br><span class=\"line\">14 rows in set (0.06 sec)</span><br></pre></td></tr></table></figure></p>\n<p>  这样，我们就可以得到了关于教师和学生的一个列表，但是我们并不知道这个是来自于两个表哦。</p>\n<p> <strong>更新视图</strong><br> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL <span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> <span class=\"keyword\">REPLACE</span> <span class=\"keyword\">VIEW</span> Syntax</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> <span class=\"keyword\">REPLACE</span> <span class=\"keyword\">VIEW</span> view_name <span class=\"keyword\">AS</span></span><br><span class=\"line\"> <span class=\"keyword\">SELECT</span> column_name(s)</span><br><span class=\"line\"> <span class=\"keyword\">FROM</span> table_name</span><br><span class=\"line\"> <span class=\"keyword\">WHERE</span> condition</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">------------------------</span></span><br></pre></td></tr></table></figure></p>\n<p>  这个是一个简单的例子。</p>\n<p> <strong>撤销视图</strong><br> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL <span class=\"keyword\">DROP</span> <span class=\"keyword\">VIEW</span> Syntax</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">VIEW</span> view_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">------------------------</span></span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">DROP</span> <span class=\"keyword\">VIEW</span> student_teacher;</span><br><span class=\"line\">Query OK, 0 rows affected (0.30 sec)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.360doc.com/content/13/1117/22/7669533_330092770.shtml\" target=\"_blank\" rel=\"external\">MySQL 视图的创建，修改与删除</a></li>\n<li><a href=\"http://www.linuxidc.com/Linux/2012-02/53842.htm\" target=\"_blank\" rel=\"external\">MySQL视图表创建与修改</a></li>\n<li><a href=\"http://zhangzhenyihi.blog.163.com/blog/static/13548809420141104122391/\" target=\"_blank\" rel=\"external\">mysql的视图操作</a></li>\n<li><a href=\"http://www.php186.com/content/article/mysql/22726.html\" target=\"_blank\" rel=\"external\">mysql中create view创建、更新和删除视图</a></li>\n<li><a href=\"http://www.blogjava.net/midnightPigMan/archive/2014/12/15/421406.html\" target=\"_blank\" rel=\"external\">MySQL中INSERT的一般用法</a></li>\n<li><a href=\"http://c.biancheng.net/cpp/html/1452.html\" target=\"_blank\" rel=\"external\">Mysql命令insert into：向表中插入数据（记录）</a></li>\n<li><a href=\"http://jingyan.baidu.com/article/9f7e7ec05c5ad76f281554ab.html\" target=\"_blank\" rel=\"external\">insert 出错</a></li>\n<li><a href=\"http://wenku.baidu.com/link?url=SJeXJhp0ZgeTQnFfJhc4WUQL5Ov_34l57QKeUcW6nkcY0-GJO5ImFQHUuZpDeB-jTJ6buU87_AAJ2ix8ZWX0J0fwKIcqmWei7HKQd1RMopy\" target=\"_blank\" rel=\"external\">Mysql列约束,字段属性</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"关于视图-简单看看-如果不想知道视图用来干嘛的，那就跳过咯\"><a href=\"#关于视图-简单看看-如果不想知道视图用来干嘛的，那就跳过咯\" class=\"headerlink\" title=\"关于视图 - 简单看看(如果不想知道视图用来干嘛的，那就跳过咯)\"></a>关于视图 - 简单看看(<a href=\"#create\">如果不想知道视图用来干嘛的，那就跳过咯</a>)</h2><p>  <code>SQL</code> 中，视图时基于SQL语句的结果集的可视化的表</p>\n<p>  <code>视图</code>包含行和列，就像一个真实的表一样。</p>\n<p>  <code>视图</code>中的字段来自于一个或者多个数据库中的表的字段。</p>\n<p>  结果就是感觉就是单一的一张表，也可以说是间接的表啦。</p>\n<p>  使用<code>视图</code>，主要是为在操作数据库的时候，不在需要频繁多次去读取和处理不同字段，再进行第二次的处理形成我们所需要的数据。在这一步上面，我们可以提高效率，得到我们所需要的内容哦。</p>\n<p>  这样，我们可以把多张表合并成一张表，经过过滤之后的一张表哦。</p>\n<p>  <code>视图</code>是一种虚拟的表。<code>视图</code>从数据库中的一个或多个表导出来的表。<code>视图</code>还可以从已经存在的视图的基础上定义。数据库中只存放了视图的定义，而并没有存放视图中的数据。这些数据存放在原来的表中。使用视图查询数据时，数据库系统会从原来的表中取出对应的数据。因此，视图中的数据是依赖于原来的表中的数据的。一旦表中的数据发生改变，显示在视图中的数据也会发生改变。</p>\n<p>  <code>视图</code>是在原有的表或者视图的基础上重新定义的虚拟表，这可以从原有的表上选取对用户有用的信息。那些对用户没有用，或者用户没有权限了解的信息，都可以直接屏蔽掉。这样做既使应用简单化，也保证了系统的安全。视图起着类似于筛选的作用。视图的作用归纳为如下几点：<br>    1．使操作简单化<br>    2．增加数据的安全性<br>    3．提高表的逻辑独立性</p>\n<p>  [<code>注释</code>：数据库的设计和结构不会受到视图中的函数、where 或 join 语句的影响。]</p>\n<p>  <strong>OK,实际上。意思就是把多张表经过处理后的到一张整理过的，有需要的一张表，但是这个表的操作不会影响到原表的完整性，读它就可以啦。</strong></p>\n<h2 id=\"创建视图\"><a href=\"#创建视图\" class=\"headerlink\" title=\"创建视图\"></a><span id=\"create\">创建视图</span></h2><p><strong>语法：</strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> viewName <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> column_name(s)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> table_name</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> condition</span><br></pre></td></tr></table></figure></p>\n<p>[<code>注释</code>：视图总是显示最近的数据。每当用户查询视图时，数据库引擎通过使用 SQL 语句来重建数据。]</p>\n<h2 id=\"实践检验问题\"><a href=\"#实践检验问题\" class=\"headerlink\" title=\"实践检验问题\"></a>实践检验问题</h2><p>   <strong>可以从某个查询内部、某个存储过程内部，或者从另一个视图内部来使用视图。通过向视图添加函数、join 等等，我们可以向用户精确地提交我们希望提交的数据。</strong></p>\n<p>   需要<a href=\"https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/mysql_create_view_database_prepare.sql\">准备数据文件</a>来做好操作的准备,里面是关于教师和学生的一个数据库表。</p>\n<h3 id=\"走起\"><a href=\"#走起\" class=\"headerlink\" title=\"走起\"></a>走起</h3><p> <strong>创建视图</strong><br>  <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE VIEW student_teacher AS</span><br><span class=\"line\">    -&gt; SELECT sname, tname</span><br><span class=\"line\">    -&gt; FROM student, teacher</span><br><span class=\"line\">    -&gt; WHERE student.tno=teacher.tno;</span><br><span class=\"line\"></span><br><span class=\"line\">Query OK, 0 rows affected (0.13 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from student_teacher;</span><br><span class=\"line\">+-------+-------+</span><br><span class=\"line\">| sname | tname |</span><br><span class=\"line\">+-------+-------+</span><br><span class=\"line\">| sa    | wa    |</span><br><span class=\"line\">| sb    | wa    |</span><br><span class=\"line\">| sc    | wa    |</span><br><span class=\"line\">| sd    | wa    |</span><br><span class=\"line\">| se    | wa    |</span><br><span class=\"line\">| sf    | wa    |</span><br><span class=\"line\">| sg    | wa    |</span><br><span class=\"line\">| sh    | wa    |</span><br><span class=\"line\">| si    | wa    |</span><br><span class=\"line\">| sj    | wa    |</span><br><span class=\"line\">| sk    | wa    |</span><br><span class=\"line\">| sl    | wa    |</span><br><span class=\"line\">| sm    | wa    |</span><br><span class=\"line\">| sn    | wa    |</span><br><span class=\"line\">+-------+-------+</span><br><span class=\"line\">14 rows in set (0.06 sec)</span><br></pre></td></tr></table></figure></p>\n<p>  这样，我们就可以得到了关于教师和学生的一个列表，但是我们并不知道这个是来自于两个表哦。</p>\n<p> <strong>更新视图</strong><br> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL <span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> <span class=\"keyword\">REPLACE</span> <span class=\"keyword\">VIEW</span> Syntax</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">CREATE</span> <span class=\"keyword\">OR</span> <span class=\"keyword\">REPLACE</span> <span class=\"keyword\">VIEW</span> view_name <span class=\"keyword\">AS</span></span><br><span class=\"line\"> <span class=\"keyword\">SELECT</span> column_name(s)</span><br><span class=\"line\"> <span class=\"keyword\">FROM</span> table_name</span><br><span class=\"line\"> <span class=\"keyword\">WHERE</span> condition</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">------------------------</span></span><br></pre></td></tr></table></figure></p>\n<p>  这个是一个简单的例子。</p>\n<p> <strong>撤销视图</strong><br> <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL <span class=\"keyword\">DROP</span> <span class=\"keyword\">VIEW</span> Syntax</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">VIEW</span> view_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">------------------------</span></span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">DROP</span> <span class=\"keyword\">VIEW</span> student_teacher;</span><br><span class=\"line\">Query OK, 0 rows affected (0.30 sec)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.360doc.com/content/13/1117/22/7669533_330092770.shtml\">MySQL 视图的创建，修改与删除</a></li>\n<li><a href=\"http://www.linuxidc.com/Linux/2012-02/53842.htm\">MySQL视图表创建与修改</a></li>\n<li><a href=\"http://zhangzhenyihi.blog.163.com/blog/static/13548809420141104122391/\">mysql的视图操作</a></li>\n<li><a href=\"http://www.php186.com/content/article/mysql/22726.html\">mysql中create view创建、更新和删除视图</a></li>\n<li><a href=\"http://www.blogjava.net/midnightPigMan/archive/2014/12/15/421406.html\">MySQL中INSERT的一般用法</a></li>\n<li><a href=\"http://c.biancheng.net/cpp/html/1452.html\">Mysql命令insert into：向表中插入数据（记录）</a></li>\n<li><a href=\"http://jingyan.baidu.com/article/9f7e7ec05c5ad76f281554ab.html\">insert 出错</a></li>\n<li><a href=\"http://wenku.baidu.com/link?url=SJeXJhp0ZgeTQnFfJhc4WUQL5Ov_34l57QKeUcW6nkcY0-GJO5ImFQHUuZpDeB-jTJ6buU87_AAJ2ix8ZWX0J0fwKIcqmWei7HKQd1RMopy\">Mysql列约束,字段属性</a></li>\n</ul>\n"},{"title":"Mysql 连接数据库","date":"2016-03-13T07:19:50.000Z","_content":"\n## 数据库的连接 for Mysql\n\n**格式：mysql -u<用户名> －p<密码>**\n或者\n**格式：mysql -u<用户名> －p** \n\n``` bash\n  $ mysql -uroot -p\n  Enter password:\n  Welcome to the MySQL monitor.  Commands end with ; or \\g.\n  Your MySQL connection id is 13\n  Server version: 5.7.11 MySQL Community Server (GPL)\n\n  Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.\n\n  Oracle is a registered trademark of Oracle Corporation and/or its\n  affiliates. Other names may be trademarks of their respective\n  owners.\n\n  Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\n  mysql>\n\n```\n","source":"_posts/Mysql-连接数据库.md","raw":"title: Mysql 连接数据库\ndate: 2016-03-13 15:19:50\ntags:\n- Mysql\n- 数据库\n- login\n- database\n\n---\n\n## 数据库的连接 for Mysql\n\n**格式：mysql -u<用户名> －p<密码>**\n或者\n**格式：mysql -u<用户名> －p** \n\n``` bash\n  $ mysql -uroot -p\n  Enter password:\n  Welcome to the MySQL monitor.  Commands end with ; or \\g.\n  Your MySQL connection id is 13\n  Server version: 5.7.11 MySQL Community Server (GPL)\n\n  Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.\n\n  Oracle is a registered trademark of Oracle Corporation and/or its\n  affiliates. Other names may be trademarks of their respective\n  owners.\n\n  Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\n  mysql>\n\n```\n","slug":"Mysql-连接数据库","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzcf001cpe3qnk0csgu4","content":"<h2 id=\"数据库的连接-for-Mysql\"><a href=\"#数据库的连接-for-Mysql\" class=\"headerlink\" title=\"数据库的连接 for Mysql\"></a>数据库的连接 for Mysql</h2><p><strong>格式：mysql -u&lt;用户名&gt; －p&lt;密码&gt;</strong><br>或者<br><strong>格式：mysql -u&lt;用户名&gt; －p</strong> </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mysql -uroot -p</span><br><span class=\"line\">Enter password:</span><br><span class=\"line\">Welcome to the MySQL monitor.  Commands end with ; or \\g.</span><br><span class=\"line\">Your MySQL connection id is 13</span><br><span class=\"line\">Server version: 5.7.11 MySQL Community Server (GPL)</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class=\"line\">affiliates. Other names may be trademarks of their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\">Type <span class=\"string\">'help;'</span> or <span class=\"string\">'\\h'</span> <span class=\"keyword\">for</span> help. Type <span class=\"string\">'\\c'</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"数据库的连接-for-Mysql\"><a href=\"#数据库的连接-for-Mysql\" class=\"headerlink\" title=\"数据库的连接 for Mysql\"></a>数据库的连接 for Mysql</h2><p><strong>格式：mysql -u&lt;用户名&gt; －p&lt;密码&gt;</strong><br>或者<br><strong>格式：mysql -u&lt;用户名&gt; －p</strong> </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mysql -uroot -p</span><br><span class=\"line\">Enter password:</span><br><span class=\"line\">Welcome to the MySQL monitor.  Commands end with ; or \\g.</span><br><span class=\"line\">Your MySQL connection id is 13</span><br><span class=\"line\">Server version: 5.7.11 MySQL Community Server (GPL)</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class=\"line\">affiliates. Other names may be trademarks of their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\">Type <span class=\"string\">'help;'</span> or <span class=\"string\">'\\h'</span> <span class=\"keyword\">for</span> help. Type <span class=\"string\">'\\c'</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;</span><br></pre></td></tr></table></figure>\n"},{"title":"Python Error:TypeError: string indices must be integers, not str","date":"2016-03-23T14:17:20.000Z","_content":"\n## 这个情况出现的原因\n\n   由于当前的'字典'并不是字典，而是字符串。导致了拿字典的访问方法去访问字符串就会出现访问字典的\n  下标，字典的下标是数字而不是字符串。所以出错了。\n\n---\n\n## 解决问题\n\n   再次确认一下你的字典是否是真的字典，还是一个字符串。最好 `debug` 一下\n\n---\n\n## 实践例子\n  这是一个长得跟字典很像的家伙\n  ``` Python\n  >>> dict = \"{8:'bye', 'you':'coder'}\" #假字典 fake\n  >>> dict_real = {8:'bye', 'you':'coder'} # 真字典 real\n  >>> print dict\n  {8:'bye', 'you':'coder'} # 哟呵，输出\n  >>> print dict_real\n  {8: 'bye', 'you': 'coder'} # 这是真字典的输出。\n  # 然后我们来获取键 'you'的值\n  # 真字典情况\n  >>> print dict_real['you']\n  coder # 没有问题哦，\n  # 看看假字典的真面目啦。。。。。。\n  >>> print dict['you']\n  Traceback (most recent call last): # 错误咯，这就是原因啦。\n    File \"<stdin>\", line 1, in <module>\n  TypeError: string indices must be integers, not str\n  ```\n\n##参考链接\n- [TypeError: string indices must be integers, not str // working with dict](http://stackoverflow.com/questions/18931315/typeerror-string-indices-must-be-integers-not-str-working-with-dict)\n","source":"_posts/Python-Error-TypeError-string-indices-must-be-integers-not-str.md","raw":"title: 'Python Error:TypeError: string indices must be integers, not str'\ndate: 2016-03-23 22:17:20\ntags:\n- Python\n- dict\n- dictionary\n- Error\n\n---\n\n## 这个情况出现的原因\n\n   由于当前的'字典'并不是字典，而是字符串。导致了拿字典的访问方法去访问字符串就会出现访问字典的\n  下标，字典的下标是数字而不是字符串。所以出错了。\n\n---\n\n## 解决问题\n\n   再次确认一下你的字典是否是真的字典，还是一个字符串。最好 `debug` 一下\n\n---\n\n## 实践例子\n  这是一个长得跟字典很像的家伙\n  ``` Python\n  >>> dict = \"{8:'bye', 'you':'coder'}\" #假字典 fake\n  >>> dict_real = {8:'bye', 'you':'coder'} # 真字典 real\n  >>> print dict\n  {8:'bye', 'you':'coder'} # 哟呵，输出\n  >>> print dict_real\n  {8: 'bye', 'you': 'coder'} # 这是真字典的输出。\n  # 然后我们来获取键 'you'的值\n  # 真字典情况\n  >>> print dict_real['you']\n  coder # 没有问题哦，\n  # 看看假字典的真面目啦。。。。。。\n  >>> print dict['you']\n  Traceback (most recent call last): # 错误咯，这就是原因啦。\n    File \"<stdin>\", line 1, in <module>\n  TypeError: string indices must be integers, not str\n  ```\n\n##参考链接\n- [TypeError: string indices must be integers, not str // working with dict](http://stackoverflow.com/questions/18931315/typeerror-string-indices-must-be-integers-not-str-working-with-dict)\n","slug":"Python-Error-TypeError-string-indices-must-be-integers-not-str","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzcg001fpe3qxajkz18q","content":"<h2 id=\"这个情况出现的原因\"><a href=\"#这个情况出现的原因\" class=\"headerlink\" title=\"这个情况出现的原因\"></a>这个情况出现的原因</h2><p>   由于当前的’字典’并不是字典，而是字符串。导致了拿字典的访问方法去访问字符串就会出现访问字典的<br>  下标，字典的下标是数字而不是字符串。所以出错了。</p>\n<hr>\n<h2 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h2><p>   再次确认一下你的字典是否是真的字典，还是一个字符串。最好 <code>debug</code> 一下</p>\n<hr>\n<h2 id=\"实践例子\"><a href=\"#实践例子\" class=\"headerlink\" title=\"实践例子\"></a>实践例子</h2><p>  这是一个长得跟字典很像的家伙<br>  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict = <span class=\"string\">\"&#123;8:'bye', 'you':'coder'&#125;\"</span> <span class=\"comment\">#假字典 fake</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict_real = &#123;<span class=\"number\">8</span>:<span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>:<span class=\"string\">'coder'</span>&#125; <span class=\"comment\"># 真字典 real</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict</span><br><span class=\"line\">&#123;<span class=\"number\">8</span>:<span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>:<span class=\"string\">'coder'</span>&#125; <span class=\"comment\"># 哟呵，输出</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict_real</span><br><span class=\"line\">&#123;<span class=\"number\">8</span>: <span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>: <span class=\"string\">'coder'</span>&#125; <span class=\"comment\"># 这是真字典的输出。</span></span><br><span class=\"line\"><span class=\"comment\"># 然后我们来获取键 'you'的值</span></span><br><span class=\"line\"><span class=\"comment\"># 真字典情况</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict_real[<span class=\"string\">'you'</span>]</span><br><span class=\"line\">coder <span class=\"comment\"># 没有问题哦，</span></span><br><span class=\"line\"><span class=\"comment\"># 看看假字典的真面目啦。。。。。。</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict[<span class=\"string\">'you'</span>]</span><br><span class=\"line\">Traceback (most recent call last): <span class=\"comment\"># 错误咯，这就是原因啦。</span></span><br><span class=\"line\">  File <span class=\"string\">\"&lt;stdin&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">TypeError: string indices must be integers, <span class=\"keyword\">not</span> str</span><br></pre></td></tr></table></figure></p>\n<p>##参考链接</p>\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/18931315/typeerror-string-indices-must-be-integers-not-str-working-with-dict\" target=\"_blank\" rel=\"external\">TypeError: string indices must be integers, not str // working with dict</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"这个情况出现的原因\"><a href=\"#这个情况出现的原因\" class=\"headerlink\" title=\"这个情况出现的原因\"></a>这个情况出现的原因</h2><p>   由于当前的’字典’并不是字典，而是字符串。导致了拿字典的访问方法去访问字符串就会出现访问字典的<br>  下标，字典的下标是数字而不是字符串。所以出错了。</p>\n<hr>\n<h2 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h2><p>   再次确认一下你的字典是否是真的字典，还是一个字符串。最好 <code>debug</code> 一下</p>\n<hr>\n<h2 id=\"实践例子\"><a href=\"#实践例子\" class=\"headerlink\" title=\"实践例子\"></a>实践例子</h2><p>  这是一个长得跟字典很像的家伙<br>  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict = <span class=\"string\">\"&#123;8:'bye', 'you':'coder'&#125;\"</span> <span class=\"comment\">#假字典 fake</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict_real = &#123;<span class=\"number\">8</span>:<span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>:<span class=\"string\">'coder'</span>&#125; <span class=\"comment\"># 真字典 real</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict</span><br><span class=\"line\">&#123;<span class=\"number\">8</span>:<span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>:<span class=\"string\">'coder'</span>&#125; <span class=\"comment\"># 哟呵，输出</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict_real</span><br><span class=\"line\">&#123;<span class=\"number\">8</span>: <span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>: <span class=\"string\">'coder'</span>&#125; <span class=\"comment\"># 这是真字典的输出。</span></span><br><span class=\"line\"><span class=\"comment\"># 然后我们来获取键 'you'的值</span></span><br><span class=\"line\"><span class=\"comment\"># 真字典情况</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict_real[<span class=\"string\">'you'</span>]</span><br><span class=\"line\">coder <span class=\"comment\"># 没有问题哦，</span></span><br><span class=\"line\"><span class=\"comment\"># 看看假字典的真面目啦。。。。。。</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict[<span class=\"string\">'you'</span>]</span><br><span class=\"line\">Traceback (most recent call last): <span class=\"comment\"># 错误咯，这就是原因啦。</span></span><br><span class=\"line\">  File <span class=\"string\">\"&lt;stdin&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">TypeError: string indices must be integers, <span class=\"keyword\">not</span> str</span><br></pre></td></tr></table></figure></p>\n<p>##参考链接</p>\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/18931315/typeerror-string-indices-must-be-integers-not-str-working-with-dict\">TypeError: string indices must be integers, not str // working with dict</a></li>\n</ul>\n"},{"title":"Python setattr 使用和分析","date":"2016-03-22T02:13:33.000Z","_content":"\n## setattr 讲解\n``` Python\n setattr(\tobject, name, value)\n\n # 参数就是一个对象，name是可能是现有的属性或者是一个可以新建的属性，value为该属性的值。\n #\n # 这样，我们可以动态的生成属性\n # 记住，name 和 value 都是字符串值哦。\n\n```\n\n## setattr 实践\n\n  [代码来源](https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/py_setattr.py)\n  首先，去掉 第15行的注释运行,结果显示如下\n  ``` bash\n  $ python py_setattr.py\n  attr4 exists?\n  Traceback (most recent call last):\n    File \"py_setattr.py\", line 15, in <module>\n      print T.attr4\n  AttributeError: 'test' object has no attribute 'attr4'\n  ```\n\n  再加上注释，运行\n  ``` bash\n  $ python py_setattr.py                        \n  attr4 exists?\n  create new attribute <attr4> test4\n  attribute <attr3>:test3\n  changed attribute <attr3> :test3_changed\n  ```\n## 参考链接\n- [Python的getattr(),setattr(),delattr(),hasattr()](http://www.cnblogs.com/zhangjing0502/archive/2012/05/16/2503702.html)\n- [Python 类 setattr、getattr、hasattr 的使用](http://www.tuicool.com/articles/YNV3QnR)\n","source":"_posts/Python-setattr-使用和分析.md","raw":"title: Python setattr 使用和分析\ndate: 2016-03-22 10:13:33\ntags:\n- Python\n- setattr\n\n---\n\n## setattr 讲解\n``` Python\n setattr(\tobject, name, value)\n\n # 参数就是一个对象，name是可能是现有的属性或者是一个可以新建的属性，value为该属性的值。\n #\n # 这样，我们可以动态的生成属性\n # 记住，name 和 value 都是字符串值哦。\n\n```\n\n## setattr 实践\n\n  [代码来源](https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/py_setattr.py)\n  首先，去掉 第15行的注释运行,结果显示如下\n  ``` bash\n  $ python py_setattr.py\n  attr4 exists?\n  Traceback (most recent call last):\n    File \"py_setattr.py\", line 15, in <module>\n      print T.attr4\n  AttributeError: 'test' object has no attribute 'attr4'\n  ```\n\n  再加上注释，运行\n  ``` bash\n  $ python py_setattr.py                        \n  attr4 exists?\n  create new attribute <attr4> test4\n  attribute <attr3>:test3\n  changed attribute <attr3> :test3_changed\n  ```\n## 参考链接\n- [Python的getattr(),setattr(),delattr(),hasattr()](http://www.cnblogs.com/zhangjing0502/archive/2012/05/16/2503702.html)\n- [Python 类 setattr、getattr、hasattr 的使用](http://www.tuicool.com/articles/YNV3QnR)\n","slug":"Python-setattr-使用和分析","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzcj001hpe3qf0nxo7g8","content":"<h2 id=\"setattr-讲解\"><a href=\"#setattr-讲解\" class=\"headerlink\" title=\"setattr 讲解\"></a>setattr 讲解</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setattr(\tobject, name, value)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数就是一个对象，name是可能是现有的属性或者是一个可以新建的属性，value为该属性的值。</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># 这样，我们可以动态的生成属性</span></span><br><span class=\"line\"><span class=\"comment\"># 记住，name 和 value 都是字符串值哦。</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"setattr-实践\"><a href=\"#setattr-实践\" class=\"headerlink\" title=\"setattr 实践\"></a>setattr 实践</h2><p>  <a href=\"https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/py_setattr.py\" target=\"_blank\" rel=\"external\">代码来源</a><br>  首先，去掉 第15行的注释运行,结果显示如下<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python py_setattr.py</span><br><span class=\"line\">attr4 exists?</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">\"py_setattr.py\"</span>, line 15, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"built_in\">print</span> T.attr4</span><br><span class=\"line\">AttributeError: <span class=\"string\">'test'</span> object has no attribute <span class=\"string\">'attr4'</span></span><br></pre></td></tr></table></figure></p>\n<p>  再加上注释，运行<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python py_setattr.py                        </span><br><span class=\"line\">attr4 exists?</span><br><span class=\"line\">create new attribute &lt;attr4&gt; <span class=\"built_in\">test</span>4</span><br><span class=\"line\">attribute &lt;attr3&gt;:<span class=\"built_in\">test</span>3</span><br><span class=\"line\">changed attribute &lt;attr3&gt; :<span class=\"built_in\">test</span>3_changed</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.cnblogs.com/zhangjing0502/archive/2012/05/16/2503702.html\" target=\"_blank\" rel=\"external\">Python的getattr(),setattr(),delattr(),hasattr()</a></li>\n<li><a href=\"http://www.tuicool.com/articles/YNV3QnR\" target=\"_blank\" rel=\"external\">Python 类 setattr、getattr、hasattr 的使用</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"setattr-讲解\"><a href=\"#setattr-讲解\" class=\"headerlink\" title=\"setattr 讲解\"></a>setattr 讲解</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setattr(\tobject, name, value)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数就是一个对象，name是可能是现有的属性或者是一个可以新建的属性，value为该属性的值。</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># 这样，我们可以动态的生成属性</span></span><br><span class=\"line\"><span class=\"comment\"># 记住，name 和 value 都是字符串值哦。</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"setattr-实践\"><a href=\"#setattr-实践\" class=\"headerlink\" title=\"setattr 实践\"></a>setattr 实践</h2><p>  <a href=\"https://raw.githubusercontent.com/scofieldWyq/wyqBlog/master/code/py_setattr.py\">代码来源</a><br>  首先，去掉 第15行的注释运行,结果显示如下<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python py_setattr.py</span><br><span class=\"line\">attr4 exists?</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">\"py_setattr.py\"</span>, line 15, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"built_in\">print</span> T.attr4</span><br><span class=\"line\">AttributeError: <span class=\"string\">'test'</span> object has no attribute <span class=\"string\">'attr4'</span></span><br></pre></td></tr></table></figure></p>\n<p>  再加上注释，运行<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python py_setattr.py                        </span><br><span class=\"line\">attr4 exists?</span><br><span class=\"line\">create new attribute &lt;attr4&gt; <span class=\"built_in\">test</span>4</span><br><span class=\"line\">attribute &lt;attr3&gt;:<span class=\"built_in\">test</span>3</span><br><span class=\"line\">changed attribute &lt;attr3&gt; :<span class=\"built_in\">test</span>3_changed</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.cnblogs.com/zhangjing0502/archive/2012/05/16/2503702.html\">Python的getattr(),setattr(),delattr(),hasattr()</a></li>\n<li><a href=\"http://www.tuicool.com/articles/YNV3QnR\">Python 类 setattr、getattr、hasattr 的使用</a></li>\n</ul>\n"},{"title":"Python utf-8编码的16进制字符串转换成对应的文字","date":"2016-03-24T00:11:13.000Z","_content":"","source":"_posts/Python-utf-8编码的16进制字符串转换成对应的文字.md","raw":"title: Python utf-8编码的16进制字符串转换成对应的文字\ndate: 2016-03-24 08:11:13\ntags:\n---\n","slug":"Python-utf-8编码的16进制字符串转换成对应的文字","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzck001jpe3qz76k54kq","content":"","excerpt":"","more":""},{"title":"Python 函数返回多值的分析","date":"2016-03-14T03:16:16.000Z","_content":"\n## 函数返回多值的原理\n\n   实际上，函数返回多值的内容就是一个 `tuple`\n\n## 我们来看看表面\n\n``` python\nimport math\n\ndef move(x, y, step, angle=0):\n    nx = x + step * math.cos(angle)\n    ny = y - step * math.sin(angle)\n    return nx, ny\n\n```\n\n这样我们就可以同时获得返回值：\n\n``` python\n>>> x, y = move(100, 100, 60, math.pi / 6)\n>>> print x, y\n151.961524227 70.0\n```\n哟呵，真的可以返回多值耶。\n\n## 实际的原理\n\n  Python函数返回的仍然是单一值：\n\n``` python\n>>> r = move(100, 100, 60, math.pi / 6)\n>>> print r\n(151.96152422706632, 70.0)\n```\n  其实就是一个 `tuple`，实际就是这样，并没有那么神秘嘛。\n\n## 参考链接\n\n - [廖雪峰python教程](http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00137473843313062a8b0e7c19b40aa8f31bdc4db5f6498000)\n","source":"_posts/Python-函数返回多值的分析.md","raw":"title: Python 函数返回多值的分析\ndate: 2016-03-14 11:16:16\ntags:\n- Python\n- 函数\n- 多值返回\n\n---\n\n## 函数返回多值的原理\n\n   实际上，函数返回多值的内容就是一个 `tuple`\n\n## 我们来看看表面\n\n``` python\nimport math\n\ndef move(x, y, step, angle=0):\n    nx = x + step * math.cos(angle)\n    ny = y - step * math.sin(angle)\n    return nx, ny\n\n```\n\n这样我们就可以同时获得返回值：\n\n``` python\n>>> x, y = move(100, 100, 60, math.pi / 6)\n>>> print x, y\n151.961524227 70.0\n```\n哟呵，真的可以返回多值耶。\n\n## 实际的原理\n\n  Python函数返回的仍然是单一值：\n\n``` python\n>>> r = move(100, 100, 60, math.pi / 6)\n>>> print r\n(151.96152422706632, 70.0)\n```\n  其实就是一个 `tuple`，实际就是这样，并没有那么神秘嘛。\n\n## 参考链接\n\n - [廖雪峰python教程](http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00137473843313062a8b0e7c19b40aa8f31bdc4db5f6498000)\n","slug":"Python-函数返回多值的分析","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzcm001lpe3qd0iiwsri","content":"<h2 id=\"函数返回多值的原理\"><a href=\"#函数返回多值的原理\" class=\"headerlink\" title=\"函数返回多值的原理\"></a>函数返回多值的原理</h2><p>   实际上，函数返回多值的内容就是一个 <code>tuple</code></p>\n<h2 id=\"我们来看看表面\"><a href=\"#我们来看看表面\" class=\"headerlink\" title=\"我们来看看表面\"></a>我们来看看表面</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">move</span><span class=\"params\">(x, y, step, angle=<span class=\"number\">0</span>)</span>:</span></span><br><span class=\"line\">    nx = x + step * math.cos(angle)</span><br><span class=\"line\">    ny = y - step * math.sin(angle)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nx, ny</span><br></pre></td></tr></table></figure>\n<p>这样我们就可以同时获得返回值：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>x, y = move(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">60</span>, math.pi / <span class=\"number\">6</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> x, y</span><br><span class=\"line\"><span class=\"number\">151.961524227</span> <span class=\"number\">70.0</span></span><br></pre></td></tr></table></figure>\n<p>哟呵，真的可以返回多值耶。</p>\n<h2 id=\"实际的原理\"><a href=\"#实际的原理\" class=\"headerlink\" title=\"实际的原理\"></a>实际的原理</h2><p>  Python函数返回的仍然是单一值：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>r = move(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">60</span>, math.pi / <span class=\"number\">6</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> r</span><br><span class=\"line\">(<span class=\"number\">151.96152422706632</span>, <span class=\"number\">70.0</span>)</span><br></pre></td></tr></table></figure>\n<p>  其实就是一个 <code>tuple</code>，实际就是这样，并没有那么神秘嘛。</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00137473843313062a8b0e7c19b40aa8f31bdc4db5f6498000\" target=\"_blank\" rel=\"external\">廖雪峰python教程</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"函数返回多值的原理\"><a href=\"#函数返回多值的原理\" class=\"headerlink\" title=\"函数返回多值的原理\"></a>函数返回多值的原理</h2><p>   实际上，函数返回多值的内容就是一个 <code>tuple</code></p>\n<h2 id=\"我们来看看表面\"><a href=\"#我们来看看表面\" class=\"headerlink\" title=\"我们来看看表面\"></a>我们来看看表面</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">move</span><span class=\"params\">(x, y, step, angle=<span class=\"number\">0</span>)</span>:</span></span><br><span class=\"line\">    nx = x + step * math.cos(angle)</span><br><span class=\"line\">    ny = y - step * math.sin(angle)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nx, ny</span><br></pre></td></tr></table></figure>\n<p>这样我们就可以同时获得返回值：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>x, y = move(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">60</span>, math.pi / <span class=\"number\">6</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> x, y</span><br><span class=\"line\"><span class=\"number\">151.961524227</span> <span class=\"number\">70.0</span></span><br></pre></td></tr></table></figure>\n<p>哟呵，真的可以返回多值耶。</p>\n<h2 id=\"实际的原理\"><a href=\"#实际的原理\" class=\"headerlink\" title=\"实际的原理\"></a>实际的原理</h2><p>  Python函数返回的仍然是单一值：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>r = move(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">60</span>, math.pi / <span class=\"number\">6</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> r</span><br><span class=\"line\">(<span class=\"number\">151.96152422706632</span>, <span class=\"number\">70.0</span>)</span><br></pre></td></tr></table></figure>\n<p>  其实就是一个 <code>tuple</code>，实际就是这样，并没有那么神秘嘛。</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00137473843313062a8b0e7c19b40aa8f31bdc4db5f6498000\">廖雪峰python教程</a></li>\n</ul>\n"},{"title":"Python 字典","date":"2016-03-23T14:14:19.000Z","_content":"## 过程\n\n   在字典中，先根据需求来获得字典，然后就是先使用它增删查改，然后就是一些主意的事项了。\n   [创建字典](#create)\n   [查询字典内容](#search)\n   [更改字典的值](#change)\n   [删除字典的值](#delete)\n   [字典内置的函数&方法](#method)\n\n## 简单介绍字典的用途\n\n   在数据中，具有键-值（key-value）存储，具有极快的查找速度。使用字典，我们就可以通过字符串来获取到我们想要的信息。\n\n\n---\n\n## <span id=\"create\">创建字典</span>\n\n   字典是有键值对组成的一种容器。那如何创建它呢？\n   ``` Python\n   >>> dict = {'d1':'dict1', 'd2':'dict2', 'd3':'dict3', 'd4':'dict4'}\n   >>> print dict\n   ```\n\n   结果如下\n   ``` bash\n   {'d4': 'dict4', 'd2': 'dict2', 'd3': 'dict3', 'd1': 'dict1'}\n   ```\n\n   这样，我们的字典创建就可以了，以key-value 的形式作为元素哦。\n\n## 关于字典的键(key)   \n   value 可以没有限制地取任何python对象，但是 key 就需要记住两个：\n\n   1. 不允许同一个键出现`两次`。创建时如果同一个键被赋值两次，`后一个值会被记住`。\n   ``` python\n    >>> dict = {'name':'hello', 'name':'oh'}\n    >>> print dict\n    {'name': 'oh'}\n    # 只有一个值，那就是最后同名的那个值\n   ```  \n\n   2. `键`必须不可变，所以可以用`数`，`字符串`或`元组`充当。\n   ``` python\n   >>> dict = {8:'bye', 'you':'coder'} # 包括了 数 '8'， 字符串 'you'\n   >>> print dict\n   {8: 'bye', 'you': 'coder'}\n   >>> print 'dict[8]' + dict[8] + ', dict[\\'you\\']' + dict['you']\n   dict[8]bye, dict['you']coder\n   ```\n\n---\n\n## <span id=\"search\">查询字典的值</span>\n\n  **字典的查询就不难了，依照上面的字典。试一试**\n    ``` Python\n    >>> dict = {8:'bye', 'you':'coder'} # 包括了 数 '8'， 字符串 'you'\n    >>> dict[8]\n    'bye'\n    >>> dict['you']\n    'coder'\n    ```\n\n  通过键我们就可以访问到字典对应的值了，不会像数组那样从 `index 0` 开始了。\n\n  **但是如果我们查询的键没有呢？就会出错。**\n    ``` python\n    >>> dict[9]\n    Traceback (most recent call last):\n    File \"<stdin>\", line 1, in <module>\n    KeyError: 9\n    ```\n\n\n  那么怎么样才知道它有没有这个`键(key)`呢? 使用方法 `has_key([key])`\n    ``` python\n    >>> dict.has_key(9)\n    False\n    >>> dict.has_key(8)\n    True\n    # 这样我们就可以在脚本中去判断键的存在咯。\n    ```\n  **那如果出现Python Error:TypeError: string indices must be integers, not str呢**\n    请参照[Python Error:TypeError: string indices must be integers, not str](http://scofieldwyq.github.io/2016/03/23/Python-Error-TypeError-string-indices-must-be-integers-not-str/)\n\n---\n\n## <span id=\"change\">更改字典的值</span>\n  **修改字典的值，就很容易了。获取到对应键的值，再赋值就好了。**\n    ``` Python\n    >>> print dict[8]\n    bye\n    >>> dict[8]=80\n    >>> print dict[8]\n    80\n    ```\n\n  结果就是这样简单啦。\n\n---\n\n## <span id=\"delete\">删除字典的值</span>\n  删除字典有两种\n  1. 删除单一元素 `del`\n    ``` python\n    >>> dict = {8:'bye', 'you':'coder'}\n    >>> print dict\n    {8: 'bye', 'you': 'coder'}\n    >>> del dict[8] # 删除元素\n    >>> print dict\n    {'you': 'coder'}\n    ```\n  2. 清空字典 `dict-instance.clear()`\n    ``` Python\n    >>> dict = {8:'bye', 'you':'coder'}\n    >>> dict.clear() # 清空字典元素啦。。。。\n    >>> print dict\n    {}\n    ```\n\n---\n\n## <span id=\"method\">字典内置的函数&方法</span>\n  **内置函数**\n    ``` python\n      cmp(dict1, dict2)：  比较两个字典元素。\n\n      len(dict)：          计算字典元素个数，即键的总数。\n\n      str(dict)：          输出字典可打印的字符串表示。\n\n      type(variable)：     返回输入的变量类型，如果变量是字典就返回字典类型。\n    ```\n\n\n  **Python字典包含了以下内置方法：**\n    ```python\n      radiansdict.clear()：                      删除字典内所有元素\n\n      radiansdict.copy()：                       返回一个字典的浅复制\n\n      radiansdict.fromkeys()：                   创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值\n\n      radiansdict.get(key, default=None)：       返回指定键的值，如果值不在字典中返回default值\n\n      radiansdict.has_key(key)：                 如果键在字典dict里返回true，否则返回false\n\n      radiansdict.items()：                      以列表返回可遍历的(键, 值) 元组数组\n\n      radiansdict.keys()：                       以列表返回一个字典所有的键\n\n      radiansdict.setdefault(key, default=None)：和get()类似, 但如果键不已经存在于字典中，将会添加键并将值设为default\n\n      radiansdict.update(dict2)：                把字典dict2的键/值对更新到dict里\n\n      radiansdict.values()：                     以列表返回字典中的所有值\n    ```\n## 参考链接\n- [Python 字典(Dictionary)操作详解](http://www.jb51.net/article/47990.htm)\n- [使用dict和set](http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/0013868193482529754158abf734c00bba97c87f89a263b000)\n- [python通过字典dict判断指定键值是否存在的方法](http://www.jb51.net/article/62610.htm)\n","source":"_posts/Python-字典.md","raw":"title: Python 字典\ndate: 2016-03-23 22:14:19\ntags:\n- Python\n- dict\n- dictionary\n\n---\n## 过程\n\n   在字典中，先根据需求来获得字典，然后就是先使用它增删查改，然后就是一些主意的事项了。\n   [创建字典](#create)\n   [查询字典内容](#search)\n   [更改字典的值](#change)\n   [删除字典的值](#delete)\n   [字典内置的函数&方法](#method)\n\n## 简单介绍字典的用途\n\n   在数据中，具有键-值（key-value）存储，具有极快的查找速度。使用字典，我们就可以通过字符串来获取到我们想要的信息。\n\n\n---\n\n## <span id=\"create\">创建字典</span>\n\n   字典是有键值对组成的一种容器。那如何创建它呢？\n   ``` Python\n   >>> dict = {'d1':'dict1', 'd2':'dict2', 'd3':'dict3', 'd4':'dict4'}\n   >>> print dict\n   ```\n\n   结果如下\n   ``` bash\n   {'d4': 'dict4', 'd2': 'dict2', 'd3': 'dict3', 'd1': 'dict1'}\n   ```\n\n   这样，我们的字典创建就可以了，以key-value 的形式作为元素哦。\n\n## 关于字典的键(key)   \n   value 可以没有限制地取任何python对象，但是 key 就需要记住两个：\n\n   1. 不允许同一个键出现`两次`。创建时如果同一个键被赋值两次，`后一个值会被记住`。\n   ``` python\n    >>> dict = {'name':'hello', 'name':'oh'}\n    >>> print dict\n    {'name': 'oh'}\n    # 只有一个值，那就是最后同名的那个值\n   ```  \n\n   2. `键`必须不可变，所以可以用`数`，`字符串`或`元组`充当。\n   ``` python\n   >>> dict = {8:'bye', 'you':'coder'} # 包括了 数 '8'， 字符串 'you'\n   >>> print dict\n   {8: 'bye', 'you': 'coder'}\n   >>> print 'dict[8]' + dict[8] + ', dict[\\'you\\']' + dict['you']\n   dict[8]bye, dict['you']coder\n   ```\n\n---\n\n## <span id=\"search\">查询字典的值</span>\n\n  **字典的查询就不难了，依照上面的字典。试一试**\n    ``` Python\n    >>> dict = {8:'bye', 'you':'coder'} # 包括了 数 '8'， 字符串 'you'\n    >>> dict[8]\n    'bye'\n    >>> dict['you']\n    'coder'\n    ```\n\n  通过键我们就可以访问到字典对应的值了，不会像数组那样从 `index 0` 开始了。\n\n  **但是如果我们查询的键没有呢？就会出错。**\n    ``` python\n    >>> dict[9]\n    Traceback (most recent call last):\n    File \"<stdin>\", line 1, in <module>\n    KeyError: 9\n    ```\n\n\n  那么怎么样才知道它有没有这个`键(key)`呢? 使用方法 `has_key([key])`\n    ``` python\n    >>> dict.has_key(9)\n    False\n    >>> dict.has_key(8)\n    True\n    # 这样我们就可以在脚本中去判断键的存在咯。\n    ```\n  **那如果出现Python Error:TypeError: string indices must be integers, not str呢**\n    请参照[Python Error:TypeError: string indices must be integers, not str](http://scofieldwyq.github.io/2016/03/23/Python-Error-TypeError-string-indices-must-be-integers-not-str/)\n\n---\n\n## <span id=\"change\">更改字典的值</span>\n  **修改字典的值，就很容易了。获取到对应键的值，再赋值就好了。**\n    ``` Python\n    >>> print dict[8]\n    bye\n    >>> dict[8]=80\n    >>> print dict[8]\n    80\n    ```\n\n  结果就是这样简单啦。\n\n---\n\n## <span id=\"delete\">删除字典的值</span>\n  删除字典有两种\n  1. 删除单一元素 `del`\n    ``` python\n    >>> dict = {8:'bye', 'you':'coder'}\n    >>> print dict\n    {8: 'bye', 'you': 'coder'}\n    >>> del dict[8] # 删除元素\n    >>> print dict\n    {'you': 'coder'}\n    ```\n  2. 清空字典 `dict-instance.clear()`\n    ``` Python\n    >>> dict = {8:'bye', 'you':'coder'}\n    >>> dict.clear() # 清空字典元素啦。。。。\n    >>> print dict\n    {}\n    ```\n\n---\n\n## <span id=\"method\">字典内置的函数&方法</span>\n  **内置函数**\n    ``` python\n      cmp(dict1, dict2)：  比较两个字典元素。\n\n      len(dict)：          计算字典元素个数，即键的总数。\n\n      str(dict)：          输出字典可打印的字符串表示。\n\n      type(variable)：     返回输入的变量类型，如果变量是字典就返回字典类型。\n    ```\n\n\n  **Python字典包含了以下内置方法：**\n    ```python\n      radiansdict.clear()：                      删除字典内所有元素\n\n      radiansdict.copy()：                       返回一个字典的浅复制\n\n      radiansdict.fromkeys()：                   创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值\n\n      radiansdict.get(key, default=None)：       返回指定键的值，如果值不在字典中返回default值\n\n      radiansdict.has_key(key)：                 如果键在字典dict里返回true，否则返回false\n\n      radiansdict.items()：                      以列表返回可遍历的(键, 值) 元组数组\n\n      radiansdict.keys()：                       以列表返回一个字典所有的键\n\n      radiansdict.setdefault(key, default=None)：和get()类似, 但如果键不已经存在于字典中，将会添加键并将值设为default\n\n      radiansdict.update(dict2)：                把字典dict2的键/值对更新到dict里\n\n      radiansdict.values()：                     以列表返回字典中的所有值\n    ```\n## 参考链接\n- [Python 字典(Dictionary)操作详解](http://www.jb51.net/article/47990.htm)\n- [使用dict和set](http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/0013868193482529754158abf734c00bba97c87f89a263b000)\n- [python通过字典dict判断指定键值是否存在的方法](http://www.jb51.net/article/62610.htm)\n","slug":"Python-字典","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzco001mpe3qq1ruiw9u","content":"<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><p>   在字典中，先根据需求来获得字典，然后就是先使用它增删查改，然后就是一些主意的事项了。<br>   <a href=\"#create\">创建字典</a><br>   <a href=\"#search\">查询字典内容</a><br>   <a href=\"#change\">更改字典的值</a><br>   <a href=\"#delete\">删除字典的值</a><br>   <a href=\"#method\">字典内置的函数&amp;方法</a></p>\n<h2 id=\"简单介绍字典的用途\"><a href=\"#简单介绍字典的用途\" class=\"headerlink\" title=\"简单介绍字典的用途\"></a>简单介绍字典的用途</h2><p>   在数据中，具有键-值（key-value）存储，具有极快的查找速度。使用字典，我们就可以通过字符串来获取到我们想要的信息。</p>\n<hr>\n<h2 id=\"创建字典\"><a href=\"#创建字典\" class=\"headerlink\" title=\"创建字典\"></a><span id=\"create\">创建字典</span></h2><p>   字典是有键值对组成的一种容器。那如何创建它呢？<br>   <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict = &#123;<span class=\"string\">'d1'</span>:<span class=\"string\">'dict1'</span>, <span class=\"string\">'d2'</span>:<span class=\"string\">'dict2'</span>, <span class=\"string\">'d3'</span>:<span class=\"string\">'dict3'</span>, <span class=\"string\">'d4'</span>:<span class=\"string\">'dict4'</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict</span><br></pre></td></tr></table></figure></p>\n<p>   结果如下<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"string\">'d4'</span>: <span class=\"string\">'dict4'</span>, <span class=\"string\">'d2'</span>: <span class=\"string\">'dict2'</span>, <span class=\"string\">'d3'</span>: <span class=\"string\">'dict3'</span>, <span class=\"string\">'d1'</span>: <span class=\"string\">'dict1'</span>&#125;</span><br></pre></td></tr></table></figure></p>\n<p>   这样，我们的字典创建就可以了，以key-value 的形式作为元素哦。</p>\n<h2 id=\"关于字典的键-key\"><a href=\"#关于字典的键-key\" class=\"headerlink\" title=\"关于字典的键(key)\"></a>关于字典的键(key)</h2><p>   value 可以没有限制地取任何python对象，但是 key 就需要记住两个：</p>\n<ol>\n<li>不允许同一个键出现<code>两次</code>。创建时如果同一个键被赋值两次，<code>后一个值会被记住</code>。<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &gt;&gt;&gt; dict = &#123;<span class=\"string\">'name'</span>:<span class=\"string\">'hello'</span>, <span class=\"string\">'name'</span>:<span class=\"string\">'oh'</span>&#125;</span><br><span class=\"line\"> &gt;&gt;&gt; <span class=\"keyword\">print</span> dict</span><br><span class=\"line\"> &#123;<span class=\"string\">'name'</span>: <span class=\"string\">'oh'</span>&#125;</span><br><span class=\"line\"> <span class=\"comment\"># 只有一个值，那就是最后同名的那个值</span></span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> `键`必须不可变，所以可以用`数`，`字符串`或`元组`充当。</span><br><span class=\"line\">``` python</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict = &#123;<span class=\"number\">8</span>:<span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>:<span class=\"string\">'coder'</span>&#125; <span class=\"comment\"># 包括了 数 '8'， 字符串 'you'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict</span><br><span class=\"line\">&#123;<span class=\"number\">8</span>: <span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>: <span class=\"string\">'coder'</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> <span class=\"string\">'dict[8]'</span> + dict[<span class=\"number\">8</span>] + <span class=\"string\">', dict[\\'you\\']'</span> + dict[<span class=\"string\">'you'</span>]</span><br><span class=\"line\">dict[<span class=\"number\">8</span>]bye, dict[<span class=\"string\">'you'</span>]coder</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h2 id=\"查询字典的值\"><a href=\"#查询字典的值\" class=\"headerlink\" title=\"查询字典的值\"></a><span id=\"search\">查询字典的值</span></h2><p>  <strong>字典的查询就不难了，依照上面的字典。试一试</strong><br>    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict = &#123;<span class=\"number\">8</span>:<span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>:<span class=\"string\">'coder'</span>&#125; <span class=\"comment\"># 包括了 数 '8'， 字符串 'you'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict[<span class=\"number\">8</span>]</span><br><span class=\"line\"><span class=\"string\">'bye'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict[<span class=\"string\">'you'</span>]</span><br><span class=\"line\"><span class=\"string\">'coder'</span></span><br></pre></td></tr></table></figure></p>\n<p>  通过键我们就可以访问到字典对应的值了，不会像数组那样从 <code>index 0</code> 开始了。</p>\n<p>  <strong>但是如果我们查询的键没有呢？就会出错。</strong><br>    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict[<span class=\"number\">9</span>]</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">File <span class=\"string\">\"&lt;stdin&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">KeyError: <span class=\"number\">9</span></span><br></pre></td></tr></table></figure></p>\n<p>  那么怎么样才知道它有没有这个<code>键(key)</code>呢? 使用方法 <code>has_key([key])</code><br>    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict.has_key(<span class=\"number\">9</span>)</span><br><span class=\"line\"><span class=\"keyword\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict.has_key(<span class=\"number\">8</span>)</span><br><span class=\"line\"><span class=\"keyword\">True</span></span><br><span class=\"line\"><span class=\"comment\"># 这样我们就可以在脚本中去判断键的存在咯。</span></span><br></pre></td></tr></table></figure></p>\n<p>  <strong>那如果出现Python Error:TypeError: string indices must be integers, not str呢</strong><br>    请参照<a href=\"http://scofieldwyq.github.io/2016/03/23/Python-Error-TypeError-string-indices-must-be-integers-not-str/\" target=\"_blank\" rel=\"external\">Python Error:TypeError: string indices must be integers, not str</a></p>\n<hr>\n<h2 id=\"更改字典的值\"><a href=\"#更改字典的值\" class=\"headerlink\" title=\"更改字典的值\"></a><span id=\"change\">更改字典的值</span></h2><p>  <strong>修改字典的值，就很容易了。获取到对应键的值，再赋值就好了。</strong><br>    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict[<span class=\"number\">8</span>]</span><br><span class=\"line\">bye</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict[<span class=\"number\">8</span>]=<span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict[<span class=\"number\">8</span>]</span><br><span class=\"line\"><span class=\"number\">80</span></span><br></pre></td></tr></table></figure></p>\n<p>  结果就是这样简单啦。</p>\n<hr>\n<h2 id=\"删除字典的值\"><a href=\"#删除字典的值\" class=\"headerlink\" title=\"删除字典的值\"></a><span id=\"delete\">删除字典的值</span></h2><p>  删除字典有两种</p>\n<ol>\n<li><p>删除单一元素 <code>del</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict = &#123;<span class=\"number\">8</span>:<span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>:<span class=\"string\">'coder'</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict</span><br><span class=\"line\">&#123;<span class=\"number\">8</span>: <span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>: <span class=\"string\">'coder'</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">del</span> dict[<span class=\"number\">8</span>] <span class=\"comment\"># 删除元素</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict</span><br><span class=\"line\">&#123;<span class=\"string\">'you'</span>: <span class=\"string\">'coder'</span>&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>清空字典 <code>dict-instance.clear()</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict = &#123;<span class=\"number\">8</span>:<span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>:<span class=\"string\">'coder'</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict.clear() <span class=\"comment\"># 清空字典元素啦。。。。</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict</span><br><span class=\"line\">&#123;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h2 id=\"字典内置的函数-amp-方法\"><a href=\"#字典内置的函数-amp-方法\" class=\"headerlink\" title=\"字典内置的函数&amp;方法\"></a><span id=\"method\">字典内置的函数&amp;方法</span></h2><p>  <strong>内置函数</strong><br>    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmp(dict1, dict2)：  比较两个字典元素。</span><br><span class=\"line\"></span><br><span class=\"line\">len(dict)：          计算字典元素个数，即键的总数。</span><br><span class=\"line\"></span><br><span class=\"line\">str(dict)：          输出字典可打印的字符串表示。</span><br><span class=\"line\"></span><br><span class=\"line\">type(variable)：     返回输入的变量类型，如果变量是字典就返回字典类型。</span><br></pre></td></tr></table></figure></p>\n<p>  <strong>Python字典包含了以下内置方法：</strong><br>    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">radiansdict.clear()：                      删除字典内所有元素</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.copy()：                       返回一个字典的浅复制</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.fromkeys()：                   创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.get(key, default=<span class=\"keyword\">None</span>)：       返回指定键的值，如果值不在字典中返回default值</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.has_key(key)：                 如果键在字典dict里返回true，否则返回false</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.items()：                      以列表返回可遍历的(键, 值) 元组数组</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.keys()：                       以列表返回一个字典所有的键</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.setdefault(key, default=<span class=\"keyword\">None</span>)：和get()类似, 但如果键不已经存在于字典中，将会添加键并将值设为default</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.update(dict2)：                把字典dict2的键/值对更新到dict里</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.values()：                     以列表返回字典中的所有值</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.jb51.net/article/47990.htm\" target=\"_blank\" rel=\"external\">Python 字典(Dictionary)操作详解</a></li>\n<li><a href=\"http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/0013868193482529754158abf734c00bba97c87f89a263b000\" target=\"_blank\" rel=\"external\">使用dict和set</a></li>\n<li><a href=\"http://www.jb51.net/article/62610.htm\" target=\"_blank\" rel=\"external\">python通过字典dict判断指定键值是否存在的方法</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><p>   在字典中，先根据需求来获得字典，然后就是先使用它增删查改，然后就是一些主意的事项了。<br>   <a href=\"#create\">创建字典</a><br>   <a href=\"#search\">查询字典内容</a><br>   <a href=\"#change\">更改字典的值</a><br>   <a href=\"#delete\">删除字典的值</a><br>   <a href=\"#method\">字典内置的函数&amp;方法</a></p>\n<h2 id=\"简单介绍字典的用途\"><a href=\"#简单介绍字典的用途\" class=\"headerlink\" title=\"简单介绍字典的用途\"></a>简单介绍字典的用途</h2><p>   在数据中，具有键-值（key-value）存储，具有极快的查找速度。使用字典，我们就可以通过字符串来获取到我们想要的信息。</p>\n<hr>\n<h2 id=\"创建字典\"><a href=\"#创建字典\" class=\"headerlink\" title=\"创建字典\"></a><span id=\"create\">创建字典</span></h2><p>   字典是有键值对组成的一种容器。那如何创建它呢？<br>   <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict = &#123;<span class=\"string\">'d1'</span>:<span class=\"string\">'dict1'</span>, <span class=\"string\">'d2'</span>:<span class=\"string\">'dict2'</span>, <span class=\"string\">'d3'</span>:<span class=\"string\">'dict3'</span>, <span class=\"string\">'d4'</span>:<span class=\"string\">'dict4'</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict</span><br></pre></td></tr></table></figure></p>\n<p>   结果如下<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"string\">'d4'</span>: <span class=\"string\">'dict4'</span>, <span class=\"string\">'d2'</span>: <span class=\"string\">'dict2'</span>, <span class=\"string\">'d3'</span>: <span class=\"string\">'dict3'</span>, <span class=\"string\">'d1'</span>: <span class=\"string\">'dict1'</span>&#125;</span><br></pre></td></tr></table></figure></p>\n<p>   这样，我们的字典创建就可以了，以key-value 的形式作为元素哦。</p>\n<h2 id=\"关于字典的键-key\"><a href=\"#关于字典的键-key\" class=\"headerlink\" title=\"关于字典的键(key)\"></a>关于字典的键(key)</h2><p>   value 可以没有限制地取任何python对象，但是 key 就需要记住两个：</p>\n<ol>\n<li>不允许同一个键出现<code>两次</code>。创建时如果同一个键被赋值两次，<code>后一个值会被记住</code>。<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &gt;&gt;&gt; dict = &#123;<span class=\"string\">'name'</span>:<span class=\"string\">'hello'</span>, <span class=\"string\">'name'</span>:<span class=\"string\">'oh'</span>&#125;</span><br><span class=\"line\"> &gt;&gt;&gt; <span class=\"keyword\">print</span> dict</span><br><span class=\"line\"> &#123;<span class=\"string\">'name'</span>: <span class=\"string\">'oh'</span>&#125;</span><br><span class=\"line\"> <span class=\"comment\"># 只有一个值，那就是最后同名的那个值</span></span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> `键`必须不可变，所以可以用`数`，`字符串`或`元组`充当。</span><br><span class=\"line\">``` python</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict = &#123;<span class=\"number\">8</span>:<span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>:<span class=\"string\">'coder'</span>&#125; <span class=\"comment\"># 包括了 数 '8'， 字符串 'you'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict</span><br><span class=\"line\">&#123;<span class=\"number\">8</span>: <span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>: <span class=\"string\">'coder'</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> <span class=\"string\">'dict[8]'</span> + dict[<span class=\"number\">8</span>] + <span class=\"string\">', dict[\\'you\\']'</span> + dict[<span class=\"string\">'you'</span>]</span><br><span class=\"line\">dict[<span class=\"number\">8</span>]bye, dict[<span class=\"string\">'you'</span>]coder</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h2 id=\"查询字典的值\"><a href=\"#查询字典的值\" class=\"headerlink\" title=\"查询字典的值\"></a><span id=\"search\">查询字典的值</span></h2><p>  <strong>字典的查询就不难了，依照上面的字典。试一试</strong><br>    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict = &#123;<span class=\"number\">8</span>:<span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>:<span class=\"string\">'coder'</span>&#125; <span class=\"comment\"># 包括了 数 '8'， 字符串 'you'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict[<span class=\"number\">8</span>]</span><br><span class=\"line\"><span class=\"string\">'bye'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict[<span class=\"string\">'you'</span>]</span><br><span class=\"line\"><span class=\"string\">'coder'</span></span><br></pre></td></tr></table></figure></p>\n<p>  通过键我们就可以访问到字典对应的值了，不会像数组那样从 <code>index 0</code> 开始了。</p>\n<p>  <strong>但是如果我们查询的键没有呢？就会出错。</strong><br>    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict[<span class=\"number\">9</span>]</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">File <span class=\"string\">\"&lt;stdin&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">KeyError: <span class=\"number\">9</span></span><br></pre></td></tr></table></figure></p>\n<p>  那么怎么样才知道它有没有这个<code>键(key)</code>呢? 使用方法 <code>has_key([key])</code><br>    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict.has_key(<span class=\"number\">9</span>)</span><br><span class=\"line\"><span class=\"keyword\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict.has_key(<span class=\"number\">8</span>)</span><br><span class=\"line\"><span class=\"keyword\">True</span></span><br><span class=\"line\"><span class=\"comment\"># 这样我们就可以在脚本中去判断键的存在咯。</span></span><br></pre></td></tr></table></figure></p>\n<p>  <strong>那如果出现Python Error:TypeError: string indices must be integers, not str呢</strong><br>    请参照<a href=\"http://scofieldwyq.github.io/2016/03/23/Python-Error-TypeError-string-indices-must-be-integers-not-str/\">Python Error:TypeError: string indices must be integers, not str</a></p>\n<hr>\n<h2 id=\"更改字典的值\"><a href=\"#更改字典的值\" class=\"headerlink\" title=\"更改字典的值\"></a><span id=\"change\">更改字典的值</span></h2><p>  <strong>修改字典的值，就很容易了。获取到对应键的值，再赋值就好了。</strong><br>    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict[<span class=\"number\">8</span>]</span><br><span class=\"line\">bye</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict[<span class=\"number\">8</span>]=<span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict[<span class=\"number\">8</span>]</span><br><span class=\"line\"><span class=\"number\">80</span></span><br></pre></td></tr></table></figure></p>\n<p>  结果就是这样简单啦。</p>\n<hr>\n<h2 id=\"删除字典的值\"><a href=\"#删除字典的值\" class=\"headerlink\" title=\"删除字典的值\"></a><span id=\"delete\">删除字典的值</span></h2><p>  删除字典有两种</p>\n<ol>\n<li><p>删除单一元素 <code>del</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict = &#123;<span class=\"number\">8</span>:<span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>:<span class=\"string\">'coder'</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict</span><br><span class=\"line\">&#123;<span class=\"number\">8</span>: <span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>: <span class=\"string\">'coder'</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">del</span> dict[<span class=\"number\">8</span>] <span class=\"comment\"># 删除元素</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict</span><br><span class=\"line\">&#123;<span class=\"string\">'you'</span>: <span class=\"string\">'coder'</span>&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>清空字典 <code>dict-instance.clear()</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict = &#123;<span class=\"number\">8</span>:<span class=\"string\">'bye'</span>, <span class=\"string\">'you'</span>:<span class=\"string\">'coder'</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>dict.clear() <span class=\"comment\"># 清空字典元素啦。。。。</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> dict</span><br><span class=\"line\">&#123;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h2 id=\"字典内置的函数-amp-方法\"><a href=\"#字典内置的函数-amp-方法\" class=\"headerlink\" title=\"字典内置的函数&amp;方法\"></a><span id=\"method\">字典内置的函数&amp;方法</span></h2><p>  <strong>内置函数</strong><br>    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmp(dict1, dict2)：  比较两个字典元素。</span><br><span class=\"line\"></span><br><span class=\"line\">len(dict)：          计算字典元素个数，即键的总数。</span><br><span class=\"line\"></span><br><span class=\"line\">str(dict)：          输出字典可打印的字符串表示。</span><br><span class=\"line\"></span><br><span class=\"line\">type(variable)：     返回输入的变量类型，如果变量是字典就返回字典类型。</span><br></pre></td></tr></table></figure></p>\n<p>  <strong>Python字典包含了以下内置方法：</strong><br>    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">radiansdict.clear()：                      删除字典内所有元素</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.copy()：                       返回一个字典的浅复制</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.fromkeys()：                   创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.get(key, default=<span class=\"keyword\">None</span>)：       返回指定键的值，如果值不在字典中返回default值</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.has_key(key)：                 如果键在字典dict里返回true，否则返回false</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.items()：                      以列表返回可遍历的(键, 值) 元组数组</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.keys()：                       以列表返回一个字典所有的键</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.setdefault(key, default=<span class=\"keyword\">None</span>)：和get()类似, 但如果键不已经存在于字典中，将会添加键并将值设为default</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.update(dict2)：                把字典dict2的键/值对更新到dict里</span><br><span class=\"line\"></span><br><span class=\"line\">radiansdict.values()：                     以列表返回字典中的所有值</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.jb51.net/article/47990.htm\">Python 字典(Dictionary)操作详解</a></li>\n<li><a href=\"http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/0013868193482529754158abf734c00bba97c87f89a263b000\">使用dict和set</a></li>\n<li><a href=\"http://www.jb51.net/article/62610.htm\">python通过字典dict判断指定键值是否存在的方法</a></li>\n</ul>\n"},{"title":"Python 字符串转换成字典","date":"2016-03-24T00:12:20.000Z","_content":"## 如何将一个字符串(string)转为字典(dict)呢?\n  > 只要用 eval()或exec() 函数就可以实现了\n\n  ``` Python\n    >>> a = \"{'a': 'hi', 'b': 'there'}\"\n    >>> b = eval(a)\n    >>> b\n    {'a': 'hi', 'b': 'there'}\n    >>> exec (\"c=\" + a)\n    >>> c\n    {'a': 'hi', 'b': 'there'}\n    >>>\n  ```\n\n## 参考链接\n\n- [Python中将字符串类型转为字典类型（string to dict）](http://www.pythonclub.org/python-hacks/string2dict)\n","source":"_posts/Python-字符串转换成字典.md","raw":"title: Python 字符串转换成字典\ndate: 2016-03-24 08:12:20\ntags:\n- Python\n- string\n- dict\n- dictionary\n- str\n\n---\n## 如何将一个字符串(string)转为字典(dict)呢?\n  > 只要用 eval()或exec() 函数就可以实现了\n\n  ``` Python\n    >>> a = \"{'a': 'hi', 'b': 'there'}\"\n    >>> b = eval(a)\n    >>> b\n    {'a': 'hi', 'b': 'there'}\n    >>> exec (\"c=\" + a)\n    >>> c\n    {'a': 'hi', 'b': 'there'}\n    >>>\n  ```\n\n## 参考链接\n\n- [Python中将字符串类型转为字典类型（string to dict）](http://www.pythonclub.org/python-hacks/string2dict)\n","slug":"Python-字符串转换成字典","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzcr001ope3qwnctotqg","content":"<h2 id=\"如何将一个字符串-string-转为字典-dict-呢\"><a href=\"#如何将一个字符串-string-转为字典-dict-呢\" class=\"headerlink\" title=\"如何将一个字符串(string)转为字典(dict)呢?\"></a>如何将一个字符串(string)转为字典(dict)呢?</h2><blockquote>\n<p>只要用 eval()或exec() 函数就可以实现了</p>\n</blockquote>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>a = <span class=\"string\">\"&#123;'a': 'hi', 'b': 'there'&#125;\"</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>b = eval(a)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>b</span><br><span class=\"line\">&#123;<span class=\"string\">'a'</span>: <span class=\"string\">'hi'</span>, <span class=\"string\">'b'</span>: <span class=\"string\">'there'</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">exec</span> (<span class=\"string\">\"c=\"</span> + a)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>c</span><br><span class=\"line\">&#123;<span class=\"string\">'a'</span>: <span class=\"string\">'hi'</span>, <span class=\"string\">'b'</span>: <span class=\"string\">'there'</span>&#125;</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.pythonclub.org/python-hacks/string2dict\" target=\"_blank\" rel=\"external\">Python中将字符串类型转为字典类型（string to dict）</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"如何将一个字符串-string-转为字典-dict-呢\"><a href=\"#如何将一个字符串-string-转为字典-dict-呢\" class=\"headerlink\" title=\"如何将一个字符串(string)转为字典(dict)呢?\"></a>如何将一个字符串(string)转为字典(dict)呢?</h2><blockquote>\n<p>只要用 eval()或exec() 函数就可以实现了</p>\n</blockquote>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>a = <span class=\"string\">\"&#123;'a': 'hi', 'b': 'there'&#125;\"</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>b = eval(a)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>b</span><br><span class=\"line\">&#123;<span class=\"string\">'a'</span>: <span class=\"string\">'hi'</span>, <span class=\"string\">'b'</span>: <span class=\"string\">'there'</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">exec</span> (<span class=\"string\">\"c=\"</span> + a)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>c</span><br><span class=\"line\">&#123;<span class=\"string\">'a'</span>: <span class=\"string\">'hi'</span>, <span class=\"string\">'b'</span>: <span class=\"string\">'there'</span>&#125;</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.pythonclub.org/python-hacks/string2dict\">Python中将字符串类型转为字典类型（string to dict）</a></li>\n</ul>\n"},{"title":"Python 类型判断","date":"2016-03-24T00:08:45.000Z","_content":"\n## type\n  type 只是判断这个类型。\n  ``` Python\n  >>>lst = [1, 2, 3]\n  >>>type(lst)\n  <type 'list'>\n  ```\n\n## ininstance\n  isinstance 可以判断是不是已知的类型，\n\n  ``` bash\n   isinstance(object, class-or-type-or-tuple) -> bool  \n   /* Return whether an object is an instance of a class or of a subclass thereof. */\n  ```\n  参数二为一个元组，则若对象类型与元组中类型名之一相同即返回True.\n  ``` Python\n  >>>isinstance(lst, list)\n  True\n  >>>isinstance(lst, (int, str, list))\n  True\n  >>>isinstance(lst, (int, str, list))\n  True\n  ```\n","source":"_posts/Python-类型判断.md","raw":"title: Python 类型判断\ndate: 2016-03-24 08:08:45\ntags:\n- Python\n- 类型判断\n---\n\n## type\n  type 只是判断这个类型。\n  ``` Python\n  >>>lst = [1, 2, 3]\n  >>>type(lst)\n  <type 'list'>\n  ```\n\n## ininstance\n  isinstance 可以判断是不是已知的类型，\n\n  ``` bash\n   isinstance(object, class-or-type-or-tuple) -> bool  \n   /* Return whether an object is an instance of a class or of a subclass thereof. */\n  ```\n  参数二为一个元组，则若对象类型与元组中类型名之一相同即返回True.\n  ``` Python\n  >>>isinstance(lst, list)\n  True\n  >>>isinstance(lst, (int, str, list))\n  True\n  >>>isinstance(lst, (int, str, list))\n  True\n  ```\n","slug":"Python-类型判断","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzed007dpe3qnyayciau","content":"<h2 id=\"type\"><a href=\"#type\" class=\"headerlink\" title=\"type\"></a>type</h2><p>  type 只是判断这个类型。<br>  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;lst = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">&gt;&gt;&gt;type(lst)</span><br><span class=\"line\">&lt;type <span class=\"string\">'list'</span>&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"ininstance\"><a href=\"#ininstance\" class=\"headerlink\" title=\"ininstance\"></a>ininstance</h2><p>  isinstance 可以判断是不是已知的类型，</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isinstance(object, class-or-type-or-tuple) -&gt; bool  </span><br><span class=\"line\">/* Return whether an object is an instance of a class or of a subclass thereof. */</span><br></pre></td></tr></table></figure>\n<p>  参数二为一个元组，则若对象类型与元组中类型名之一相同即返回True.<br>  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;isinstance(lst, list)</span><br><span class=\"line\"><span class=\"keyword\">True</span></span><br><span class=\"line\">&gt;&gt;&gt;isinstance(lst, (int, str, list))</span><br><span class=\"line\"><span class=\"keyword\">True</span></span><br><span class=\"line\">&gt;&gt;&gt;isinstance(lst, (int, str, list))</span><br><span class=\"line\"><span class=\"keyword\">True</span></span><br></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h2 id=\"type\"><a href=\"#type\" class=\"headerlink\" title=\"type\"></a>type</h2><p>  type 只是判断这个类型。<br>  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;lst = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">&gt;&gt;&gt;type(lst)</span><br><span class=\"line\">&lt;type <span class=\"string\">'list'</span>&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"ininstance\"><a href=\"#ininstance\" class=\"headerlink\" title=\"ininstance\"></a>ininstance</h2><p>  isinstance 可以判断是不是已知的类型，</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isinstance(object, class-or-type-or-tuple) -&gt; bool  </span><br><span class=\"line\">/* Return whether an object is an instance of a class or of a subclass thereof. */</span><br></pre></td></tr></table></figure>\n<p>  参数二为一个元组，则若对象类型与元组中类型名之一相同即返回True.<br>  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;isinstance(lst, list)</span><br><span class=\"line\"><span class=\"keyword\">True</span></span><br><span class=\"line\">&gt;&gt;&gt;isinstance(lst, (int, str, list))</span><br><span class=\"line\"><span class=\"keyword\">True</span></span><br><span class=\"line\">&gt;&gt;&gt;isinstance(lst, (int, str, list))</span><br><span class=\"line\"><span class=\"keyword\">True</span></span><br></pre></td></tr></table></figure></p>\n"},{"title":"Python 解析配置模块 ConfigParser","date":"2016-03-24T00:13:28.000Z","_content":"","source":"_posts/Python-解析配置模块-ConfigParser.md","raw":"title: Python 解析配置模块 ConfigParser\ndate: 2016-03-24 08:13:28\ntags:\n---\n","slug":"Python-解析配置模块-ConfigParser","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzee007epe3qkneo96i5","content":"","excerpt":"","more":""},{"title":"Python 连接 Mysql 数据库","date":"2016-03-14T07:01:19.000Z","_content":"\n## 连接 mysql 数据库\n\n 使用 MySQLdb 来做为连接 mysql 数据库。\n\n ``` python\n import MySQLdb\n \n try:\n      # host 表示主机类型\n      # user 登录的用户\n      # passwd 登录密码\n      # db 登录的数据库\n      # port 端口号，在本地情况下可以不用写\n      conn=MySQLdb.connect(host='localhost',user='root',passwd='root',db='test',port=3306) # 连接数据库\n      cur=conn.cursor() # 获取数据库的指针\n      cur.execute('select * from user') # 数据库操作\n      cur.close() # 关闭数据库的指针\n      conn.close() # 关闭数据库\nexcept MySQLdb.Error,e: # 数据库连接失败。\n      print \"Mysql Error %d: %s\" % (e.args[0], e.args[1])\n ```\n\n## 问题\n\n  如果出现了这种情况\n ``` python\n Traceback (most recent call last):\n  File \"db_test.py\", line 1, in <module>\n    import MySQLdb\nImportError: No module named MySQLdb\n ```\n 说明没有安装相应的库\n\n## 安装 MySQLdb\n\n[Python下的Mysql模块MySQLdb安装详解](http://www.jb51.net/article/48827.htm)\n[下载Mysql模块MySQLdb](https://sourceforge.net/projects/mysql-python/files/mysql-python/1.2.3/MySQL-python-1.2.3.tar.gz/download)\n\n## 参考链接\n- [python操作MySQL数据库](http://www.cnblogs.com/rollenholt/archive/2012/05/29/2524327.html)\n- [Python下的Mysql模块MySQLdb安装详解](http://www.jb51.net/article/48827.htm)\n- [MySQL-python-1.2.3.tar.gz](https://sourceforge.net/projects/mysql-python/files/mysql-python/1.2.3/MySQL-python-1.2.3.tar.gz/download)\n","source":"_posts/Python-连接-Mysql-数据库.md","raw":"title: Python 连接 Mysql 数据库\ndate: 2016-03-14 15:01:19\ntags:\n- Python\n- Mysql\n- MySQLdb\n- 数据库\n- database\n\n---\n\n## 连接 mysql 数据库\n\n 使用 MySQLdb 来做为连接 mysql 数据库。\n\n ``` python\n import MySQLdb\n \n try:\n      # host 表示主机类型\n      # user 登录的用户\n      # passwd 登录密码\n      # db 登录的数据库\n      # port 端口号，在本地情况下可以不用写\n      conn=MySQLdb.connect(host='localhost',user='root',passwd='root',db='test',port=3306) # 连接数据库\n      cur=conn.cursor() # 获取数据库的指针\n      cur.execute('select * from user') # 数据库操作\n      cur.close() # 关闭数据库的指针\n      conn.close() # 关闭数据库\nexcept MySQLdb.Error,e: # 数据库连接失败。\n      print \"Mysql Error %d: %s\" % (e.args[0], e.args[1])\n ```\n\n## 问题\n\n  如果出现了这种情况\n ``` python\n Traceback (most recent call last):\n  File \"db_test.py\", line 1, in <module>\n    import MySQLdb\nImportError: No module named MySQLdb\n ```\n 说明没有安装相应的库\n\n## 安装 MySQLdb\n\n[Python下的Mysql模块MySQLdb安装详解](http://www.jb51.net/article/48827.htm)\n[下载Mysql模块MySQLdb](https://sourceforge.net/projects/mysql-python/files/mysql-python/1.2.3/MySQL-python-1.2.3.tar.gz/download)\n\n## 参考链接\n- [python操作MySQL数据库](http://www.cnblogs.com/rollenholt/archive/2012/05/29/2524327.html)\n- [Python下的Mysql模块MySQLdb安装详解](http://www.jb51.net/article/48827.htm)\n- [MySQL-python-1.2.3.tar.gz](https://sourceforge.net/projects/mysql-python/files/mysql-python/1.2.3/MySQL-python-1.2.3.tar.gz/download)\n","slug":"Python-连接-Mysql-数据库","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzeh007gpe3q3jmymtft","content":"<h2 id=\"连接-mysql-数据库\"><a href=\"#连接-mysql-数据库\" class=\"headerlink\" title=\"连接 mysql 数据库\"></a>连接 mysql 数据库</h2><p> 使用 MySQLdb 来做为连接 mysql 数据库。</p>\n <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">import</span> MySQLdb</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"keyword\">try</span>:</span><br><span class=\"line\">      <span class=\"comment\"># host 表示主机类型</span></span><br><span class=\"line\">      <span class=\"comment\"># user 登录的用户</span></span><br><span class=\"line\">      <span class=\"comment\"># passwd 登录密码</span></span><br><span class=\"line\">      <span class=\"comment\"># db 登录的数据库</span></span><br><span class=\"line\">      <span class=\"comment\"># port 端口号，在本地情况下可以不用写</span></span><br><span class=\"line\">      conn=MySQLdb.connect(host=<span class=\"string\">'localhost'</span>,user=<span class=\"string\">'root'</span>,passwd=<span class=\"string\">'root'</span>,db=<span class=\"string\">'test'</span>,port=<span class=\"number\">3306</span>) <span class=\"comment\"># 连接数据库</span></span><br><span class=\"line\">      cur=conn.cursor() <span class=\"comment\"># 获取数据库的指针</span></span><br><span class=\"line\">      cur.execute(<span class=\"string\">'select * from user'</span>) <span class=\"comment\"># 数据库操作</span></span><br><span class=\"line\">      cur.close() <span class=\"comment\"># 关闭数据库的指针</span></span><br><span class=\"line\">      conn.close() <span class=\"comment\"># 关闭数据库</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> MySQLdb.Error,e: <span class=\"comment\"># 数据库连接失败。</span></span><br><span class=\"line\">      <span class=\"keyword\">print</span> <span class=\"string\">\"Mysql Error %d: %s\"</span> % (e.args[<span class=\"number\">0</span>], e.args[<span class=\"number\">1</span>])</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>  如果出现了这种情况<br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">\"db_test.py\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">import</span> MySQLdb</span><br><span class=\"line\">ImportError: No module named MySQLdb</span><br></pre></td></tr></table></figure></p>\n<p> 说明没有安装相应的库</p>\n<h2 id=\"安装-MySQLdb\"><a href=\"#安装-MySQLdb\" class=\"headerlink\" title=\"安装 MySQLdb\"></a>安装 MySQLdb</h2><p><a href=\"http://www.jb51.net/article/48827.htm\" target=\"_blank\" rel=\"external\">Python下的Mysql模块MySQLdb安装详解</a><br><a href=\"https://sourceforge.net/projects/mysql-python/files/mysql-python/1.2.3/MySQL-python-1.2.3.tar.gz/download\" target=\"_blank\" rel=\"external\">下载Mysql模块MySQLdb</a></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.cnblogs.com/rollenholt/archive/2012/05/29/2524327.html\" target=\"_blank\" rel=\"external\">python操作MySQL数据库</a></li>\n<li><a href=\"http://www.jb51.net/article/48827.htm\" target=\"_blank\" rel=\"external\">Python下的Mysql模块MySQLdb安装详解</a></li>\n<li><a href=\"https://sourceforge.net/projects/mysql-python/files/mysql-python/1.2.3/MySQL-python-1.2.3.tar.gz/download\" target=\"_blank\" rel=\"external\">MySQL-python-1.2.3.tar.gz</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"连接-mysql-数据库\"><a href=\"#连接-mysql-数据库\" class=\"headerlink\" title=\"连接 mysql 数据库\"></a>连接 mysql 数据库</h2><p> 使用 MySQLdb 来做为连接 mysql 数据库。</p>\n <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">import</span> MySQLdb</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"keyword\">try</span>:</span><br><span class=\"line\">      <span class=\"comment\"># host 表示主机类型</span></span><br><span class=\"line\">      <span class=\"comment\"># user 登录的用户</span></span><br><span class=\"line\">      <span class=\"comment\"># passwd 登录密码</span></span><br><span class=\"line\">      <span class=\"comment\"># db 登录的数据库</span></span><br><span class=\"line\">      <span class=\"comment\"># port 端口号，在本地情况下可以不用写</span></span><br><span class=\"line\">      conn=MySQLdb.connect(host=<span class=\"string\">'localhost'</span>,user=<span class=\"string\">'root'</span>,passwd=<span class=\"string\">'root'</span>,db=<span class=\"string\">'test'</span>,port=<span class=\"number\">3306</span>) <span class=\"comment\"># 连接数据库</span></span><br><span class=\"line\">      cur=conn.cursor() <span class=\"comment\"># 获取数据库的指针</span></span><br><span class=\"line\">      cur.execute(<span class=\"string\">'select * from user'</span>) <span class=\"comment\"># 数据库操作</span></span><br><span class=\"line\">      cur.close() <span class=\"comment\"># 关闭数据库的指针</span></span><br><span class=\"line\">      conn.close() <span class=\"comment\"># 关闭数据库</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> MySQLdb.Error,e: <span class=\"comment\"># 数据库连接失败。</span></span><br><span class=\"line\">      <span class=\"keyword\">print</span> <span class=\"string\">\"Mysql Error %d: %s\"</span> % (e.args[<span class=\"number\">0</span>], e.args[<span class=\"number\">1</span>])</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>  如果出现了这种情况<br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">\"db_test.py\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">import</span> MySQLdb</span><br><span class=\"line\">ImportError: No module named MySQLdb</span><br></pre></td></tr></table></figure></p>\n<p> 说明没有安装相应的库</p>\n<h2 id=\"安装-MySQLdb\"><a href=\"#安装-MySQLdb\" class=\"headerlink\" title=\"安装 MySQLdb\"></a>安装 MySQLdb</h2><p><a href=\"http://www.jb51.net/article/48827.htm\">Python下的Mysql模块MySQLdb安装详解</a><br><a href=\"https://sourceforge.net/projects/mysql-python/files/mysql-python/1.2.3/MySQL-python-1.2.3.tar.gz/download\">下载Mysql模块MySQLdb</a></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"http://www.cnblogs.com/rollenholt/archive/2012/05/29/2524327.html\">python操作MySQL数据库</a></li>\n<li><a href=\"http://www.jb51.net/article/48827.htm\">Python下的Mysql模块MySQLdb安装详解</a></li>\n<li><a href=\"https://sourceforge.net/projects/mysql-python/files/mysql-python/1.2.3/MySQL-python-1.2.3.tar.gz/download\">MySQL-python-1.2.3.tar.gz</a></li>\n</ul>\n"},{"title":"XML Parsing - IOS","date":"2016-02-22T06:36:27.000Z","_content":"\n# 什么是 XML\n\n> 如果不知道它的产生，何谓使用它呢？\n\n## 认识和了解 XML\n\n\n  - XML 是可扩展标记语言（Extensible Markup Language）的缩写，其中的 标记（markup）是关键部分。您可以创建内容，然后使用限定标记标记它，从而使每个单词、短语或块成为可识别、可分类的信息。您创建的文件，或文档实例 由元素（标记）和内容构成。\n\n  - 当从打印输出读取或以电子形式处理文档时，元素能够帮助更好地理解文档。元素的描述性越强，文档各部分越容易识别。\n\n  - 标记语言从早期的私有公司和政府制定形式逐渐演变成标准通用标记语言（Standard Generalized Markup Language，SGML）、超文本标记语言（Hypertext Markup Language，HTML），并且最终演变成 XML。SGML 比较复杂，HTML（实际上仅是一组元素集）在识别信息方面不够强大。XML 则是一种易于使用和易于扩展的标记语言。\n\n  - 可以使用 XML 创建自己的元素，从而能够更精确地表示自己的信息。您可以在文档内部识别每个部分，而不是将文档看作仅由标题和段落组成。为了提高效率，您可能需要定义数量一定的元素，并统一使用它们。（您可以在文档类型定义（Document Type Definition， DTD ）或模式 （schema）中定义元素，稍后我将对此进行简要的描述）。一旦习惯使用 XML 之后，就可以在构建文件时尝试处理元素名称。\n\n  - 用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。 它非常适合万维网传输，提供统一的方法来描述和交换独立于应用程序或供应商的结构化数据。是Internet环境中跨平台的、依赖于内容的技术，也是当今处理分布式结构信息的有效工具。早在1998年，W3C就发布了XML1.0规范，使用它来简化Internet的文档信息传输。\n\n  如果你想学习XML，[点这里 - XML 新手入门基础知识](http://www.ibm.com/developerworks/cn/xml/x-newxml/)\n\n## XML 长什么样呢？\n ![image1](http://7xiwtw.com1.z0.glb.clouddn.com/WYQp_xml_example.png)\n\n# 解析 XML\n\n> 这里不做XML的生成，只是做解析。\n\n## XML 解析的过程\n\n**IOS 使用的是Delegate 来实现 XML 的解析 `<NSXMLParserDelegate>`**\n\n```{bash}\n\n//开始解析步骤\n 1. - (void)parserDidStartDocument:(NSXMLParser *)parser\n\n//遇到一个 <tag>\n 2. - (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName\n      namespaceURI:(NSString *)namespaceURI\n     qualifiedName:(NSString *)qName\n        attributes:(NSDictionary *)attributeDict\n\n//找到<tag>中的内容\n 3. - (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string\n\n//遇到一个 </tag>\n 4. - (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName\n      namespaceURI:(NSString *)namespaceURI\n     qualifiedName:(NSString *)qName\n\n//解析中出现了错误\n 5. - (void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError\n\n//解析完成的最后收拾\n 6. - (void)parserDidEndDocument:(NSXMLParser *)parser\n\n```\n\n**XML 解析流程说明**\n\n\n  - 从 1 开始，遇到一个`<tag>`, 调用2方法，遇到一个`内容`调用3方法，遇到一个`</tag>`调用4的方法，如果出现了`解析错误`就会调用5方法。知道`解析结束`掉用6方法。\n      大概就是这么一个流程。\n\n  - 2，3，4，5的方法的调用是多次的，依赖于xml的内容；1和6在整个解析过程中各自只有一次。\n\n\n## 解析使用的例子:\n\n[XML](http://www.raywenderlich.com/demos/weather_sample/weather.php?format=xml)\n\n# 解析XML成Dictionary － 参考书上和自己的问题所作的类\n\n> 这两个文件可以直接 `食用` (千万不要真的把它给吃了，要消化啦。。。)\n\n - \\*.m 文件里面有delegate处理的使用, 有conform `<NSXMLParserDelegate>` 的说明\n\n**XMLParser.h**\n\n```{bash}\n\n//\n//  XMLParser.h\n//  Test\n//\n//  Created by wuyingqiang on 7/19/15.\n//  Copyright (c) 2015 wuyingqiang. All rights reserved.\n//\n\n/*\n * first, set the prepare phase.\n * second, start xml parse.\n * finally, set the block of operation when xml parse was done.\n * ------------------------------------------------------------\n *\n * <FUNCTIONALITY>: Parsing XML file into dictionary.\n *\n * this class just give you several class method to complete your goal.\n * you don't need to set anything for this class, just use one method to deal with your problem.\n *\n * ---------------------------------------------------------------------------------------------\n *\n * <CLASS METHOD>:\n *      +xmlParseByData:completeBlock:\n *      +xmlParseByData:completeBlock:dictionaryCloseInArray:\n *      +xmlParseByURL:completeBlock:\n *      +xmlParseByURL:completeBlock:dictionaryCloseInArray:\n *      +xmlParseWithURLByString:completeBlock:\n *      +xmlParseWithURLByString:completeBlock:dictionaryCloseInArray:\n *      +xmlParseWithXMLParser:completeBlock:\n *      +xmlParseWithXMLParser:completeBlock:dictionaryCloseInArray:\n *\n * ---------------------------------------------------------------------------------------------\n *\n * <PARAMETER>:\n *\n *      - data: (NSData *), the data from server you have already download.\n *\n *      - url : (NSURL *), the url of xml in server.\n *\n *      - stringOfURL : (NSString *), the string of URL.\n *\n *      - parser: (NSXMLParser *), XML serializer you have download from server,and convertd. saved in NSXMLPareser.\n *\n * ------------------------------------------------------------------------------------------------------------------\n *\n * <EXAMPLE>:\n *      \n *     [[[XMLParser alloc] init] xmlParseByData:data\n *                                completeBlock:^(NSDictionary *data) {\n *\n *                                  // yet completed the parsing, data was saved in the\n *                                  // dictionary,which you have parsing done\n *\n *                                  }];\n *\n * -----------------------------------------------------------------------------------------------------------------\n *\n * <CONSUMMER>:\n *\n *    - the block's data is the result of parsing.\n *\n * <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Having Fun - END >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-------------\n *\n */\n\n#import <Foundation/Foundation.h>\n\n@interface XMLParser : NSObject\n\n+ (void)xmlParseByData:(NSData *)data\n         completeBlock:(void (^)(NSDictionary *data)) parseCompleted;\n+ (void)xmlParseByData:(NSData *)data\n         completeBlock:(void (^)(NSDictionary *data)) parseCompleted dictionaryCloseInArray:(BOOL)close;\n/* parsing xml use data from server\n *\n */\n\n+ (void)xmlParseByURL:(NSURL *)url\n        completeBlock:(void (^)(NSDictionary *data)) parseCompleted;\n+ (void)xmlParseByURL:(NSURL *)url\n        completeBlock:(void (^)(NSDictionary *data)) parseCompleted dictionaryCloseInArray:(BOOL)close;\n/* parsing xml url\n *\n */\n\n+ (void)xmlParseWithURLByString:(NSString *)stringOfURL\n         completeBlock:(void (^)(NSDictionary *data)) parseCompleted;\n+ (void)xmlParseWithURLByString:(NSString *)stringOfURL\n                  completeBlock:(void (^)(NSDictionary *data)) parseCompleted dictionaryCloseInArray:(BOOL)close;\n/* parsing xml by url string\n *\n */\n+ (void)xmlParseWithXMLParser:(NSXMLParser *) parser\n                completeBlock:(void (^)(NSDictionary *data)) parseCompleted;\n+ (void)xmlParseWithXMLParser:(NSXMLParser *) parser\n                completeBlock:(void (^)(NSDictionary *data)) parseCompleted\n                   dictionaryCloseInArray:(BOOL) close;\n/* parsing xml by NSXMLparser\n *\n */\n@end\n\n```\n\n**XMLParser.m**\n\n```{bash}\n\n//\n//  XMLParser.m\n//  Test\n//\n//  Created by wuyingqiang on 7/19/15.\n//  Copyright (c) 2015 wuyingqiang. All rights reserved.\n//\n\n#import \"XMLParser.h\"\n\n/*\n * define the parsing mode\n *\n */\ntypedef NS_ENUM(NSInteger, ParseMode) {\n    ParseModeByData     = 1,\n    ParseModeByString   = 2,\n    ParseModeByURL      = 3,\n    ParseModeByXMLParser= 4\n};\n\ntypedef void (^parseDoneBlock)(NSDictionary *data);\n\n@interface XMLParser() <NSXMLParserDelegate>\n\n/* block , which is for complete operation */\n@property (nonatomic, weak) parseDoneBlock parseCompleteNow;\n\n/* data from source */\n@property (nonatomic, strong) NSData *data;\n/* url of network */\n@property (nonatomic, strong) NSURL *Url;\n\n/* xml operation stack */\n@property (nonatomic, strong) NSMutableArray *elementStack;\n\n/* character of finding */\n@property (nonatomic, strong) NSMutableString *textGet;\n\n/* xml which array closed */\n@property (nonatomic) BOOL close;\n\n- (void)setURL:(NSString *)urlString;\n- (void)startWithParseMode:(ParseMode)mode comcompleteBlock:(void (^)(NSDictionary *))parseCompleted dataSource:(NSObject *)source arrayClosed:(BOOL) close;\n\n@end\n@implementation XMLParser\n\n#pragma mark - Class Method.\n\n/* class method in no dictionary close in array mode.\n *\n * SUCH AS:\n * <data>\n *  <current_condition>\n *      <cloudcover>16</cloudcover>\n *      <humidity>59</humidity>\n *      <observation_time>09:09 PM</observation_time>\n *      <precipMM>0.1</precipMM>\n *      <pressure>1010</pressure>\n *      <temp_C>10</temp_C>\n *      <temp_F>49</temp_F>\n *      <visibility>10</visibility>\n *      <weatherCode>113</weatherCode>\n *      <weatherDesc>\n *          <Value>Clear</Value>\n *      </weatherDesc>\n *      <weatherIconUrl>\n *          <value>\n *              http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\n *          </value>\n *      </weatherIconUrl>\n *      <winddir16Point>NW</winddir16Point>\n *      <winddirDegree>316</winddirDegree>\n *      <windspeedKmph>47</windspeedKmph>\n *      <windspeedMiles>29</windspeedMiles>\n *  </current_condition>\n *\n * ----------------------------------------------------------------------------------------------------------------\n *  After `DICTIONARY IN ARRAY` parsing:\n *   \n *   data = {\n *            \"current_condition\" = [\n *                                   {\n *                                     cloudcover = 16;\n *                                       humidity = 59;\n *                                     \"observation_time\" = \"09:09 PM\";\n *                                     precipMM = \"0.1\";\n *                                     pressure = 1010;\n *                                     \"temp_C\" = 10;\n *                                     \"temp_F\" = 49;\n *                                     visibility = 10;\n *                                     weatherCode = 113;\n *                                     weatherDesc = [\n *                                                      {\n *                                                          value = Clear;\n *                                                      }\n *                                     ];\n *                                     weatherIconUrl = [\n *                                                      {\n *                                                          value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\";\n *                                                      }\n *                                     ];\n *                                     winddir16Point = NW;\n *                                     winddirDegree = 316;\n *                                     windspeedKmph = 47;\n *                                     windspeedMiles = 29;\n *                                   }\n *                                  ];\n *\n * ---------------------------------------------------------------------------------------------------------------\n *  Without `DICTIONARY IN ARRAY` parsing:\n *\n *\n *   data = {\n *            \"current_condition\" = {\n *                                     cloudcover = 16;\n *                                       humidity = 59;\n *                                     \"observation_time\" = \"09:09 PM\";\n *                                     precipMM = \"0.1\";\n *                                     pressure = 1010;\n *                                     \"temp_C\" = 10;\n *                                     \"temp_F\" = 49;\n *                                     visibility = 10;\n *                                     weatherCode = 113;\n *                                     weatherDesc = {\n *                                                          value = Clear;\n *                                     }\n *                                     weatherIconUrl = {\n *                                                          value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\";\n *                                     };\n *                                     winddir16Point = NW;\n *                                     winddirDegree = 316;\n *                                     windspeedKmph = 47;\n *                                     windspeedMiles = 29;\n *                                   };\n *\n * ------------------------------------------------------------------------------------------------------------\n *\n */\n\n// generation mode\n+ (void)xmlParseByData:(NSData *)data\n         completeBlock:(void (^)(NSDictionary *))parseCompleted {\n\n    [[[XMLParser alloc] init] startWithParseMode:ParseModeByData\n                                comcompleteBlock:parseCompleted\n                                      dataSource:data\n                                     arrayClosed:NO];\n}\n+ (void)xmlParseByURL:(NSURL *)url\n        completeBlock:(void (^)(NSDictionary *))parseCompleted {\n\n    [[[XMLParser alloc] init] startWithParseMode:ParseModeByURL\n                                comcompleteBlock:parseCompleted\n                                      dataSource:url\n                                     arrayClosed:NO];\n}\n+ (void)xmlParseWithURLByString:(NSString *)stringOfURL\n                  completeBlock:(void (^)(NSDictionary *))parseCompleted {\n\n    NSURL *url = [NSURL URLWithString:stringOfURL];\n\n    [XMLParser xmlParseByURL:url\n               completeBlock:parseCompleted];\n\n}\n+ (void)xmlParseWithXMLParser:(NSXMLParser *)parser\n                completeBlock:(void (^)(NSDictionary *))parseCompleted {\n    [[[XMLParser alloc] init] startWithParseMode:ParseModeByXMLParser\n                                comcompleteBlock:parseCompleted\n                                      dataSource:parser\n                                     arrayClosed:NO];\n}\n\n// `dictionary in array` mode\n+ (void)xmlParseByData:(NSData *)data completeBlock:(void (^)(NSDictionary *))parseCompleted dictionaryCloseInArray:(BOOL)close {\n    [[[XMLParser alloc] init] startWithParseMode:ParseModeByData\n                                comcompleteBlock:parseCompleted\n                                      dataSource:data\n                                     arrayClosed:close];\n}\n+ (void)xmlParseByURL:(NSURL *)url completeBlock:(void (^)(NSDictionary *))parseCompleted dictionaryCloseInArray:(BOOL)close {\n\n    [[[XMLParser alloc] init] startWithParseMode:ParseModeByURL\n                                comcompleteBlock:parseCompleted\n                                      dataSource:url\n                                     arrayClosed:close];\n}\n+ (void)xmlParseWithURLByString:(NSString *)stringOfURL completeBlock:(void (^)(NSDictionary *))parseCompleted dictionaryCloseInArray:(BOOL)close {\n\n    NSURL *url = [NSURL URLWithString:stringOfURL];\n\n    [XMLParser xmlParseByURL:url\n               completeBlock:parseCompleted dictionaryCloseInArray:close];\n\n}\n+ (void)xmlParseWithXMLParser:(NSXMLParser *)parser\n                completeBlock:(void (^)(NSDictionary *))parseCompleted\n                   dictionaryCloseInArray:(BOOL)close {\n\n    [[[XMLParser alloc] init] startWithParseMode:ParseModeByXMLParser\n                                comcompleteBlock:parseCompleted\n                                      dataSource:parser\n                                     arrayClosed:close];\n}\n\n#pragma mark - Private Method.\n- (void)setURL:(NSString *)urlString\n/*\n * set the URL\n *\n */\n{\n\n    [self setUrl:[NSURL URLWithString:urlString]];\n}\n\n- (void)startWithParseMode:(ParseMode)mode comcompleteBlock:(void (^)(NSDictionary *))parseCompleted dataSource:(NSObject *)source arrayClosed:(BOOL) close\n/*\n * start to parsing ...\n *\n */\n{\n\n\n    NSXMLParser *parse;\n    _close = close;\n\n    /* block */\n    _parseCompleteNow = parseCompleted;\n\n    /* set the parse mode */\n    switch (mode) {\n        case ParseModeByData:\n        {\n            NSData *data = (NSData *)source;\n            parse = [[NSXMLParser alloc] initWithData:data];\n        }\n            break;\n        case ParseModeByURL:\n        {\n            NSURL *url = (NSURL *)source;\n            parse = [[NSXMLParser alloc] initWithContentsOfURL:url];\n\n        }\n        case ParseModeByXMLParser: {\n\n            parse = (NSXMLParser *)source;\n        }\n            break;\n        default:\n            break;\n    }\n\n    [self startWithParseInstance:parse];\n\n}\n- (void)startWithParseInstance:(NSXMLParser *)parse {\n\n    parse.delegate = self;\n    [parse parse];\n}\n\n\n#pragma mark - XML parse Delegate\n- (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName attributes:(NSDictionary *)attributeDict {\n\n    /* get the parent dictionary */\n    NSMutableDictionary *parentDict = [_elementStack lastObject];\n    NSObject *elementFound = [parentDict objectForKey:elementName];\n\n    /* if not exist */\n    if(!elementFound) {\n\n        NSMutableDictionary *childDict = [NSMutableDictionary new];\n        [parentDict setObject:childDict forKey:elementName];\n\n        [_elementStack addObject:childDict];\n\n    } else  {/* exist this key, means this is array, not dictionary */\n\n        /* start from array */\n        if( [elementFound isKindOfClass:[NSMutableDictionary class]]) {\n\n            NSMutableArray *childs = [NSMutableArray new];\n            [childs addObject:elementFound];\n\n            [parentDict setObject:childs forKey:elementName];\n\n            [childs addObject:[NSMutableDictionary new]];\n            [_elementStack addObject:[childs lastObject]];\n        }\n\n        else {\n\n            /* continue from array */\n            NSMutableDictionary *childDict = [NSMutableDictionary new];\n            NSMutableArray *items = (NSMutableArray *)elementFound;\n\n            [items addObject:childDict];\n\n            [_elementStack addObject:childDict];\n\n        }\n    }\n\n}\n- (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName{\n\n    /* has found the text */\n    if( [self.textGet length] > 0) {\n\n        [_elementStack removeLastObject];\n        NSMutableDictionary *item = [_elementStack lastObject];\n\n        [item setObject:_textGet forKey:elementName];\n        _textGet = [NSMutableString new];\n\n    } else {\n\n        [_elementStack removeLastObject];\n\n        if (_close) { // when open the <close in Array> mode\n\n            id value = [[_elementStack lastObject] valueForKey:elementName];\n            if ([value isKindOfClass:[NSDictionary class]]) {\n\n                NSMutableArray *arrayClose = [NSMutableArray array];\n                [arrayClose addObject:value];\n\n                [[_elementStack lastObject] setValue:arrayClose forKey:elementName];\n            }\n        }\n\n\n    }\n\n\n\n\n}\n- (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string {\n\n    if([string hasPrefix:@\"\\n\"])\n        return ;\n\n    [_textGet appendString:string];\n}\n\n- (void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError {\n\n    /* something error */\n    NSLog(@\"%@\", parseError);\n}\n- (void)parserDidStartDocument:(NSXMLParser *)parser\n/* start to parse */\n{\n\n    _elementStack = [NSMutableArray new];\n    _textGet = [NSMutableString new];\n\n    [_elementStack addObject:[NSMutableDictionary new]];\n}\n\n- (void)parserDidEndDocument:(NSXMLParser *)parser {\n    /* parse done */\n    NSLog(@\"fater parse:\\n %@\", [_elementStack lastObject]);\n\n    NSDictionary *compeltedData = [_elementStack lastObject];\n\n    /* second dealing */\n    compeltedData = [self settingArrayClosed:compeltedData];\n\n    self.parseCompleteNow(compeltedData);\n}\n\n#pragma mark - Class Dead\n- (void)dealloc {\n    NSLog(@\"xml class dead\");\n}\n\n#pragma mark - setting array closed\n- (NSDictionary *)settingArrayClosed:(NSDictionary *)result {\n\n    /* first, find the main key */\n    NSString *key = [result allKeys][0];\n\n    /* second, start to close */\n    NSDictionary *start = @{ key : [result valueForKey:key][0] };\n\n    return start;\n}\n\n@end\n\n```\n\n\n## 预期的结果\n\n```{bash}\n\ndata =     (\n                {\n            \"current_condition\" =             (\n                                {\n                    cloudcover = 16;\n                    humidity = 59;\n                    \"observation_time\" = \"09:09 PM\";\n                    precipMM = \"0.1\";\n                    pressure = 1010;\n                    \"temp_C\" = 10;\n                    \"temp_F\" = 49;\n                    visibility = 10;\n                    weatherCode = 113;\n                    weatherDesc =                     (\n                                                {\n                            value = Clear;\n                        }\n                    );\n                    weatherIconUrl =                     (\n                                                {\n                            value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\";\n                        }\n                    );\n                    winddir16Point = NW;\n                    winddirDegree = 316;\n                    windspeedKmph = 47;\n                    windspeedMiles = 29;\n                }\n            );\n            request =             (\n                                {\n                    query = \"Lat 32.35 and Lon 141.43\";\n                    type = LatLon;\n                }\n)\n            );\n            weather =             (\n                                {\n                    date = \"2013-01-15\";\n                    precipMM = \"1.8\";\n                    tempMaxC = 12;\n                    tempMaxF = 53;\n                    tempMinC = 10;\n                    tempMinF = 50;\n                    weatherCode = 119;\n                    weatherDesc =                     (\n                                                {\n                            value = Cloudy;\n                        }\n                    );\n                    weatherIconUrl =                     (\n                                                {\n                            value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0003_white_cloud.png\";\n                        }\n                    );\n                    winddir16Point = NNW;\n                    winddirDegree = 348;\n                    winddirection = NNW;\n                    windspeedKmph = 66;\n                    windspeedMiles = 41;\n                },\n                                {\n                    date = \"2013-01-16\";\n                    precipMM = \"0.6\";\n                    tempMaxC = 13;\n                    tempMaxF = 56;\n                    tempMinC = 11;\n                    tempMinF = 51;\n                    weatherCode = 113;\n                    weatherDesc =                     (\n                                                {\n                            value = Sunny;\n                        }\n                    );\n                    weatherIconUrl =                     (\n                                                {\n                            value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0001_sunny.png\";\n                        }\n                    );\n                    winddir16Point = WNW;\n                    winddirDegree = 284;\n                    winddirection = WNW;\n                    windspeedKmph = 33;\n                    windspeedMiles = 21;\n                },\n                                {\n                    date = \"2013-01-17\";\n                    precipMM = \"0.5\";\n                    tempMaxC = 14;\n                    tempMaxF = 56;\n                    tempMinC = 7;\n                    tempMinF = 44;\n                    weatherCode = 119;\n                    weatherDesc =                     (\n                                                {\n                            value = Cloudy;\n                        }\n                    );\n                    weatherIconUrl =                     (\n                                                {\n                            value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0003_white_cloud.png\";\n                        }\n                    );\n                    winddir16Point = WNW;\n                    winddirDegree = 293;\n                    winddirection = WNW;\n                    windspeedKmph = 41;\n                    windspeedMiles = 25;\n                },\n                                {\n                    date = \"2013-01-18\";\n                    precipMM = \"1.9\";\n                    tempMaxC = 11;\n                    tempMaxF = 51;\n                    tempMinC = 7;\n                    tempMinF = 44;\n                    weatherCode = 353;\n                    weatherDesc =                     (\n                                                {\n                            value = \"Light rain shower\";\n                        }\n                    );\n                    weatherIconUrl =                     (\n                                                {\n                            value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0009_light_rain_showers.png\";\n                        }\n                    );\n                    winddir16Point = NW;\n                    winddirDegree = 312;\n                    winddirection = NW;\n                    windspeedKmph = 66;\n                    windspeedMiles = 41;\n                },\n                                {\n                    date = \"2013-01-19\";\n                    precipMM = \"1.1\";\n                    tempMaxC = 7;\n                    tempMaxF = 45;\n                    tempMinC = 6;\n                    tempMinF = 43;\n                    weatherCode = 176;\n                    weatherDesc =                     (\n                                                {\n                            value = \"Patchy rain nearby\";\n                        }\n                    );\n                    weatherIconUrl =                     (\n                                                {\n                            value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0009_light_rain_showers.png\";\n                        }\n                    );\n                    winddir16Point = NW;\n                    winddirDegree = 324;\n                    winddirection = NW;\n                    windspeedKmph = 52;\n                    windspeedMiles = 32;\n                }\n            );\n        }\n    );\n}\n)\n\n```\n","source":"_posts/XML-Parsing-IOS.md","raw":"title: XML Parsing - IOS\ndate: 2016-02-22 14:36:27\ntags:\n\n - IOS\n - XML\n\n---\n\n# 什么是 XML\n\n> 如果不知道它的产生，何谓使用它呢？\n\n## 认识和了解 XML\n\n\n  - XML 是可扩展标记语言（Extensible Markup Language）的缩写，其中的 标记（markup）是关键部分。您可以创建内容，然后使用限定标记标记它，从而使每个单词、短语或块成为可识别、可分类的信息。您创建的文件，或文档实例 由元素（标记）和内容构成。\n\n  - 当从打印输出读取或以电子形式处理文档时，元素能够帮助更好地理解文档。元素的描述性越强，文档各部分越容易识别。\n\n  - 标记语言从早期的私有公司和政府制定形式逐渐演变成标准通用标记语言（Standard Generalized Markup Language，SGML）、超文本标记语言（Hypertext Markup Language，HTML），并且最终演变成 XML。SGML 比较复杂，HTML（实际上仅是一组元素集）在识别信息方面不够强大。XML 则是一种易于使用和易于扩展的标记语言。\n\n  - 可以使用 XML 创建自己的元素，从而能够更精确地表示自己的信息。您可以在文档内部识别每个部分，而不是将文档看作仅由标题和段落组成。为了提高效率，您可能需要定义数量一定的元素，并统一使用它们。（您可以在文档类型定义（Document Type Definition， DTD ）或模式 （schema）中定义元素，稍后我将对此进行简要的描述）。一旦习惯使用 XML 之后，就可以在构建文件时尝试处理元素名称。\n\n  - 用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。 它非常适合万维网传输，提供统一的方法来描述和交换独立于应用程序或供应商的结构化数据。是Internet环境中跨平台的、依赖于内容的技术，也是当今处理分布式结构信息的有效工具。早在1998年，W3C就发布了XML1.0规范，使用它来简化Internet的文档信息传输。\n\n  如果你想学习XML，[点这里 - XML 新手入门基础知识](http://www.ibm.com/developerworks/cn/xml/x-newxml/)\n\n## XML 长什么样呢？\n ![image1](http://7xiwtw.com1.z0.glb.clouddn.com/WYQp_xml_example.png)\n\n# 解析 XML\n\n> 这里不做XML的生成，只是做解析。\n\n## XML 解析的过程\n\n**IOS 使用的是Delegate 来实现 XML 的解析 `<NSXMLParserDelegate>`**\n\n```{bash}\n\n//开始解析步骤\n 1. - (void)parserDidStartDocument:(NSXMLParser *)parser\n\n//遇到一个 <tag>\n 2. - (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName\n      namespaceURI:(NSString *)namespaceURI\n     qualifiedName:(NSString *)qName\n        attributes:(NSDictionary *)attributeDict\n\n//找到<tag>中的内容\n 3. - (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string\n\n//遇到一个 </tag>\n 4. - (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName\n      namespaceURI:(NSString *)namespaceURI\n     qualifiedName:(NSString *)qName\n\n//解析中出现了错误\n 5. - (void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError\n\n//解析完成的最后收拾\n 6. - (void)parserDidEndDocument:(NSXMLParser *)parser\n\n```\n\n**XML 解析流程说明**\n\n\n  - 从 1 开始，遇到一个`<tag>`, 调用2方法，遇到一个`内容`调用3方法，遇到一个`</tag>`调用4的方法，如果出现了`解析错误`就会调用5方法。知道`解析结束`掉用6方法。\n      大概就是这么一个流程。\n\n  - 2，3，4，5的方法的调用是多次的，依赖于xml的内容；1和6在整个解析过程中各自只有一次。\n\n\n## 解析使用的例子:\n\n[XML](http://www.raywenderlich.com/demos/weather_sample/weather.php?format=xml)\n\n# 解析XML成Dictionary － 参考书上和自己的问题所作的类\n\n> 这两个文件可以直接 `食用` (千万不要真的把它给吃了，要消化啦。。。)\n\n - \\*.m 文件里面有delegate处理的使用, 有conform `<NSXMLParserDelegate>` 的说明\n\n**XMLParser.h**\n\n```{bash}\n\n//\n//  XMLParser.h\n//  Test\n//\n//  Created by wuyingqiang on 7/19/15.\n//  Copyright (c) 2015 wuyingqiang. All rights reserved.\n//\n\n/*\n * first, set the prepare phase.\n * second, start xml parse.\n * finally, set the block of operation when xml parse was done.\n * ------------------------------------------------------------\n *\n * <FUNCTIONALITY>: Parsing XML file into dictionary.\n *\n * this class just give you several class method to complete your goal.\n * you don't need to set anything for this class, just use one method to deal with your problem.\n *\n * ---------------------------------------------------------------------------------------------\n *\n * <CLASS METHOD>:\n *      +xmlParseByData:completeBlock:\n *      +xmlParseByData:completeBlock:dictionaryCloseInArray:\n *      +xmlParseByURL:completeBlock:\n *      +xmlParseByURL:completeBlock:dictionaryCloseInArray:\n *      +xmlParseWithURLByString:completeBlock:\n *      +xmlParseWithURLByString:completeBlock:dictionaryCloseInArray:\n *      +xmlParseWithXMLParser:completeBlock:\n *      +xmlParseWithXMLParser:completeBlock:dictionaryCloseInArray:\n *\n * ---------------------------------------------------------------------------------------------\n *\n * <PARAMETER>:\n *\n *      - data: (NSData *), the data from server you have already download.\n *\n *      - url : (NSURL *), the url of xml in server.\n *\n *      - stringOfURL : (NSString *), the string of URL.\n *\n *      - parser: (NSXMLParser *), XML serializer you have download from server,and convertd. saved in NSXMLPareser.\n *\n * ------------------------------------------------------------------------------------------------------------------\n *\n * <EXAMPLE>:\n *      \n *     [[[XMLParser alloc] init] xmlParseByData:data\n *                                completeBlock:^(NSDictionary *data) {\n *\n *                                  // yet completed the parsing, data was saved in the\n *                                  // dictionary,which you have parsing done\n *\n *                                  }];\n *\n * -----------------------------------------------------------------------------------------------------------------\n *\n * <CONSUMMER>:\n *\n *    - the block's data is the result of parsing.\n *\n * <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Having Fun - END >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-------------\n *\n */\n\n#import <Foundation/Foundation.h>\n\n@interface XMLParser : NSObject\n\n+ (void)xmlParseByData:(NSData *)data\n         completeBlock:(void (^)(NSDictionary *data)) parseCompleted;\n+ (void)xmlParseByData:(NSData *)data\n         completeBlock:(void (^)(NSDictionary *data)) parseCompleted dictionaryCloseInArray:(BOOL)close;\n/* parsing xml use data from server\n *\n */\n\n+ (void)xmlParseByURL:(NSURL *)url\n        completeBlock:(void (^)(NSDictionary *data)) parseCompleted;\n+ (void)xmlParseByURL:(NSURL *)url\n        completeBlock:(void (^)(NSDictionary *data)) parseCompleted dictionaryCloseInArray:(BOOL)close;\n/* parsing xml url\n *\n */\n\n+ (void)xmlParseWithURLByString:(NSString *)stringOfURL\n         completeBlock:(void (^)(NSDictionary *data)) parseCompleted;\n+ (void)xmlParseWithURLByString:(NSString *)stringOfURL\n                  completeBlock:(void (^)(NSDictionary *data)) parseCompleted dictionaryCloseInArray:(BOOL)close;\n/* parsing xml by url string\n *\n */\n+ (void)xmlParseWithXMLParser:(NSXMLParser *) parser\n                completeBlock:(void (^)(NSDictionary *data)) parseCompleted;\n+ (void)xmlParseWithXMLParser:(NSXMLParser *) parser\n                completeBlock:(void (^)(NSDictionary *data)) parseCompleted\n                   dictionaryCloseInArray:(BOOL) close;\n/* parsing xml by NSXMLparser\n *\n */\n@end\n\n```\n\n**XMLParser.m**\n\n```{bash}\n\n//\n//  XMLParser.m\n//  Test\n//\n//  Created by wuyingqiang on 7/19/15.\n//  Copyright (c) 2015 wuyingqiang. All rights reserved.\n//\n\n#import \"XMLParser.h\"\n\n/*\n * define the parsing mode\n *\n */\ntypedef NS_ENUM(NSInteger, ParseMode) {\n    ParseModeByData     = 1,\n    ParseModeByString   = 2,\n    ParseModeByURL      = 3,\n    ParseModeByXMLParser= 4\n};\n\ntypedef void (^parseDoneBlock)(NSDictionary *data);\n\n@interface XMLParser() <NSXMLParserDelegate>\n\n/* block , which is for complete operation */\n@property (nonatomic, weak) parseDoneBlock parseCompleteNow;\n\n/* data from source */\n@property (nonatomic, strong) NSData *data;\n/* url of network */\n@property (nonatomic, strong) NSURL *Url;\n\n/* xml operation stack */\n@property (nonatomic, strong) NSMutableArray *elementStack;\n\n/* character of finding */\n@property (nonatomic, strong) NSMutableString *textGet;\n\n/* xml which array closed */\n@property (nonatomic) BOOL close;\n\n- (void)setURL:(NSString *)urlString;\n- (void)startWithParseMode:(ParseMode)mode comcompleteBlock:(void (^)(NSDictionary *))parseCompleted dataSource:(NSObject *)source arrayClosed:(BOOL) close;\n\n@end\n@implementation XMLParser\n\n#pragma mark - Class Method.\n\n/* class method in no dictionary close in array mode.\n *\n * SUCH AS:\n * <data>\n *  <current_condition>\n *      <cloudcover>16</cloudcover>\n *      <humidity>59</humidity>\n *      <observation_time>09:09 PM</observation_time>\n *      <precipMM>0.1</precipMM>\n *      <pressure>1010</pressure>\n *      <temp_C>10</temp_C>\n *      <temp_F>49</temp_F>\n *      <visibility>10</visibility>\n *      <weatherCode>113</weatherCode>\n *      <weatherDesc>\n *          <Value>Clear</Value>\n *      </weatherDesc>\n *      <weatherIconUrl>\n *          <value>\n *              http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\n *          </value>\n *      </weatherIconUrl>\n *      <winddir16Point>NW</winddir16Point>\n *      <winddirDegree>316</winddirDegree>\n *      <windspeedKmph>47</windspeedKmph>\n *      <windspeedMiles>29</windspeedMiles>\n *  </current_condition>\n *\n * ----------------------------------------------------------------------------------------------------------------\n *  After `DICTIONARY IN ARRAY` parsing:\n *   \n *   data = {\n *            \"current_condition\" = [\n *                                   {\n *                                     cloudcover = 16;\n *                                       humidity = 59;\n *                                     \"observation_time\" = \"09:09 PM\";\n *                                     precipMM = \"0.1\";\n *                                     pressure = 1010;\n *                                     \"temp_C\" = 10;\n *                                     \"temp_F\" = 49;\n *                                     visibility = 10;\n *                                     weatherCode = 113;\n *                                     weatherDesc = [\n *                                                      {\n *                                                          value = Clear;\n *                                                      }\n *                                     ];\n *                                     weatherIconUrl = [\n *                                                      {\n *                                                          value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\";\n *                                                      }\n *                                     ];\n *                                     winddir16Point = NW;\n *                                     winddirDegree = 316;\n *                                     windspeedKmph = 47;\n *                                     windspeedMiles = 29;\n *                                   }\n *                                  ];\n *\n * ---------------------------------------------------------------------------------------------------------------\n *  Without `DICTIONARY IN ARRAY` parsing:\n *\n *\n *   data = {\n *            \"current_condition\" = {\n *                                     cloudcover = 16;\n *                                       humidity = 59;\n *                                     \"observation_time\" = \"09:09 PM\";\n *                                     precipMM = \"0.1\";\n *                                     pressure = 1010;\n *                                     \"temp_C\" = 10;\n *                                     \"temp_F\" = 49;\n *                                     visibility = 10;\n *                                     weatherCode = 113;\n *                                     weatherDesc = {\n *                                                          value = Clear;\n *                                     }\n *                                     weatherIconUrl = {\n *                                                          value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\";\n *                                     };\n *                                     winddir16Point = NW;\n *                                     winddirDegree = 316;\n *                                     windspeedKmph = 47;\n *                                     windspeedMiles = 29;\n *                                   };\n *\n * ------------------------------------------------------------------------------------------------------------\n *\n */\n\n// generation mode\n+ (void)xmlParseByData:(NSData *)data\n         completeBlock:(void (^)(NSDictionary *))parseCompleted {\n\n    [[[XMLParser alloc] init] startWithParseMode:ParseModeByData\n                                comcompleteBlock:parseCompleted\n                                      dataSource:data\n                                     arrayClosed:NO];\n}\n+ (void)xmlParseByURL:(NSURL *)url\n        completeBlock:(void (^)(NSDictionary *))parseCompleted {\n\n    [[[XMLParser alloc] init] startWithParseMode:ParseModeByURL\n                                comcompleteBlock:parseCompleted\n                                      dataSource:url\n                                     arrayClosed:NO];\n}\n+ (void)xmlParseWithURLByString:(NSString *)stringOfURL\n                  completeBlock:(void (^)(NSDictionary *))parseCompleted {\n\n    NSURL *url = [NSURL URLWithString:stringOfURL];\n\n    [XMLParser xmlParseByURL:url\n               completeBlock:parseCompleted];\n\n}\n+ (void)xmlParseWithXMLParser:(NSXMLParser *)parser\n                completeBlock:(void (^)(NSDictionary *))parseCompleted {\n    [[[XMLParser alloc] init] startWithParseMode:ParseModeByXMLParser\n                                comcompleteBlock:parseCompleted\n                                      dataSource:parser\n                                     arrayClosed:NO];\n}\n\n// `dictionary in array` mode\n+ (void)xmlParseByData:(NSData *)data completeBlock:(void (^)(NSDictionary *))parseCompleted dictionaryCloseInArray:(BOOL)close {\n    [[[XMLParser alloc] init] startWithParseMode:ParseModeByData\n                                comcompleteBlock:parseCompleted\n                                      dataSource:data\n                                     arrayClosed:close];\n}\n+ (void)xmlParseByURL:(NSURL *)url completeBlock:(void (^)(NSDictionary *))parseCompleted dictionaryCloseInArray:(BOOL)close {\n\n    [[[XMLParser alloc] init] startWithParseMode:ParseModeByURL\n                                comcompleteBlock:parseCompleted\n                                      dataSource:url\n                                     arrayClosed:close];\n}\n+ (void)xmlParseWithURLByString:(NSString *)stringOfURL completeBlock:(void (^)(NSDictionary *))parseCompleted dictionaryCloseInArray:(BOOL)close {\n\n    NSURL *url = [NSURL URLWithString:stringOfURL];\n\n    [XMLParser xmlParseByURL:url\n               completeBlock:parseCompleted dictionaryCloseInArray:close];\n\n}\n+ (void)xmlParseWithXMLParser:(NSXMLParser *)parser\n                completeBlock:(void (^)(NSDictionary *))parseCompleted\n                   dictionaryCloseInArray:(BOOL)close {\n\n    [[[XMLParser alloc] init] startWithParseMode:ParseModeByXMLParser\n                                comcompleteBlock:parseCompleted\n                                      dataSource:parser\n                                     arrayClosed:close];\n}\n\n#pragma mark - Private Method.\n- (void)setURL:(NSString *)urlString\n/*\n * set the URL\n *\n */\n{\n\n    [self setUrl:[NSURL URLWithString:urlString]];\n}\n\n- (void)startWithParseMode:(ParseMode)mode comcompleteBlock:(void (^)(NSDictionary *))parseCompleted dataSource:(NSObject *)source arrayClosed:(BOOL) close\n/*\n * start to parsing ...\n *\n */\n{\n\n\n    NSXMLParser *parse;\n    _close = close;\n\n    /* block */\n    _parseCompleteNow = parseCompleted;\n\n    /* set the parse mode */\n    switch (mode) {\n        case ParseModeByData:\n        {\n            NSData *data = (NSData *)source;\n            parse = [[NSXMLParser alloc] initWithData:data];\n        }\n            break;\n        case ParseModeByURL:\n        {\n            NSURL *url = (NSURL *)source;\n            parse = [[NSXMLParser alloc] initWithContentsOfURL:url];\n\n        }\n        case ParseModeByXMLParser: {\n\n            parse = (NSXMLParser *)source;\n        }\n            break;\n        default:\n            break;\n    }\n\n    [self startWithParseInstance:parse];\n\n}\n- (void)startWithParseInstance:(NSXMLParser *)parse {\n\n    parse.delegate = self;\n    [parse parse];\n}\n\n\n#pragma mark - XML parse Delegate\n- (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName attributes:(NSDictionary *)attributeDict {\n\n    /* get the parent dictionary */\n    NSMutableDictionary *parentDict = [_elementStack lastObject];\n    NSObject *elementFound = [parentDict objectForKey:elementName];\n\n    /* if not exist */\n    if(!elementFound) {\n\n        NSMutableDictionary *childDict = [NSMutableDictionary new];\n        [parentDict setObject:childDict forKey:elementName];\n\n        [_elementStack addObject:childDict];\n\n    } else  {/* exist this key, means this is array, not dictionary */\n\n        /* start from array */\n        if( [elementFound isKindOfClass:[NSMutableDictionary class]]) {\n\n            NSMutableArray *childs = [NSMutableArray new];\n            [childs addObject:elementFound];\n\n            [parentDict setObject:childs forKey:elementName];\n\n            [childs addObject:[NSMutableDictionary new]];\n            [_elementStack addObject:[childs lastObject]];\n        }\n\n        else {\n\n            /* continue from array */\n            NSMutableDictionary *childDict = [NSMutableDictionary new];\n            NSMutableArray *items = (NSMutableArray *)elementFound;\n\n            [items addObject:childDict];\n\n            [_elementStack addObject:childDict];\n\n        }\n    }\n\n}\n- (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName{\n\n    /* has found the text */\n    if( [self.textGet length] > 0) {\n\n        [_elementStack removeLastObject];\n        NSMutableDictionary *item = [_elementStack lastObject];\n\n        [item setObject:_textGet forKey:elementName];\n        _textGet = [NSMutableString new];\n\n    } else {\n\n        [_elementStack removeLastObject];\n\n        if (_close) { // when open the <close in Array> mode\n\n            id value = [[_elementStack lastObject] valueForKey:elementName];\n            if ([value isKindOfClass:[NSDictionary class]]) {\n\n                NSMutableArray *arrayClose = [NSMutableArray array];\n                [arrayClose addObject:value];\n\n                [[_elementStack lastObject] setValue:arrayClose forKey:elementName];\n            }\n        }\n\n\n    }\n\n\n\n\n}\n- (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string {\n\n    if([string hasPrefix:@\"\\n\"])\n        return ;\n\n    [_textGet appendString:string];\n}\n\n- (void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError {\n\n    /* something error */\n    NSLog(@\"%@\", parseError);\n}\n- (void)parserDidStartDocument:(NSXMLParser *)parser\n/* start to parse */\n{\n\n    _elementStack = [NSMutableArray new];\n    _textGet = [NSMutableString new];\n\n    [_elementStack addObject:[NSMutableDictionary new]];\n}\n\n- (void)parserDidEndDocument:(NSXMLParser *)parser {\n    /* parse done */\n    NSLog(@\"fater parse:\\n %@\", [_elementStack lastObject]);\n\n    NSDictionary *compeltedData = [_elementStack lastObject];\n\n    /* second dealing */\n    compeltedData = [self settingArrayClosed:compeltedData];\n\n    self.parseCompleteNow(compeltedData);\n}\n\n#pragma mark - Class Dead\n- (void)dealloc {\n    NSLog(@\"xml class dead\");\n}\n\n#pragma mark - setting array closed\n- (NSDictionary *)settingArrayClosed:(NSDictionary *)result {\n\n    /* first, find the main key */\n    NSString *key = [result allKeys][0];\n\n    /* second, start to close */\n    NSDictionary *start = @{ key : [result valueForKey:key][0] };\n\n    return start;\n}\n\n@end\n\n```\n\n\n## 预期的结果\n\n```{bash}\n\ndata =     (\n                {\n            \"current_condition\" =             (\n                                {\n                    cloudcover = 16;\n                    humidity = 59;\n                    \"observation_time\" = \"09:09 PM\";\n                    precipMM = \"0.1\";\n                    pressure = 1010;\n                    \"temp_C\" = 10;\n                    \"temp_F\" = 49;\n                    visibility = 10;\n                    weatherCode = 113;\n                    weatherDesc =                     (\n                                                {\n                            value = Clear;\n                        }\n                    );\n                    weatherIconUrl =                     (\n                                                {\n                            value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\";\n                        }\n                    );\n                    winddir16Point = NW;\n                    winddirDegree = 316;\n                    windspeedKmph = 47;\n                    windspeedMiles = 29;\n                }\n            );\n            request =             (\n                                {\n                    query = \"Lat 32.35 and Lon 141.43\";\n                    type = LatLon;\n                }\n)\n            );\n            weather =             (\n                                {\n                    date = \"2013-01-15\";\n                    precipMM = \"1.8\";\n                    tempMaxC = 12;\n                    tempMaxF = 53;\n                    tempMinC = 10;\n                    tempMinF = 50;\n                    weatherCode = 119;\n                    weatherDesc =                     (\n                                                {\n                            value = Cloudy;\n                        }\n                    );\n                    weatherIconUrl =                     (\n                                                {\n                            value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0003_white_cloud.png\";\n                        }\n                    );\n                    winddir16Point = NNW;\n                    winddirDegree = 348;\n                    winddirection = NNW;\n                    windspeedKmph = 66;\n                    windspeedMiles = 41;\n                },\n                                {\n                    date = \"2013-01-16\";\n                    precipMM = \"0.6\";\n                    tempMaxC = 13;\n                    tempMaxF = 56;\n                    tempMinC = 11;\n                    tempMinF = 51;\n                    weatherCode = 113;\n                    weatherDesc =                     (\n                                                {\n                            value = Sunny;\n                        }\n                    );\n                    weatherIconUrl =                     (\n                                                {\n                            value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0001_sunny.png\";\n                        }\n                    );\n                    winddir16Point = WNW;\n                    winddirDegree = 284;\n                    winddirection = WNW;\n                    windspeedKmph = 33;\n                    windspeedMiles = 21;\n                },\n                                {\n                    date = \"2013-01-17\";\n                    precipMM = \"0.5\";\n                    tempMaxC = 14;\n                    tempMaxF = 56;\n                    tempMinC = 7;\n                    tempMinF = 44;\n                    weatherCode = 119;\n                    weatherDesc =                     (\n                                                {\n                            value = Cloudy;\n                        }\n                    );\n                    weatherIconUrl =                     (\n                                                {\n                            value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0003_white_cloud.png\";\n                        }\n                    );\n                    winddir16Point = WNW;\n                    winddirDegree = 293;\n                    winddirection = WNW;\n                    windspeedKmph = 41;\n                    windspeedMiles = 25;\n                },\n                                {\n                    date = \"2013-01-18\";\n                    precipMM = \"1.9\";\n                    tempMaxC = 11;\n                    tempMaxF = 51;\n                    tempMinC = 7;\n                    tempMinF = 44;\n                    weatherCode = 353;\n                    weatherDesc =                     (\n                                                {\n                            value = \"Light rain shower\";\n                        }\n                    );\n                    weatherIconUrl =                     (\n                                                {\n                            value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0009_light_rain_showers.png\";\n                        }\n                    );\n                    winddir16Point = NW;\n                    winddirDegree = 312;\n                    winddirection = NW;\n                    windspeedKmph = 66;\n                    windspeedMiles = 41;\n                },\n                                {\n                    date = \"2013-01-19\";\n                    precipMM = \"1.1\";\n                    tempMaxC = 7;\n                    tempMaxF = 45;\n                    tempMinC = 6;\n                    tempMinF = 43;\n                    weatherCode = 176;\n                    weatherDesc =                     (\n                                                {\n                            value = \"Patchy rain nearby\";\n                        }\n                    );\n                    weatherIconUrl =                     (\n                                                {\n                            value = \"http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0009_light_rain_showers.png\";\n                        }\n                    );\n                    winddir16Point = NW;\n                    winddirDegree = 324;\n                    winddirection = NW;\n                    windspeedKmph = 52;\n                    windspeedMiles = 32;\n                }\n            );\n        }\n    );\n}\n)\n\n```\n","slug":"XML-Parsing-IOS","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzek007hpe3qsl6h18vy","content":"<h1 id=\"什么是-XML\"><a href=\"#什么是-XML\" class=\"headerlink\" title=\"什么是 XML\"></a>什么是 XML</h1><blockquote>\n<p>如果不知道它的产生，何谓使用它呢？</p>\n</blockquote>\n<h2 id=\"认识和了解-XML\"><a href=\"#认识和了解-XML\" class=\"headerlink\" title=\"认识和了解 XML\"></a>认识和了解 XML</h2><ul>\n<li><p>XML 是可扩展标记语言（Extensible Markup Language）的缩写，其中的 标记（markup）是关键部分。您可以创建内容，然后使用限定标记标记它，从而使每个单词、短语或块成为可识别、可分类的信息。您创建的文件，或文档实例 由元素（标记）和内容构成。</p>\n</li>\n<li><p>当从打印输出读取或以电子形式处理文档时，元素能够帮助更好地理解文档。元素的描述性越强，文档各部分越容易识别。</p>\n</li>\n<li><p>标记语言从早期的私有公司和政府制定形式逐渐演变成标准通用标记语言（Standard Generalized Markup Language，SGML）、超文本标记语言（Hypertext Markup Language，HTML），并且最终演变成 XML。SGML 比较复杂，HTML（实际上仅是一组元素集）在识别信息方面不够强大。XML 则是一种易于使用和易于扩展的标记语言。</p>\n</li>\n<li><p>可以使用 XML 创建自己的元素，从而能够更精确地表示自己的信息。您可以在文档内部识别每个部分，而不是将文档看作仅由标题和段落组成。为了提高效率，您可能需要定义数量一定的元素，并统一使用它们。（您可以在文档类型定义（Document Type Definition， DTD ）或模式 （schema）中定义元素，稍后我将对此进行简要的描述）。一旦习惯使用 XML 之后，就可以在构建文件时尝试处理元素名称。</p>\n</li>\n<li><p>用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。 它非常适合万维网传输，提供统一的方法来描述和交换独立于应用程序或供应商的结构化数据。是Internet环境中跨平台的、依赖于内容的技术，也是当今处理分布式结构信息的有效工具。早在1998年，W3C就发布了XML1.0规范，使用它来简化Internet的文档信息传输。</p>\n<p>如果你想学习XML，<a href=\"http://www.ibm.com/developerworks/cn/xml/x-newxml/\" target=\"_blank\" rel=\"external\">点这里 - XML 新手入门基础知识</a></p>\n</li>\n</ul>\n<h2 id=\"XML-长什么样呢？\"><a href=\"#XML-长什么样呢？\" class=\"headerlink\" title=\"XML 长什么样呢？\"></a>XML 长什么样呢？</h2><p> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/WYQp_xml_example.png\" alt=\"image1\"></p>\n<h1 id=\"解析-XML\"><a href=\"#解析-XML\" class=\"headerlink\" title=\"解析 XML\"></a>解析 XML</h1><blockquote>\n<p>这里不做XML的生成，只是做解析。</p>\n</blockquote>\n<h2 id=\"XML-解析的过程\"><a href=\"#XML-解析的过程\" class=\"headerlink\" title=\"XML 解析的过程\"></a>XML 解析的过程</h2><p><strong>IOS 使用的是Delegate 来实现 XML 的解析 <code>&lt;NSXMLParserDelegate&gt;</code></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">//开始解析步骤</span><br><span class=\"line\"> 1. - (void)parserDidStartDocument:(NSXMLParser *)parser</span><br><span class=\"line\"></span><br><span class=\"line\">//遇到一个 &lt;tag&gt;</span><br><span class=\"line\"> 2. - (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName</span><br><span class=\"line\">      namespaceURI:(NSString *)namespaceURI</span><br><span class=\"line\">     qualifiedName:(NSString *)qName</span><br><span class=\"line\">        attributes:(NSDictionary *)attributeDict</span><br><span class=\"line\"></span><br><span class=\"line\">//找到&lt;tag&gt;中的内容</span><br><span class=\"line\"> 3. - (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string</span><br><span class=\"line\"></span><br><span class=\"line\">//遇到一个 &lt;/tag&gt;</span><br><span class=\"line\"> 4. - (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName</span><br><span class=\"line\">      namespaceURI:(NSString *)namespaceURI</span><br><span class=\"line\">     qualifiedName:(NSString *)qName</span><br><span class=\"line\"></span><br><span class=\"line\">//解析中出现了错误</span><br><span class=\"line\"> 5. - (void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError</span><br><span class=\"line\"></span><br><span class=\"line\">//解析完成的最后收拾</span><br><span class=\"line\"> 6. - (void)parserDidEndDocument:(NSXMLParser *)parser</span><br></pre></td></tr></table></figure>\n<p><strong>XML 解析流程说明</strong></p>\n<ul>\n<li><p>从 1 开始，遇到一个<code>&lt;tag&gt;</code>, 调用2方法，遇到一个<code>内容</code>调用3方法，遇到一个<code>&lt;/tag&gt;</code>调用4的方法，如果出现了<code>解析错误</code>就会调用5方法。知道<code>解析结束</code>掉用6方法。<br>  大概就是这么一个流程。</p>\n</li>\n<li><p>2，3，4，5的方法的调用是多次的，依赖于xml的内容；1和6在整个解析过程中各自只有一次。</p>\n</li>\n</ul>\n<h2 id=\"解析使用的例子\"><a href=\"#解析使用的例子\" class=\"headerlink\" title=\"解析使用的例子:\"></a>解析使用的例子:</h2><p><a href=\"http://www.raywenderlich.com/demos/weather_sample/weather.php?format=xml\" target=\"_blank\" rel=\"external\">XML</a></p>\n<h1 id=\"解析XML成Dictionary-－-参考书上和自己的问题所作的类\"><a href=\"#解析XML成Dictionary-－-参考书上和自己的问题所作的类\" class=\"headerlink\" title=\"解析XML成Dictionary － 参考书上和自己的问题所作的类\"></a>解析XML成Dictionary － 参考书上和自己的问题所作的类</h1><blockquote>\n<p>这两个文件可以直接 <code>食用</code> (千万不要真的把它给吃了，要消化啦。。。)</p>\n</blockquote>\n<ul>\n<li>*.m 文件里面有delegate处理的使用, 有conform <code>&lt;NSXMLParserDelegate&gt;</code> 的说明</li>\n</ul>\n<p><strong>XMLParser.h</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">//</span><br><span class=\"line\">//  XMLParser.h</span><br><span class=\"line\">//  Test</span><br><span class=\"line\">//</span><br><span class=\"line\">//  Created by wuyingqiang on 7/19/15.</span><br><span class=\"line\">//  Copyright (c) 2015 wuyingqiang. All rights reserved.</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"> * first, set the prepare phase.</span><br><span class=\"line\"> * second, start xml parse.</span><br><span class=\"line\"> * finally, set the block of operation when xml parse was done.</span><br><span class=\"line\"> * ------------------------------------------------------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;FUNCTIONALITY&gt;: Parsing XML file into dictionary.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * this class just give you several class method to complete your goal.</span><br><span class=\"line\"> * you don&apos;t need to set anything for this class, just use one method to deal with your problem.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ---------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;CLASS METHOD&gt;:</span><br><span class=\"line\"> *      +xmlParseByData:completeBlock:</span><br><span class=\"line\"> *      +xmlParseByData:completeBlock:dictionaryCloseInArray:</span><br><span class=\"line\"> *      +xmlParseByURL:completeBlock:</span><br><span class=\"line\"> *      +xmlParseByURL:completeBlock:dictionaryCloseInArray:</span><br><span class=\"line\"> *      +xmlParseWithURLByString:completeBlock:</span><br><span class=\"line\"> *      +xmlParseWithURLByString:completeBlock:dictionaryCloseInArray:</span><br><span class=\"line\"> *      +xmlParseWithXMLParser:completeBlock:</span><br><span class=\"line\"> *      +xmlParseWithXMLParser:completeBlock:dictionaryCloseInArray:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ---------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;PARAMETER&gt;:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      - data: (NSData *), the data from server you have already download.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      - url : (NSURL *), the url of xml in server.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      - stringOfURL : (NSString *), the string of URL.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      - parser: (NSXMLParser *), XML serializer you have download from server,and convertd. saved in NSXMLPareser.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;EXAMPLE&gt;:</span><br><span class=\"line\"> *      </span><br><span class=\"line\"> *     [[[XMLParser alloc] init] xmlParseByData:data</span><br><span class=\"line\"> *                                completeBlock:^(NSDictionary *data) &#123;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *                                  // yet completed the parsing, data was saved in the</span><br><span class=\"line\"> *                                  // dictionary,which you have parsing done</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *                                  &#125;];</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * -----------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;CONSUMMER&gt;:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *    - the block&apos;s data is the result of parsing.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Having Fun - END &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;-------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">#import &lt;Foundation/Foundation.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">@interface XMLParser : NSObject</span><br><span class=\"line\"></span><br><span class=\"line\">+ (void)xmlParseByData:(NSData *)data</span><br><span class=\"line\">         completeBlock:(void (^)(NSDictionary *data)) parseCompleted;</span><br><span class=\"line\">+ (void)xmlParseByData:(NSData *)data</span><br><span class=\"line\">         completeBlock:(void (^)(NSDictionary *data)) parseCompleted dictionaryCloseInArray:(BOOL)close;</span><br><span class=\"line\">/* parsing xml use data from server</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">+ (void)xmlParseByURL:(NSURL *)url</span><br><span class=\"line\">        completeBlock:(void (^)(NSDictionary *data)) parseCompleted;</span><br><span class=\"line\">+ (void)xmlParseByURL:(NSURL *)url</span><br><span class=\"line\">        completeBlock:(void (^)(NSDictionary *data)) parseCompleted dictionaryCloseInArray:(BOOL)close;</span><br><span class=\"line\">/* parsing xml url</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">+ (void)xmlParseWithURLByString:(NSString *)stringOfURL</span><br><span class=\"line\">         completeBlock:(void (^)(NSDictionary *data)) parseCompleted;</span><br><span class=\"line\">+ (void)xmlParseWithURLByString:(NSString *)stringOfURL</span><br><span class=\"line\">                  completeBlock:(void (^)(NSDictionary *data)) parseCompleted dictionaryCloseInArray:(BOOL)close;</span><br><span class=\"line\">/* parsing xml by url string</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">+ (void)xmlParseWithXMLParser:(NSXMLParser *) parser</span><br><span class=\"line\">                completeBlock:(void (^)(NSDictionary *data)) parseCompleted;</span><br><span class=\"line\">+ (void)xmlParseWithXMLParser:(NSXMLParser *) parser</span><br><span class=\"line\">                completeBlock:(void (^)(NSDictionary *data)) parseCompleted</span><br><span class=\"line\">                   dictionaryCloseInArray:(BOOL) close;</span><br><span class=\"line\">/* parsing xml by NSXMLparser</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n<p><strong>XMLParser.m</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">//</span><br><span class=\"line\">//  XMLParser.m</span><br><span class=\"line\">//  Test</span><br><span class=\"line\">//</span><br><span class=\"line\">//  Created by wuyingqiang on 7/19/15.</span><br><span class=\"line\">//  Copyright (c) 2015 wuyingqiang. All rights reserved.</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">#import &quot;XMLParser.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"> * define the parsing mode</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">typedef NS_ENUM(NSInteger, ParseMode) &#123;</span><br><span class=\"line\">    ParseModeByData     = 1,</span><br><span class=\"line\">    ParseModeByString   = 2,</span><br><span class=\"line\">    ParseModeByURL      = 3,</span><br><span class=\"line\">    ParseModeByXMLParser= 4</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">typedef void (^parseDoneBlock)(NSDictionary *data);</span><br><span class=\"line\"></span><br><span class=\"line\">@interface XMLParser() &lt;NSXMLParserDelegate&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* block , which is for complete operation */</span><br><span class=\"line\">@property (nonatomic, weak) parseDoneBlock parseCompleteNow;</span><br><span class=\"line\"></span><br><span class=\"line\">/* data from source */</span><br><span class=\"line\">@property (nonatomic, strong) NSData *data;</span><br><span class=\"line\">/* url of network */</span><br><span class=\"line\">@property (nonatomic, strong) NSURL *Url;</span><br><span class=\"line\"></span><br><span class=\"line\">/* xml operation stack */</span><br><span class=\"line\">@property (nonatomic, strong) NSMutableArray *elementStack;</span><br><span class=\"line\"></span><br><span class=\"line\">/* character of finding */</span><br><span class=\"line\">@property (nonatomic, strong) NSMutableString *textGet;</span><br><span class=\"line\"></span><br><span class=\"line\">/* xml which array closed */</span><br><span class=\"line\">@property (nonatomic) BOOL close;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)setURL:(NSString *)urlString;</span><br><span class=\"line\">- (void)startWithParseMode:(ParseMode)mode comcompleteBlock:(void (^)(NSDictionary *))parseCompleted dataSource:(NSObject *)source arrayClosed:(BOOL) close;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\">@implementation XMLParser</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark - Class Method.</span><br><span class=\"line\"></span><br><span class=\"line\">/* class method in no dictionary close in array mode.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * SUCH AS:</span><br><span class=\"line\"> * &lt;data&gt;</span><br><span class=\"line\"> *  &lt;current_condition&gt;</span><br><span class=\"line\"> *      &lt;cloudcover&gt;16&lt;/cloudcover&gt;</span><br><span class=\"line\"> *      &lt;humidity&gt;59&lt;/humidity&gt;</span><br><span class=\"line\"> *      &lt;observation_time&gt;09:09 PM&lt;/observation_time&gt;</span><br><span class=\"line\"> *      &lt;precipMM&gt;0.1&lt;/precipMM&gt;</span><br><span class=\"line\"> *      &lt;pressure&gt;1010&lt;/pressure&gt;</span><br><span class=\"line\"> *      &lt;temp_C&gt;10&lt;/temp_C&gt;</span><br><span class=\"line\"> *      &lt;temp_F&gt;49&lt;/temp_F&gt;</span><br><span class=\"line\"> *      &lt;visibility&gt;10&lt;/visibility&gt;</span><br><span class=\"line\"> *      &lt;weatherCode&gt;113&lt;/weatherCode&gt;</span><br><span class=\"line\"> *      &lt;weatherDesc&gt;</span><br><span class=\"line\"> *          &lt;Value&gt;Clear&lt;/Value&gt;</span><br><span class=\"line\"> *      &lt;/weatherDesc&gt;</span><br><span class=\"line\"> *      &lt;weatherIconUrl&gt;</span><br><span class=\"line\"> *          &lt;value&gt;</span><br><span class=\"line\"> *              http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png</span><br><span class=\"line\"> *          &lt;/value&gt;</span><br><span class=\"line\"> *      &lt;/weatherIconUrl&gt;</span><br><span class=\"line\"> *      &lt;winddir16Point&gt;NW&lt;/winddir16Point&gt;</span><br><span class=\"line\"> *      &lt;winddirDegree&gt;316&lt;/winddirDegree&gt;</span><br><span class=\"line\"> *      &lt;windspeedKmph&gt;47&lt;/windspeedKmph&gt;</span><br><span class=\"line\"> *      &lt;windspeedMiles&gt;29&lt;/windspeedMiles&gt;</span><br><span class=\"line\"> *  &lt;/current_condition&gt;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ----------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *  After `DICTIONARY IN ARRAY` parsing:</span><br><span class=\"line\"> *   </span><br><span class=\"line\"> *   data = &#123;</span><br><span class=\"line\"> *            &quot;current_condition&quot; = [</span><br><span class=\"line\"> *                                   &#123;</span><br><span class=\"line\"> *                                     cloudcover = 16;</span><br><span class=\"line\"> *                                       humidity = 59;</span><br><span class=\"line\"> *                                     &quot;observation_time&quot; = &quot;09:09 PM&quot;;</span><br><span class=\"line\"> *                                     precipMM = &quot;0.1&quot;;</span><br><span class=\"line\"> *                                     pressure = 1010;</span><br><span class=\"line\"> *                                     &quot;temp_C&quot; = 10;</span><br><span class=\"line\"> *                                     &quot;temp_F&quot; = 49;</span><br><span class=\"line\"> *                                     visibility = 10;</span><br><span class=\"line\"> *                                     weatherCode = 113;</span><br><span class=\"line\"> *                                     weatherDesc = [</span><br><span class=\"line\"> *                                                      &#123;</span><br><span class=\"line\"> *                                                          value = Clear;</span><br><span class=\"line\"> *                                                      &#125;</span><br><span class=\"line\"> *                                     ];</span><br><span class=\"line\"> *                                     weatherIconUrl = [</span><br><span class=\"line\"> *                                                      &#123;</span><br><span class=\"line\"> *                                                          value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png&quot;;</span><br><span class=\"line\"> *                                                      &#125;</span><br><span class=\"line\"> *                                     ];</span><br><span class=\"line\"> *                                     winddir16Point = NW;</span><br><span class=\"line\"> *                                     winddirDegree = 316;</span><br><span class=\"line\"> *                                     windspeedKmph = 47;</span><br><span class=\"line\"> *                                     windspeedMiles = 29;</span><br><span class=\"line\"> *                                   &#125;</span><br><span class=\"line\"> *                                  ];</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ---------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *  Without `DICTIONARY IN ARRAY` parsing:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *   data = &#123;</span><br><span class=\"line\"> *            &quot;current_condition&quot; = &#123;</span><br><span class=\"line\"> *                                     cloudcover = 16;</span><br><span class=\"line\"> *                                       humidity = 59;</span><br><span class=\"line\"> *                                     &quot;observation_time&quot; = &quot;09:09 PM&quot;;</span><br><span class=\"line\"> *                                     precipMM = &quot;0.1&quot;;</span><br><span class=\"line\"> *                                     pressure = 1010;</span><br><span class=\"line\"> *                                     &quot;temp_C&quot; = 10;</span><br><span class=\"line\"> *                                     &quot;temp_F&quot; = 49;</span><br><span class=\"line\"> *                                     visibility = 10;</span><br><span class=\"line\"> *                                     weatherCode = 113;</span><br><span class=\"line\"> *                                     weatherDesc = &#123;</span><br><span class=\"line\"> *                                                          value = Clear;</span><br><span class=\"line\"> *                                     &#125;</span><br><span class=\"line\"> *                                     weatherIconUrl = &#123;</span><br><span class=\"line\"> *                                                          value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png&quot;;</span><br><span class=\"line\"> *                                     &#125;;</span><br><span class=\"line\"> *                                     winddir16Point = NW;</span><br><span class=\"line\"> *                                     winddirDegree = 316;</span><br><span class=\"line\"> *                                     windspeedKmph = 47;</span><br><span class=\"line\"> *                                     windspeedMiles = 29;</span><br><span class=\"line\"> *                                   &#125;;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">// generation mode</span><br><span class=\"line\">+ (void)xmlParseByData:(NSData *)data</span><br><span class=\"line\">         completeBlock:(void (^)(NSDictionary *))parseCompleted &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    [[[XMLParser alloc] init] startWithParseMode:ParseModeByData</span><br><span class=\"line\">                                comcompleteBlock:parseCompleted</span><br><span class=\"line\">                                      dataSource:data</span><br><span class=\"line\">                                     arrayClosed:NO];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">+ (void)xmlParseByURL:(NSURL *)url</span><br><span class=\"line\">        completeBlock:(void (^)(NSDictionary *))parseCompleted &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    [[[XMLParser alloc] init] startWithParseMode:ParseModeByURL</span><br><span class=\"line\">                                comcompleteBlock:parseCompleted</span><br><span class=\"line\">                                      dataSource:url</span><br><span class=\"line\">                                     arrayClosed:NO];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">+ (void)xmlParseWithURLByString:(NSString *)stringOfURL</span><br><span class=\"line\">                  completeBlock:(void (^)(NSDictionary *))parseCompleted &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    NSURL *url = [NSURL URLWithString:stringOfURL];</span><br><span class=\"line\"></span><br><span class=\"line\">    [XMLParser xmlParseByURL:url</span><br><span class=\"line\">               completeBlock:parseCompleted];</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">+ (void)xmlParseWithXMLParser:(NSXMLParser *)parser</span><br><span class=\"line\">                completeBlock:(void (^)(NSDictionary *))parseCompleted &#123;</span><br><span class=\"line\">    [[[XMLParser alloc] init] startWithParseMode:ParseModeByXMLParser</span><br><span class=\"line\">                                comcompleteBlock:parseCompleted</span><br><span class=\"line\">                                      dataSource:parser</span><br><span class=\"line\">                                     arrayClosed:NO];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// `dictionary in array` mode</span><br><span class=\"line\">+ (void)xmlParseByData:(NSData *)data completeBlock:(void (^)(NSDictionary *))parseCompleted dictionaryCloseInArray:(BOOL)close &#123;</span><br><span class=\"line\">    [[[XMLParser alloc] init] startWithParseMode:ParseModeByData</span><br><span class=\"line\">                                comcompleteBlock:parseCompleted</span><br><span class=\"line\">                                      dataSource:data</span><br><span class=\"line\">                                     arrayClosed:close];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">+ (void)xmlParseByURL:(NSURL *)url completeBlock:(void (^)(NSDictionary *))parseCompleted dictionaryCloseInArray:(BOOL)close &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    [[[XMLParser alloc] init] startWithParseMode:ParseModeByURL</span><br><span class=\"line\">                                comcompleteBlock:parseCompleted</span><br><span class=\"line\">                                      dataSource:url</span><br><span class=\"line\">                                     arrayClosed:close];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">+ (void)xmlParseWithURLByString:(NSString *)stringOfURL completeBlock:(void (^)(NSDictionary *))parseCompleted dictionaryCloseInArray:(BOOL)close &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    NSURL *url = [NSURL URLWithString:stringOfURL];</span><br><span class=\"line\"></span><br><span class=\"line\">    [XMLParser xmlParseByURL:url</span><br><span class=\"line\">               completeBlock:parseCompleted dictionaryCloseInArray:close];</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">+ (void)xmlParseWithXMLParser:(NSXMLParser *)parser</span><br><span class=\"line\">                completeBlock:(void (^)(NSDictionary *))parseCompleted</span><br><span class=\"line\">                   dictionaryCloseInArray:(BOOL)close &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    [[[XMLParser alloc] init] startWithParseMode:ParseModeByXMLParser</span><br><span class=\"line\">                                comcompleteBlock:parseCompleted</span><br><span class=\"line\">                                      dataSource:parser</span><br><span class=\"line\">                                     arrayClosed:close];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark - Private Method.</span><br><span class=\"line\">- (void)setURL:(NSString *)urlString</span><br><span class=\"line\">/*</span><br><span class=\"line\"> * set the URL</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    [self setUrl:[NSURL URLWithString:urlString]];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)startWithParseMode:(ParseMode)mode comcompleteBlock:(void (^)(NSDictionary *))parseCompleted dataSource:(NSObject *)source arrayClosed:(BOOL) close</span><br><span class=\"line\">/*</span><br><span class=\"line\"> * start to parsing ...</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    NSXMLParser *parse;</span><br><span class=\"line\">    _close = close;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* block */</span><br><span class=\"line\">    _parseCompleteNow = parseCompleted;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* set the parse mode */</span><br><span class=\"line\">    switch (mode) &#123;</span><br><span class=\"line\">        case ParseModeByData:</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            NSData *data = (NSData *)source;</span><br><span class=\"line\">            parse = [[NSXMLParser alloc] initWithData:data];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case ParseModeByURL:</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            NSURL *url = (NSURL *)source;</span><br><span class=\"line\">            parse = [[NSXMLParser alloc] initWithContentsOfURL:url];</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        case ParseModeByXMLParser: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            parse = (NSXMLParser *)source;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        default:</span><br><span class=\"line\">            break;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [self startWithParseInstance:parse];</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (void)startWithParseInstance:(NSXMLParser *)parse &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    parse.delegate = self;</span><br><span class=\"line\">    [parse parse];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark - XML parse Delegate</span><br><span class=\"line\">- (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName attributes:(NSDictionary *)attributeDict &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* get the parent dictionary */</span><br><span class=\"line\">    NSMutableDictionary *parentDict = [_elementStack lastObject];</span><br><span class=\"line\">    NSObject *elementFound = [parentDict objectForKey:elementName];</span><br><span class=\"line\"></span><br><span class=\"line\">    /* if not exist */</span><br><span class=\"line\">    if(!elementFound) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        NSMutableDictionary *childDict = [NSMutableDictionary new];</span><br><span class=\"line\">        [parentDict setObject:childDict forKey:elementName];</span><br><span class=\"line\"></span><br><span class=\"line\">        [_elementStack addObject:childDict];</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; else  &#123;/* exist this key, means this is array, not dictionary */</span><br><span class=\"line\"></span><br><span class=\"line\">        /* start from array */</span><br><span class=\"line\">        if( [elementFound isKindOfClass:[NSMutableDictionary class]]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            NSMutableArray *childs = [NSMutableArray new];</span><br><span class=\"line\">            [childs addObject:elementFound];</span><br><span class=\"line\"></span><br><span class=\"line\">            [parentDict setObject:childs forKey:elementName];</span><br><span class=\"line\"></span><br><span class=\"line\">            [childs addObject:[NSMutableDictionary new]];</span><br><span class=\"line\">            [_elementStack addObject:[childs lastObject]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        else &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            /* continue from array */</span><br><span class=\"line\">            NSMutableDictionary *childDict = [NSMutableDictionary new];</span><br><span class=\"line\">            NSMutableArray *items = (NSMutableArray *)elementFound;</span><br><span class=\"line\"></span><br><span class=\"line\">            [items addObject:childDict];</span><br><span class=\"line\"></span><br><span class=\"line\">            [_elementStack addObject:childDict];</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* has found the text */</span><br><span class=\"line\">    if( [self.textGet length] &gt; 0) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        [_elementStack removeLastObject];</span><br><span class=\"line\">        NSMutableDictionary *item = [_elementStack lastObject];</span><br><span class=\"line\"></span><br><span class=\"line\">        [item setObject:_textGet forKey:elementName];</span><br><span class=\"line\">        _textGet = [NSMutableString new];</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        [_elementStack removeLastObject];</span><br><span class=\"line\"></span><br><span class=\"line\">        if (_close) &#123; // when open the &lt;close in Array&gt; mode</span><br><span class=\"line\"></span><br><span class=\"line\">            id value = [[_elementStack lastObject] valueForKey:elementName];</span><br><span class=\"line\">            if ([value isKindOfClass:[NSDictionary class]]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                NSMutableArray *arrayClose = [NSMutableArray array];</span><br><span class=\"line\">                [arrayClose addObject:value];</span><br><span class=\"line\"></span><br><span class=\"line\">                [[_elementStack lastObject] setValue:arrayClose forKey:elementName];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    if([string hasPrefix:@&quot;\\n&quot;])</span><br><span class=\"line\">        return ;</span><br><span class=\"line\"></span><br><span class=\"line\">    [_textGet appendString:string];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* something error */</span><br><span class=\"line\">    NSLog(@&quot;%@&quot;, parseError);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (void)parserDidStartDocument:(NSXMLParser *)parser</span><br><span class=\"line\">/* start to parse */</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    _elementStack = [NSMutableArray new];</span><br><span class=\"line\">    _textGet = [NSMutableString new];</span><br><span class=\"line\"></span><br><span class=\"line\">    [_elementStack addObject:[NSMutableDictionary new]];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)parserDidEndDocument:(NSXMLParser *)parser &#123;</span><br><span class=\"line\">    /* parse done */</span><br><span class=\"line\">    NSLog(@&quot;fater parse:\\n %@&quot;, [_elementStack lastObject]);</span><br><span class=\"line\"></span><br><span class=\"line\">    NSDictionary *compeltedData = [_elementStack lastObject];</span><br><span class=\"line\"></span><br><span class=\"line\">    /* second dealing */</span><br><span class=\"line\">    compeltedData = [self settingArrayClosed:compeltedData];</span><br><span class=\"line\"></span><br><span class=\"line\">    self.parseCompleteNow(compeltedData);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark - Class Dead</span><br><span class=\"line\">- (void)dealloc &#123;</span><br><span class=\"line\">    NSLog(@&quot;xml class dead&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark - setting array closed</span><br><span class=\"line\">- (NSDictionary *)settingArrayClosed:(NSDictionary *)result &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* first, find the main key */</span><br><span class=\"line\">    NSString *key = [result allKeys][0];</span><br><span class=\"line\"></span><br><span class=\"line\">    /* second, start to close */</span><br><span class=\"line\">    NSDictionary *start = @&#123; key : [result valueForKey:key][0] &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    return start;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n<h2 id=\"预期的结果\"><a href=\"#预期的结果\" class=\"headerlink\" title=\"预期的结果\"></a>预期的结果</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">data =     (</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">            &quot;current_condition&quot; =             (</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    cloudcover = 16;</span><br><span class=\"line\">                    humidity = 59;</span><br><span class=\"line\">                    &quot;observation_time&quot; = &quot;09:09 PM&quot;;</span><br><span class=\"line\">                    precipMM = &quot;0.1&quot;;</span><br><span class=\"line\">                    pressure = 1010;</span><br><span class=\"line\">                    &quot;temp_C&quot; = 10;</span><br><span class=\"line\">                    &quot;temp_F&quot; = 49;</span><br><span class=\"line\">                    visibility = 10;</span><br><span class=\"line\">                    weatherCode = 113;</span><br><span class=\"line\">                    weatherDesc =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = Clear;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    weatherIconUrl =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    winddir16Point = NW;</span><br><span class=\"line\">                    winddirDegree = 316;</span><br><span class=\"line\">                    windspeedKmph = 47;</span><br><span class=\"line\">                    windspeedMiles = 29;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            );</span><br><span class=\"line\">            request =             (</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    query = &quot;Lat 32.35 and Lon 141.43&quot;;</span><br><span class=\"line\">                    type = LatLon;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">            );</span><br><span class=\"line\">            weather =             (</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    date = &quot;2013-01-15&quot;;</span><br><span class=\"line\">                    precipMM = &quot;1.8&quot;;</span><br><span class=\"line\">                    tempMaxC = 12;</span><br><span class=\"line\">                    tempMaxF = 53;</span><br><span class=\"line\">                    tempMinC = 10;</span><br><span class=\"line\">                    tempMinF = 50;</span><br><span class=\"line\">                    weatherCode = 119;</span><br><span class=\"line\">                    weatherDesc =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = Cloudy;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    weatherIconUrl =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0003_white_cloud.png&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    winddir16Point = NNW;</span><br><span class=\"line\">                    winddirDegree = 348;</span><br><span class=\"line\">                    winddirection = NNW;</span><br><span class=\"line\">                    windspeedKmph = 66;</span><br><span class=\"line\">                    windspeedMiles = 41;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    date = &quot;2013-01-16&quot;;</span><br><span class=\"line\">                    precipMM = &quot;0.6&quot;;</span><br><span class=\"line\">                    tempMaxC = 13;</span><br><span class=\"line\">                    tempMaxF = 56;</span><br><span class=\"line\">                    tempMinC = 11;</span><br><span class=\"line\">                    tempMinF = 51;</span><br><span class=\"line\">                    weatherCode = 113;</span><br><span class=\"line\">                    weatherDesc =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = Sunny;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    weatherIconUrl =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0001_sunny.png&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    winddir16Point = WNW;</span><br><span class=\"line\">                    winddirDegree = 284;</span><br><span class=\"line\">                    winddirection = WNW;</span><br><span class=\"line\">                    windspeedKmph = 33;</span><br><span class=\"line\">                    windspeedMiles = 21;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    date = &quot;2013-01-17&quot;;</span><br><span class=\"line\">                    precipMM = &quot;0.5&quot;;</span><br><span class=\"line\">                    tempMaxC = 14;</span><br><span class=\"line\">                    tempMaxF = 56;</span><br><span class=\"line\">                    tempMinC = 7;</span><br><span class=\"line\">                    tempMinF = 44;</span><br><span class=\"line\">                    weatherCode = 119;</span><br><span class=\"line\">                    weatherDesc =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = Cloudy;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    weatherIconUrl =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0003_white_cloud.png&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    winddir16Point = WNW;</span><br><span class=\"line\">                    winddirDegree = 293;</span><br><span class=\"line\">                    winddirection = WNW;</span><br><span class=\"line\">                    windspeedKmph = 41;</span><br><span class=\"line\">                    windspeedMiles = 25;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    date = &quot;2013-01-18&quot;;</span><br><span class=\"line\">                    precipMM = &quot;1.9&quot;;</span><br><span class=\"line\">                    tempMaxC = 11;</span><br><span class=\"line\">                    tempMaxF = 51;</span><br><span class=\"line\">                    tempMinC = 7;</span><br><span class=\"line\">                    tempMinF = 44;</span><br><span class=\"line\">                    weatherCode = 353;</span><br><span class=\"line\">                    weatherDesc =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;Light rain shower&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    weatherIconUrl =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0009_light_rain_showers.png&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    winddir16Point = NW;</span><br><span class=\"line\">                    winddirDegree = 312;</span><br><span class=\"line\">                    winddirection = NW;</span><br><span class=\"line\">                    windspeedKmph = 66;</span><br><span class=\"line\">                    windspeedMiles = 41;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    date = &quot;2013-01-19&quot;;</span><br><span class=\"line\">                    precipMM = &quot;1.1&quot;;</span><br><span class=\"line\">                    tempMaxC = 7;</span><br><span class=\"line\">                    tempMaxF = 45;</span><br><span class=\"line\">                    tempMinC = 6;</span><br><span class=\"line\">                    tempMinF = 43;</span><br><span class=\"line\">                    weatherCode = 176;</span><br><span class=\"line\">                    weatherDesc =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;Patchy rain nearby&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    weatherIconUrl =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0009_light_rain_showers.png&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    winddir16Point = NW;</span><br><span class=\"line\">                    winddirDegree = 324;</span><br><span class=\"line\">                    winddirection = NW;</span><br><span class=\"line\">                    windspeedKmph = 52;</span><br><span class=\"line\">                    windspeedMiles = 32;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"什么是-XML\"><a href=\"#什么是-XML\" class=\"headerlink\" title=\"什么是 XML\"></a>什么是 XML</h1><blockquote>\n<p>如果不知道它的产生，何谓使用它呢？</p>\n</blockquote>\n<h2 id=\"认识和了解-XML\"><a href=\"#认识和了解-XML\" class=\"headerlink\" title=\"认识和了解 XML\"></a>认识和了解 XML</h2><ul>\n<li><p>XML 是可扩展标记语言（Extensible Markup Language）的缩写，其中的 标记（markup）是关键部分。您可以创建内容，然后使用限定标记标记它，从而使每个单词、短语或块成为可识别、可分类的信息。您创建的文件，或文档实例 由元素（标记）和内容构成。</p>\n</li>\n<li><p>当从打印输出读取或以电子形式处理文档时，元素能够帮助更好地理解文档。元素的描述性越强，文档各部分越容易识别。</p>\n</li>\n<li><p>标记语言从早期的私有公司和政府制定形式逐渐演变成标准通用标记语言（Standard Generalized Markup Language，SGML）、超文本标记语言（Hypertext Markup Language，HTML），并且最终演变成 XML。SGML 比较复杂，HTML（实际上仅是一组元素集）在识别信息方面不够强大。XML 则是一种易于使用和易于扩展的标记语言。</p>\n</li>\n<li><p>可以使用 XML 创建自己的元素，从而能够更精确地表示自己的信息。您可以在文档内部识别每个部分，而不是将文档看作仅由标题和段落组成。为了提高效率，您可能需要定义数量一定的元素，并统一使用它们。（您可以在文档类型定义（Document Type Definition， DTD ）或模式 （schema）中定义元素，稍后我将对此进行简要的描述）。一旦习惯使用 XML 之后，就可以在构建文件时尝试处理元素名称。</p>\n</li>\n<li><p>用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。 它非常适合万维网传输，提供统一的方法来描述和交换独立于应用程序或供应商的结构化数据。是Internet环境中跨平台的、依赖于内容的技术，也是当今处理分布式结构信息的有效工具。早在1998年，W3C就发布了XML1.0规范，使用它来简化Internet的文档信息传输。</p>\n<p>如果你想学习XML，<a href=\"http://www.ibm.com/developerworks/cn/xml/x-newxml/\">点这里 - XML 新手入门基础知识</a></p>\n</li>\n</ul>\n<h2 id=\"XML-长什么样呢？\"><a href=\"#XML-长什么样呢？\" class=\"headerlink\" title=\"XML 长什么样呢？\"></a>XML 长什么样呢？</h2><p> <img src=\"http://7xiwtw.com1.z0.glb.clouddn.com/WYQp_xml_example.png\" alt=\"image1\"></p>\n<h1 id=\"解析-XML\"><a href=\"#解析-XML\" class=\"headerlink\" title=\"解析 XML\"></a>解析 XML</h1><blockquote>\n<p>这里不做XML的生成，只是做解析。</p>\n</blockquote>\n<h2 id=\"XML-解析的过程\"><a href=\"#XML-解析的过程\" class=\"headerlink\" title=\"XML 解析的过程\"></a>XML 解析的过程</h2><p><strong>IOS 使用的是Delegate 来实现 XML 的解析 <code>&lt;NSXMLParserDelegate&gt;</code></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">//开始解析步骤</span><br><span class=\"line\"> 1. - (void)parserDidStartDocument:(NSXMLParser *)parser</span><br><span class=\"line\"></span><br><span class=\"line\">//遇到一个 &lt;tag&gt;</span><br><span class=\"line\"> 2. - (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName</span><br><span class=\"line\">      namespaceURI:(NSString *)namespaceURI</span><br><span class=\"line\">     qualifiedName:(NSString *)qName</span><br><span class=\"line\">        attributes:(NSDictionary *)attributeDict</span><br><span class=\"line\"></span><br><span class=\"line\">//找到&lt;tag&gt;中的内容</span><br><span class=\"line\"> 3. - (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string</span><br><span class=\"line\"></span><br><span class=\"line\">//遇到一个 &lt;/tag&gt;</span><br><span class=\"line\"> 4. - (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName</span><br><span class=\"line\">      namespaceURI:(NSString *)namespaceURI</span><br><span class=\"line\">     qualifiedName:(NSString *)qName</span><br><span class=\"line\"></span><br><span class=\"line\">//解析中出现了错误</span><br><span class=\"line\"> 5. - (void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError</span><br><span class=\"line\"></span><br><span class=\"line\">//解析完成的最后收拾</span><br><span class=\"line\"> 6. - (void)parserDidEndDocument:(NSXMLParser *)parser</span><br></pre></td></tr></table></figure>\n<p><strong>XML 解析流程说明</strong></p>\n<ul>\n<li><p>从 1 开始，遇到一个<code>&lt;tag&gt;</code>, 调用2方法，遇到一个<code>内容</code>调用3方法，遇到一个<code>&lt;/tag&gt;</code>调用4的方法，如果出现了<code>解析错误</code>就会调用5方法。知道<code>解析结束</code>掉用6方法。<br>  大概就是这么一个流程。</p>\n</li>\n<li><p>2，3，4，5的方法的调用是多次的，依赖于xml的内容；1和6在整个解析过程中各自只有一次。</p>\n</li>\n</ul>\n<h2 id=\"解析使用的例子\"><a href=\"#解析使用的例子\" class=\"headerlink\" title=\"解析使用的例子:\"></a>解析使用的例子:</h2><p><a href=\"http://www.raywenderlich.com/demos/weather_sample/weather.php?format=xml\">XML</a></p>\n<h1 id=\"解析XML成Dictionary-－-参考书上和自己的问题所作的类\"><a href=\"#解析XML成Dictionary-－-参考书上和自己的问题所作的类\" class=\"headerlink\" title=\"解析XML成Dictionary － 参考书上和自己的问题所作的类\"></a>解析XML成Dictionary － 参考书上和自己的问题所作的类</h1><blockquote>\n<p>这两个文件可以直接 <code>食用</code> (千万不要真的把它给吃了，要消化啦。。。)</p>\n</blockquote>\n<ul>\n<li>*.m 文件里面有delegate处理的使用, 有conform <code>&lt;NSXMLParserDelegate&gt;</code> 的说明</li>\n</ul>\n<p><strong>XMLParser.h</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">//</span><br><span class=\"line\">//  XMLParser.h</span><br><span class=\"line\">//  Test</span><br><span class=\"line\">//</span><br><span class=\"line\">//  Created by wuyingqiang on 7/19/15.</span><br><span class=\"line\">//  Copyright (c) 2015 wuyingqiang. All rights reserved.</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"> * first, set the prepare phase.</span><br><span class=\"line\"> * second, start xml parse.</span><br><span class=\"line\"> * finally, set the block of operation when xml parse was done.</span><br><span class=\"line\"> * ------------------------------------------------------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;FUNCTIONALITY&gt;: Parsing XML file into dictionary.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * this class just give you several class method to complete your goal.</span><br><span class=\"line\"> * you don&apos;t need to set anything for this class, just use one method to deal with your problem.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ---------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;CLASS METHOD&gt;:</span><br><span class=\"line\"> *      +xmlParseByData:completeBlock:</span><br><span class=\"line\"> *      +xmlParseByData:completeBlock:dictionaryCloseInArray:</span><br><span class=\"line\"> *      +xmlParseByURL:completeBlock:</span><br><span class=\"line\"> *      +xmlParseByURL:completeBlock:dictionaryCloseInArray:</span><br><span class=\"line\"> *      +xmlParseWithURLByString:completeBlock:</span><br><span class=\"line\"> *      +xmlParseWithURLByString:completeBlock:dictionaryCloseInArray:</span><br><span class=\"line\"> *      +xmlParseWithXMLParser:completeBlock:</span><br><span class=\"line\"> *      +xmlParseWithXMLParser:completeBlock:dictionaryCloseInArray:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ---------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;PARAMETER&gt;:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      - data: (NSData *), the data from server you have already download.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      - url : (NSURL *), the url of xml in server.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      - stringOfURL : (NSString *), the string of URL.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *      - parser: (NSXMLParser *), XML serializer you have download from server,and convertd. saved in NSXMLPareser.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;EXAMPLE&gt;:</span><br><span class=\"line\"> *      </span><br><span class=\"line\"> *     [[[XMLParser alloc] init] xmlParseByData:data</span><br><span class=\"line\"> *                                completeBlock:^(NSDictionary *data) &#123;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *                                  // yet completed the parsing, data was saved in the</span><br><span class=\"line\"> *                                  // dictionary,which you have parsing done</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *                                  &#125;];</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * -----------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;CONSUMMER&gt;:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *    - the block&apos;s data is the result of parsing.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Having Fun - END &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;-------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">#import &lt;Foundation/Foundation.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">@interface XMLParser : NSObject</span><br><span class=\"line\"></span><br><span class=\"line\">+ (void)xmlParseByData:(NSData *)data</span><br><span class=\"line\">         completeBlock:(void (^)(NSDictionary *data)) parseCompleted;</span><br><span class=\"line\">+ (void)xmlParseByData:(NSData *)data</span><br><span class=\"line\">         completeBlock:(void (^)(NSDictionary *data)) parseCompleted dictionaryCloseInArray:(BOOL)close;</span><br><span class=\"line\">/* parsing xml use data from server</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">+ (void)xmlParseByURL:(NSURL *)url</span><br><span class=\"line\">        completeBlock:(void (^)(NSDictionary *data)) parseCompleted;</span><br><span class=\"line\">+ (void)xmlParseByURL:(NSURL *)url</span><br><span class=\"line\">        completeBlock:(void (^)(NSDictionary *data)) parseCompleted dictionaryCloseInArray:(BOOL)close;</span><br><span class=\"line\">/* parsing xml url</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">+ (void)xmlParseWithURLByString:(NSString *)stringOfURL</span><br><span class=\"line\">         completeBlock:(void (^)(NSDictionary *data)) parseCompleted;</span><br><span class=\"line\">+ (void)xmlParseWithURLByString:(NSString *)stringOfURL</span><br><span class=\"line\">                  completeBlock:(void (^)(NSDictionary *data)) parseCompleted dictionaryCloseInArray:(BOOL)close;</span><br><span class=\"line\">/* parsing xml by url string</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">+ (void)xmlParseWithXMLParser:(NSXMLParser *) parser</span><br><span class=\"line\">                completeBlock:(void (^)(NSDictionary *data)) parseCompleted;</span><br><span class=\"line\">+ (void)xmlParseWithXMLParser:(NSXMLParser *) parser</span><br><span class=\"line\">                completeBlock:(void (^)(NSDictionary *data)) parseCompleted</span><br><span class=\"line\">                   dictionaryCloseInArray:(BOOL) close;</span><br><span class=\"line\">/* parsing xml by NSXMLparser</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n<p><strong>XMLParser.m</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">//</span><br><span class=\"line\">//  XMLParser.m</span><br><span class=\"line\">//  Test</span><br><span class=\"line\">//</span><br><span class=\"line\">//  Created by wuyingqiang on 7/19/15.</span><br><span class=\"line\">//  Copyright (c) 2015 wuyingqiang. All rights reserved.</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\">#import &quot;XMLParser.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"> * define the parsing mode</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">typedef NS_ENUM(NSInteger, ParseMode) &#123;</span><br><span class=\"line\">    ParseModeByData     = 1,</span><br><span class=\"line\">    ParseModeByString   = 2,</span><br><span class=\"line\">    ParseModeByURL      = 3,</span><br><span class=\"line\">    ParseModeByXMLParser= 4</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">typedef void (^parseDoneBlock)(NSDictionary *data);</span><br><span class=\"line\"></span><br><span class=\"line\">@interface XMLParser() &lt;NSXMLParserDelegate&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* block , which is for complete operation */</span><br><span class=\"line\">@property (nonatomic, weak) parseDoneBlock parseCompleteNow;</span><br><span class=\"line\"></span><br><span class=\"line\">/* data from source */</span><br><span class=\"line\">@property (nonatomic, strong) NSData *data;</span><br><span class=\"line\">/* url of network */</span><br><span class=\"line\">@property (nonatomic, strong) NSURL *Url;</span><br><span class=\"line\"></span><br><span class=\"line\">/* xml operation stack */</span><br><span class=\"line\">@property (nonatomic, strong) NSMutableArray *elementStack;</span><br><span class=\"line\"></span><br><span class=\"line\">/* character of finding */</span><br><span class=\"line\">@property (nonatomic, strong) NSMutableString *textGet;</span><br><span class=\"line\"></span><br><span class=\"line\">/* xml which array closed */</span><br><span class=\"line\">@property (nonatomic) BOOL close;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)setURL:(NSString *)urlString;</span><br><span class=\"line\">- (void)startWithParseMode:(ParseMode)mode comcompleteBlock:(void (^)(NSDictionary *))parseCompleted dataSource:(NSObject *)source arrayClosed:(BOOL) close;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\">@implementation XMLParser</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark - Class Method.</span><br><span class=\"line\"></span><br><span class=\"line\">/* class method in no dictionary close in array mode.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * SUCH AS:</span><br><span class=\"line\"> * &lt;data&gt;</span><br><span class=\"line\"> *  &lt;current_condition&gt;</span><br><span class=\"line\"> *      &lt;cloudcover&gt;16&lt;/cloudcover&gt;</span><br><span class=\"line\"> *      &lt;humidity&gt;59&lt;/humidity&gt;</span><br><span class=\"line\"> *      &lt;observation_time&gt;09:09 PM&lt;/observation_time&gt;</span><br><span class=\"line\"> *      &lt;precipMM&gt;0.1&lt;/precipMM&gt;</span><br><span class=\"line\"> *      &lt;pressure&gt;1010&lt;/pressure&gt;</span><br><span class=\"line\"> *      &lt;temp_C&gt;10&lt;/temp_C&gt;</span><br><span class=\"line\"> *      &lt;temp_F&gt;49&lt;/temp_F&gt;</span><br><span class=\"line\"> *      &lt;visibility&gt;10&lt;/visibility&gt;</span><br><span class=\"line\"> *      &lt;weatherCode&gt;113&lt;/weatherCode&gt;</span><br><span class=\"line\"> *      &lt;weatherDesc&gt;</span><br><span class=\"line\"> *          &lt;Value&gt;Clear&lt;/Value&gt;</span><br><span class=\"line\"> *      &lt;/weatherDesc&gt;</span><br><span class=\"line\"> *      &lt;weatherIconUrl&gt;</span><br><span class=\"line\"> *          &lt;value&gt;</span><br><span class=\"line\"> *              http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png</span><br><span class=\"line\"> *          &lt;/value&gt;</span><br><span class=\"line\"> *      &lt;/weatherIconUrl&gt;</span><br><span class=\"line\"> *      &lt;winddir16Point&gt;NW&lt;/winddir16Point&gt;</span><br><span class=\"line\"> *      &lt;winddirDegree&gt;316&lt;/winddirDegree&gt;</span><br><span class=\"line\"> *      &lt;windspeedKmph&gt;47&lt;/windspeedKmph&gt;</span><br><span class=\"line\"> *      &lt;windspeedMiles&gt;29&lt;/windspeedMiles&gt;</span><br><span class=\"line\"> *  &lt;/current_condition&gt;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ----------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *  After `DICTIONARY IN ARRAY` parsing:</span><br><span class=\"line\"> *   </span><br><span class=\"line\"> *   data = &#123;</span><br><span class=\"line\"> *            &quot;current_condition&quot; = [</span><br><span class=\"line\"> *                                   &#123;</span><br><span class=\"line\"> *                                     cloudcover = 16;</span><br><span class=\"line\"> *                                       humidity = 59;</span><br><span class=\"line\"> *                                     &quot;observation_time&quot; = &quot;09:09 PM&quot;;</span><br><span class=\"line\"> *                                     precipMM = &quot;0.1&quot;;</span><br><span class=\"line\"> *                                     pressure = 1010;</span><br><span class=\"line\"> *                                     &quot;temp_C&quot; = 10;</span><br><span class=\"line\"> *                                     &quot;temp_F&quot; = 49;</span><br><span class=\"line\"> *                                     visibility = 10;</span><br><span class=\"line\"> *                                     weatherCode = 113;</span><br><span class=\"line\"> *                                     weatherDesc = [</span><br><span class=\"line\"> *                                                      &#123;</span><br><span class=\"line\"> *                                                          value = Clear;</span><br><span class=\"line\"> *                                                      &#125;</span><br><span class=\"line\"> *                                     ];</span><br><span class=\"line\"> *                                     weatherIconUrl = [</span><br><span class=\"line\"> *                                                      &#123;</span><br><span class=\"line\"> *                                                          value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png&quot;;</span><br><span class=\"line\"> *                                                      &#125;</span><br><span class=\"line\"> *                                     ];</span><br><span class=\"line\"> *                                     winddir16Point = NW;</span><br><span class=\"line\"> *                                     winddirDegree = 316;</span><br><span class=\"line\"> *                                     windspeedKmph = 47;</span><br><span class=\"line\"> *                                     windspeedMiles = 29;</span><br><span class=\"line\"> *                                   &#125;</span><br><span class=\"line\"> *                                  ];</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ---------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *  Without `DICTIONARY IN ARRAY` parsing:</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *   data = &#123;</span><br><span class=\"line\"> *            &quot;current_condition&quot; = &#123;</span><br><span class=\"line\"> *                                     cloudcover = 16;</span><br><span class=\"line\"> *                                       humidity = 59;</span><br><span class=\"line\"> *                                     &quot;observation_time&quot; = &quot;09:09 PM&quot;;</span><br><span class=\"line\"> *                                     precipMM = &quot;0.1&quot;;</span><br><span class=\"line\"> *                                     pressure = 1010;</span><br><span class=\"line\"> *                                     &quot;temp_C&quot; = 10;</span><br><span class=\"line\"> *                                     &quot;temp_F&quot; = 49;</span><br><span class=\"line\"> *                                     visibility = 10;</span><br><span class=\"line\"> *                                     weatherCode = 113;</span><br><span class=\"line\"> *                                     weatherDesc = &#123;</span><br><span class=\"line\"> *                                                          value = Clear;</span><br><span class=\"line\"> *                                     &#125;</span><br><span class=\"line\"> *                                     weatherIconUrl = &#123;</span><br><span class=\"line\"> *                                                          value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png&quot;;</span><br><span class=\"line\"> *                                     &#125;;</span><br><span class=\"line\"> *                                     winddir16Point = NW;</span><br><span class=\"line\"> *                                     winddirDegree = 316;</span><br><span class=\"line\"> *                                     windspeedKmph = 47;</span><br><span class=\"line\"> *                                     windspeedMiles = 29;</span><br><span class=\"line\"> *                                   &#125;;</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * ------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">// generation mode</span><br><span class=\"line\">+ (void)xmlParseByData:(NSData *)data</span><br><span class=\"line\">         completeBlock:(void (^)(NSDictionary *))parseCompleted &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    [[[XMLParser alloc] init] startWithParseMode:ParseModeByData</span><br><span class=\"line\">                                comcompleteBlock:parseCompleted</span><br><span class=\"line\">                                      dataSource:data</span><br><span class=\"line\">                                     arrayClosed:NO];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">+ (void)xmlParseByURL:(NSURL *)url</span><br><span class=\"line\">        completeBlock:(void (^)(NSDictionary *))parseCompleted &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    [[[XMLParser alloc] init] startWithParseMode:ParseModeByURL</span><br><span class=\"line\">                                comcompleteBlock:parseCompleted</span><br><span class=\"line\">                                      dataSource:url</span><br><span class=\"line\">                                     arrayClosed:NO];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">+ (void)xmlParseWithURLByString:(NSString *)stringOfURL</span><br><span class=\"line\">                  completeBlock:(void (^)(NSDictionary *))parseCompleted &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    NSURL *url = [NSURL URLWithString:stringOfURL];</span><br><span class=\"line\"></span><br><span class=\"line\">    [XMLParser xmlParseByURL:url</span><br><span class=\"line\">               completeBlock:parseCompleted];</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">+ (void)xmlParseWithXMLParser:(NSXMLParser *)parser</span><br><span class=\"line\">                completeBlock:(void (^)(NSDictionary *))parseCompleted &#123;</span><br><span class=\"line\">    [[[XMLParser alloc] init] startWithParseMode:ParseModeByXMLParser</span><br><span class=\"line\">                                comcompleteBlock:parseCompleted</span><br><span class=\"line\">                                      dataSource:parser</span><br><span class=\"line\">                                     arrayClosed:NO];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// `dictionary in array` mode</span><br><span class=\"line\">+ (void)xmlParseByData:(NSData *)data completeBlock:(void (^)(NSDictionary *))parseCompleted dictionaryCloseInArray:(BOOL)close &#123;</span><br><span class=\"line\">    [[[XMLParser alloc] init] startWithParseMode:ParseModeByData</span><br><span class=\"line\">                                comcompleteBlock:parseCompleted</span><br><span class=\"line\">                                      dataSource:data</span><br><span class=\"line\">                                     arrayClosed:close];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">+ (void)xmlParseByURL:(NSURL *)url completeBlock:(void (^)(NSDictionary *))parseCompleted dictionaryCloseInArray:(BOOL)close &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    [[[XMLParser alloc] init] startWithParseMode:ParseModeByURL</span><br><span class=\"line\">                                comcompleteBlock:parseCompleted</span><br><span class=\"line\">                                      dataSource:url</span><br><span class=\"line\">                                     arrayClosed:close];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">+ (void)xmlParseWithURLByString:(NSString *)stringOfURL completeBlock:(void (^)(NSDictionary *))parseCompleted dictionaryCloseInArray:(BOOL)close &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    NSURL *url = [NSURL URLWithString:stringOfURL];</span><br><span class=\"line\"></span><br><span class=\"line\">    [XMLParser xmlParseByURL:url</span><br><span class=\"line\">               completeBlock:parseCompleted dictionaryCloseInArray:close];</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">+ (void)xmlParseWithXMLParser:(NSXMLParser *)parser</span><br><span class=\"line\">                completeBlock:(void (^)(NSDictionary *))parseCompleted</span><br><span class=\"line\">                   dictionaryCloseInArray:(BOOL)close &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    [[[XMLParser alloc] init] startWithParseMode:ParseModeByXMLParser</span><br><span class=\"line\">                                comcompleteBlock:parseCompleted</span><br><span class=\"line\">                                      dataSource:parser</span><br><span class=\"line\">                                     arrayClosed:close];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark - Private Method.</span><br><span class=\"line\">- (void)setURL:(NSString *)urlString</span><br><span class=\"line\">/*</span><br><span class=\"line\"> * set the URL</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    [self setUrl:[NSURL URLWithString:urlString]];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)startWithParseMode:(ParseMode)mode comcompleteBlock:(void (^)(NSDictionary *))parseCompleted dataSource:(NSObject *)source arrayClosed:(BOOL) close</span><br><span class=\"line\">/*</span><br><span class=\"line\"> * start to parsing ...</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    NSXMLParser *parse;</span><br><span class=\"line\">    _close = close;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* block */</span><br><span class=\"line\">    _parseCompleteNow = parseCompleted;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* set the parse mode */</span><br><span class=\"line\">    switch (mode) &#123;</span><br><span class=\"line\">        case ParseModeByData:</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            NSData *data = (NSData *)source;</span><br><span class=\"line\">            parse = [[NSXMLParser alloc] initWithData:data];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        case ParseModeByURL:</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            NSURL *url = (NSURL *)source;</span><br><span class=\"line\">            parse = [[NSXMLParser alloc] initWithContentsOfURL:url];</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        case ParseModeByXMLParser: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            parse = (NSXMLParser *)source;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        default:</span><br><span class=\"line\">            break;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [self startWithParseInstance:parse];</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (void)startWithParseInstance:(NSXMLParser *)parse &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    parse.delegate = self;</span><br><span class=\"line\">    [parse parse];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark - XML parse Delegate</span><br><span class=\"line\">- (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName attributes:(NSDictionary *)attributeDict &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* get the parent dictionary */</span><br><span class=\"line\">    NSMutableDictionary *parentDict = [_elementStack lastObject];</span><br><span class=\"line\">    NSObject *elementFound = [parentDict objectForKey:elementName];</span><br><span class=\"line\"></span><br><span class=\"line\">    /* if not exist */</span><br><span class=\"line\">    if(!elementFound) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        NSMutableDictionary *childDict = [NSMutableDictionary new];</span><br><span class=\"line\">        [parentDict setObject:childDict forKey:elementName];</span><br><span class=\"line\"></span><br><span class=\"line\">        [_elementStack addObject:childDict];</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; else  &#123;/* exist this key, means this is array, not dictionary */</span><br><span class=\"line\"></span><br><span class=\"line\">        /* start from array */</span><br><span class=\"line\">        if( [elementFound isKindOfClass:[NSMutableDictionary class]]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            NSMutableArray *childs = [NSMutableArray new];</span><br><span class=\"line\">            [childs addObject:elementFound];</span><br><span class=\"line\"></span><br><span class=\"line\">            [parentDict setObject:childs forKey:elementName];</span><br><span class=\"line\"></span><br><span class=\"line\">            [childs addObject:[NSMutableDictionary new]];</span><br><span class=\"line\">            [_elementStack addObject:[childs lastObject]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        else &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            /* continue from array */</span><br><span class=\"line\">            NSMutableDictionary *childDict = [NSMutableDictionary new];</span><br><span class=\"line\">            NSMutableArray *items = (NSMutableArray *)elementFound;</span><br><span class=\"line\"></span><br><span class=\"line\">            [items addObject:childDict];</span><br><span class=\"line\"></span><br><span class=\"line\">            [_elementStack addObject:childDict];</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName namespaceURI:(NSString *)namespaceURI qualifiedName:(NSString *)qName&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* has found the text */</span><br><span class=\"line\">    if( [self.textGet length] &gt; 0) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        [_elementStack removeLastObject];</span><br><span class=\"line\">        NSMutableDictionary *item = [_elementStack lastObject];</span><br><span class=\"line\"></span><br><span class=\"line\">        [item setObject:_textGet forKey:elementName];</span><br><span class=\"line\">        _textGet = [NSMutableString new];</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        [_elementStack removeLastObject];</span><br><span class=\"line\"></span><br><span class=\"line\">        if (_close) &#123; // when open the &lt;close in Array&gt; mode</span><br><span class=\"line\"></span><br><span class=\"line\">            id value = [[_elementStack lastObject] valueForKey:elementName];</span><br><span class=\"line\">            if ([value isKindOfClass:[NSDictionary class]]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                NSMutableArray *arrayClose = [NSMutableArray array];</span><br><span class=\"line\">                [arrayClose addObject:value];</span><br><span class=\"line\"></span><br><span class=\"line\">                [[_elementStack lastObject] setValue:arrayClose forKey:elementName];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    if([string hasPrefix:@&quot;\\n&quot;])</span><br><span class=\"line\">        return ;</span><br><span class=\"line\"></span><br><span class=\"line\">    [_textGet appendString:string];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* something error */</span><br><span class=\"line\">    NSLog(@&quot;%@&quot;, parseError);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (void)parserDidStartDocument:(NSXMLParser *)parser</span><br><span class=\"line\">/* start to parse */</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    _elementStack = [NSMutableArray new];</span><br><span class=\"line\">    _textGet = [NSMutableString new];</span><br><span class=\"line\"></span><br><span class=\"line\">    [_elementStack addObject:[NSMutableDictionary new]];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (void)parserDidEndDocument:(NSXMLParser *)parser &#123;</span><br><span class=\"line\">    /* parse done */</span><br><span class=\"line\">    NSLog(@&quot;fater parse:\\n %@&quot;, [_elementStack lastObject]);</span><br><span class=\"line\"></span><br><span class=\"line\">    NSDictionary *compeltedData = [_elementStack lastObject];</span><br><span class=\"line\"></span><br><span class=\"line\">    /* second dealing */</span><br><span class=\"line\">    compeltedData = [self settingArrayClosed:compeltedData];</span><br><span class=\"line\"></span><br><span class=\"line\">    self.parseCompleteNow(compeltedData);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark - Class Dead</span><br><span class=\"line\">- (void)dealloc &#123;</span><br><span class=\"line\">    NSLog(@&quot;xml class dead&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#pragma mark - setting array closed</span><br><span class=\"line\">- (NSDictionary *)settingArrayClosed:(NSDictionary *)result &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /* first, find the main key */</span><br><span class=\"line\">    NSString *key = [result allKeys][0];</span><br><span class=\"line\"></span><br><span class=\"line\">    /* second, start to close */</span><br><span class=\"line\">    NSDictionary *start = @&#123; key : [result valueForKey:key][0] &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    return start;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n<h2 id=\"预期的结果\"><a href=\"#预期的结果\" class=\"headerlink\" title=\"预期的结果\"></a>预期的结果</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">data =     (</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">            &quot;current_condition&quot; =             (</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    cloudcover = 16;</span><br><span class=\"line\">                    humidity = 59;</span><br><span class=\"line\">                    &quot;observation_time&quot; = &quot;09:09 PM&quot;;</span><br><span class=\"line\">                    precipMM = &quot;0.1&quot;;</span><br><span class=\"line\">                    pressure = 1010;</span><br><span class=\"line\">                    &quot;temp_C&quot; = 10;</span><br><span class=\"line\">                    &quot;temp_F&quot; = 49;</span><br><span class=\"line\">                    visibility = 10;</span><br><span class=\"line\">                    weatherCode = 113;</span><br><span class=\"line\">                    weatherDesc =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = Clear;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    weatherIconUrl =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    winddir16Point = NW;</span><br><span class=\"line\">                    winddirDegree = 316;</span><br><span class=\"line\">                    windspeedKmph = 47;</span><br><span class=\"line\">                    windspeedMiles = 29;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            );</span><br><span class=\"line\">            request =             (</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    query = &quot;Lat 32.35 and Lon 141.43&quot;;</span><br><span class=\"line\">                    type = LatLon;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">            );</span><br><span class=\"line\">            weather =             (</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    date = &quot;2013-01-15&quot;;</span><br><span class=\"line\">                    precipMM = &quot;1.8&quot;;</span><br><span class=\"line\">                    tempMaxC = 12;</span><br><span class=\"line\">                    tempMaxF = 53;</span><br><span class=\"line\">                    tempMinC = 10;</span><br><span class=\"line\">                    tempMinF = 50;</span><br><span class=\"line\">                    weatherCode = 119;</span><br><span class=\"line\">                    weatherDesc =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = Cloudy;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    weatherIconUrl =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0003_white_cloud.png&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    winddir16Point = NNW;</span><br><span class=\"line\">                    winddirDegree = 348;</span><br><span class=\"line\">                    winddirection = NNW;</span><br><span class=\"line\">                    windspeedKmph = 66;</span><br><span class=\"line\">                    windspeedMiles = 41;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    date = &quot;2013-01-16&quot;;</span><br><span class=\"line\">                    precipMM = &quot;0.6&quot;;</span><br><span class=\"line\">                    tempMaxC = 13;</span><br><span class=\"line\">                    tempMaxF = 56;</span><br><span class=\"line\">                    tempMinC = 11;</span><br><span class=\"line\">                    tempMinF = 51;</span><br><span class=\"line\">                    weatherCode = 113;</span><br><span class=\"line\">                    weatherDesc =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = Sunny;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    weatherIconUrl =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0001_sunny.png&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    winddir16Point = WNW;</span><br><span class=\"line\">                    winddirDegree = 284;</span><br><span class=\"line\">                    winddirection = WNW;</span><br><span class=\"line\">                    windspeedKmph = 33;</span><br><span class=\"line\">                    windspeedMiles = 21;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    date = &quot;2013-01-17&quot;;</span><br><span class=\"line\">                    precipMM = &quot;0.5&quot;;</span><br><span class=\"line\">                    tempMaxC = 14;</span><br><span class=\"line\">                    tempMaxF = 56;</span><br><span class=\"line\">                    tempMinC = 7;</span><br><span class=\"line\">                    tempMinF = 44;</span><br><span class=\"line\">                    weatherCode = 119;</span><br><span class=\"line\">                    weatherDesc =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = Cloudy;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    weatherIconUrl =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0003_white_cloud.png&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    winddir16Point = WNW;</span><br><span class=\"line\">                    winddirDegree = 293;</span><br><span class=\"line\">                    winddirection = WNW;</span><br><span class=\"line\">                    windspeedKmph = 41;</span><br><span class=\"line\">                    windspeedMiles = 25;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    date = &quot;2013-01-18&quot;;</span><br><span class=\"line\">                    precipMM = &quot;1.9&quot;;</span><br><span class=\"line\">                    tempMaxC = 11;</span><br><span class=\"line\">                    tempMaxF = 51;</span><br><span class=\"line\">                    tempMinC = 7;</span><br><span class=\"line\">                    tempMinF = 44;</span><br><span class=\"line\">                    weatherCode = 353;</span><br><span class=\"line\">                    weatherDesc =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;Light rain shower&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    weatherIconUrl =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0009_light_rain_showers.png&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    winddir16Point = NW;</span><br><span class=\"line\">                    winddirDegree = 312;</span><br><span class=\"line\">                    winddirection = NW;</span><br><span class=\"line\">                    windspeedKmph = 66;</span><br><span class=\"line\">                    windspeedMiles = 41;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                    date = &quot;2013-01-19&quot;;</span><br><span class=\"line\">                    precipMM = &quot;1.1&quot;;</span><br><span class=\"line\">                    tempMaxC = 7;</span><br><span class=\"line\">                    tempMaxF = 45;</span><br><span class=\"line\">                    tempMinC = 6;</span><br><span class=\"line\">                    tempMinF = 43;</span><br><span class=\"line\">                    weatherCode = 176;</span><br><span class=\"line\">                    weatherDesc =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;Patchy rain nearby&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    weatherIconUrl =                     (</span><br><span class=\"line\">                                                &#123;</span><br><span class=\"line\">                            value = &quot;http://www.worldweatheronline.com/images/wsymbols01_png_64/wsymbol_0009_light_rain_showers.png&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                    winddir16Point = NW;</span><br><span class=\"line\">                    winddirDegree = 324;</span><br><span class=\"line\">                    winddirection = NW;</span><br><span class=\"line\">                    windspeedKmph = 52;</span><br><span class=\"line\">                    windspeedMiles = 32;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n"},{"title":"first_Blog","date":"2016-02-21T03:12:02.000Z","_content":"\n# Core Data For IOS - 笔记\n> **如果不能把一件事用简单的话说清楚， 那就表明你理解得还不够透彻。----- 阿尔伯特＊爱因斯坦**\n\n## Core Data:\n\n- Core Data 是一个框架， 是的开发者可以把数据当成对象来操作，而不必在乎数据在磁盘中的存储方式。\n\n## 概念:\n\n- 托管对象(managed object): NSManagedObject 类或者子类。\n  - Core Data 提供的数据对象\n- 持久化存储区(persistent store)\n  - 磁盘内容区域\n- 托管对象模型\n  - 把数据从托管对象映射到持久化存储区的作用 \n- 托管对象上下文(managed object context)\n  - 所有托管对象存放的地方\n  - 托管对象上下文位于高速RAM中，有了托管对象上下文之后，对于原来需要读取磁盘才能获取的数据，现在只需访问这个上下文久可以了\n  - 内存和磁盘的桥梁\n  \n> 托管对象持有一份对持久化存储区里相关数据的拷贝， 如果数据库作为持久化存储区，那么托管对象就是可能对应于数据库里某张数据表的一行。\n\n### 持久化存储协调器(Persistent store coordinator)\n\n- 保存一份持久化存储区\n- 选用SQLite数据库作为持久化存储区\n- 可以有多个持久化存储区\n- 创建持久化存储区的类:`NSPersistentStore`\n- 创建持久化存储协调器的类:`NSPersistentStoreCoordinator`\n\n### 托管对象模型(managed object model)\n\n- NSManagedObjectModel\n- 数据结构的描述或者图示\n- 类似于类，而不是对象实例\n- 托管对象是托管对象模型的实例\n\n### 托管对象上下文\n\n- 包含多个托管对象\n\n### 总结\n\n- `NSManagedObject` (托管对象)存放在 `NSManagedObjectContext` (托管对象上下文)\n- `NSManagedObjectModel` (托管对象模型) 作为托管对象实例的模版\n- `NSPersistentStore` (持久化存储区) 存放在 `NSPersistentStoreCoordinator` (持久化存储协调器) 中\n- `NSManagedObjectContext` 和 `NSPersistentStoreCoordinator` 有联系\n- 所有对象模型绑定在持久化存储协调器\n- 可以通过模型的标示去获得实例或者直接在托管对象上下文操作数据\n","source":"_posts/first-Blog.md","raw":"title: first_Blog\ndate: 2016-02-21 11:12:02\ntags:\n---\n\n# Core Data For IOS - 笔记\n> **如果不能把一件事用简单的话说清楚， 那就表明你理解得还不够透彻。----- 阿尔伯特＊爱因斯坦**\n\n## Core Data:\n\n- Core Data 是一个框架， 是的开发者可以把数据当成对象来操作，而不必在乎数据在磁盘中的存储方式。\n\n## 概念:\n\n- 托管对象(managed object): NSManagedObject 类或者子类。\n  - Core Data 提供的数据对象\n- 持久化存储区(persistent store)\n  - 磁盘内容区域\n- 托管对象模型\n  - 把数据从托管对象映射到持久化存储区的作用 \n- 托管对象上下文(managed object context)\n  - 所有托管对象存放的地方\n  - 托管对象上下文位于高速RAM中，有了托管对象上下文之后，对于原来需要读取磁盘才能获取的数据，现在只需访问这个上下文久可以了\n  - 内存和磁盘的桥梁\n  \n> 托管对象持有一份对持久化存储区里相关数据的拷贝， 如果数据库作为持久化存储区，那么托管对象就是可能对应于数据库里某张数据表的一行。\n\n### 持久化存储协调器(Persistent store coordinator)\n\n- 保存一份持久化存储区\n- 选用SQLite数据库作为持久化存储区\n- 可以有多个持久化存储区\n- 创建持久化存储区的类:`NSPersistentStore`\n- 创建持久化存储协调器的类:`NSPersistentStoreCoordinator`\n\n### 托管对象模型(managed object model)\n\n- NSManagedObjectModel\n- 数据结构的描述或者图示\n- 类似于类，而不是对象实例\n- 托管对象是托管对象模型的实例\n\n### 托管对象上下文\n\n- 包含多个托管对象\n\n### 总结\n\n- `NSManagedObject` (托管对象)存放在 `NSManagedObjectContext` (托管对象上下文)\n- `NSManagedObjectModel` (托管对象模型) 作为托管对象实例的模版\n- `NSPersistentStore` (持久化存储区) 存放在 `NSPersistentStoreCoordinator` (持久化存储协调器) 中\n- `NSManagedObjectContext` 和 `NSPersistentStoreCoordinator` 有联系\n- 所有对象模型绑定在持久化存储协调器\n- 可以通过模型的标示去获得实例或者直接在托管对象上下文操作数据\n","slug":"first-Blog","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzel007jpe3qbxiwof2d","content":"<h1 id=\"Core-Data-For-IOS-笔记\"><a href=\"#Core-Data-For-IOS-笔记\" class=\"headerlink\" title=\"Core Data For IOS - 笔记\"></a>Core Data For IOS - 笔记</h1><blockquote>\n<p><strong>如果不能把一件事用简单的话说清楚， 那就表明你理解得还不够透彻。—– 阿尔伯特＊爱因斯坦</strong></p>\n</blockquote>\n<h2 id=\"Core-Data\"><a href=\"#Core-Data\" class=\"headerlink\" title=\"Core Data:\"></a>Core Data:</h2><ul>\n<li>Core Data 是一个框架， 是的开发者可以把数据当成对象来操作，而不必在乎数据在磁盘中的存储方式。</li>\n</ul>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念:\"></a>概念:</h2><ul>\n<li>托管对象(managed object): NSManagedObject 类或者子类。<ul>\n<li>Core Data 提供的数据对象</li>\n</ul>\n</li>\n<li>持久化存储区(persistent store)<ul>\n<li>磁盘内容区域</li>\n</ul>\n</li>\n<li>托管对象模型<ul>\n<li>把数据从托管对象映射到持久化存储区的作用 </li>\n</ul>\n</li>\n<li>托管对象上下文(managed object context)<ul>\n<li>所有托管对象存放的地方</li>\n<li>托管对象上下文位于高速RAM中，有了托管对象上下文之后，对于原来需要读取磁盘才能获取的数据，现在只需访问这个上下文久可以了</li>\n<li>内存和磁盘的桥梁</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>托管对象持有一份对持久化存储区里相关数据的拷贝， 如果数据库作为持久化存储区，那么托管对象就是可能对应于数据库里某张数据表的一行。</p>\n</blockquote>\n<h3 id=\"持久化存储协调器-Persistent-store-coordinator\"><a href=\"#持久化存储协调器-Persistent-store-coordinator\" class=\"headerlink\" title=\"持久化存储协调器(Persistent store coordinator)\"></a>持久化存储协调器(Persistent store coordinator)</h3><ul>\n<li>保存一份持久化存储区</li>\n<li>选用SQLite数据库作为持久化存储区</li>\n<li>可以有多个持久化存储区</li>\n<li>创建持久化存储区的类:<code>NSPersistentStore</code></li>\n<li>创建持久化存储协调器的类:<code>NSPersistentStoreCoordinator</code></li>\n</ul>\n<h3 id=\"托管对象模型-managed-object-model\"><a href=\"#托管对象模型-managed-object-model\" class=\"headerlink\" title=\"托管对象模型(managed object model)\"></a>托管对象模型(managed object model)</h3><ul>\n<li>NSManagedObjectModel</li>\n<li>数据结构的描述或者图示</li>\n<li>类似于类，而不是对象实例</li>\n<li>托管对象是托管对象模型的实例</li>\n</ul>\n<h3 id=\"托管对象上下文\"><a href=\"#托管对象上下文\" class=\"headerlink\" title=\"托管对象上下文\"></a>托管对象上下文</h3><ul>\n<li>包含多个托管对象</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li><code>NSManagedObject</code> (托管对象)存放在 <code>NSManagedObjectContext</code> (托管对象上下文)</li>\n<li><code>NSManagedObjectModel</code> (托管对象模型) 作为托管对象实例的模版</li>\n<li><code>NSPersistentStore</code> (持久化存储区) 存放在 <code>NSPersistentStoreCoordinator</code> (持久化存储协调器) 中</li>\n<li><code>NSManagedObjectContext</code> 和 <code>NSPersistentStoreCoordinator</code> 有联系</li>\n<li>所有对象模型绑定在持久化存储协调器</li>\n<li>可以通过模型的标示去获得实例或者直接在托管对象上下文操作数据</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"Core-Data-For-IOS-笔记\"><a href=\"#Core-Data-For-IOS-笔记\" class=\"headerlink\" title=\"Core Data For IOS - 笔记\"></a>Core Data For IOS - 笔记</h1><blockquote>\n<p><strong>如果不能把一件事用简单的话说清楚， 那就表明你理解得还不够透彻。—– 阿尔伯特＊爱因斯坦</strong></p>\n</blockquote>\n<h2 id=\"Core-Data\"><a href=\"#Core-Data\" class=\"headerlink\" title=\"Core Data:\"></a>Core Data:</h2><ul>\n<li>Core Data 是一个框架， 是的开发者可以把数据当成对象来操作，而不必在乎数据在磁盘中的存储方式。</li>\n</ul>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念:\"></a>概念:</h2><ul>\n<li>托管对象(managed object): NSManagedObject 类或者子类。<ul>\n<li>Core Data 提供的数据对象</li>\n</ul>\n</li>\n<li>持久化存储区(persistent store)<ul>\n<li>磁盘内容区域</li>\n</ul>\n</li>\n<li>托管对象模型<ul>\n<li>把数据从托管对象映射到持久化存储区的作用 </li>\n</ul>\n</li>\n<li>托管对象上下文(managed object context)<ul>\n<li>所有托管对象存放的地方</li>\n<li>托管对象上下文位于高速RAM中，有了托管对象上下文之后，对于原来需要读取磁盘才能获取的数据，现在只需访问这个上下文久可以了</li>\n<li>内存和磁盘的桥梁</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>托管对象持有一份对持久化存储区里相关数据的拷贝， 如果数据库作为持久化存储区，那么托管对象就是可能对应于数据库里某张数据表的一行。</p>\n</blockquote>\n<h3 id=\"持久化存储协调器-Persistent-store-coordinator\"><a href=\"#持久化存储协调器-Persistent-store-coordinator\" class=\"headerlink\" title=\"持久化存储协调器(Persistent store coordinator)\"></a>持久化存储协调器(Persistent store coordinator)</h3><ul>\n<li>保存一份持久化存储区</li>\n<li>选用SQLite数据库作为持久化存储区</li>\n<li>可以有多个持久化存储区</li>\n<li>创建持久化存储区的类:<code>NSPersistentStore</code></li>\n<li>创建持久化存储协调器的类:<code>NSPersistentStoreCoordinator</code></li>\n</ul>\n<h3 id=\"托管对象模型-managed-object-model\"><a href=\"#托管对象模型-managed-object-model\" class=\"headerlink\" title=\"托管对象模型(managed object model)\"></a>托管对象模型(managed object model)</h3><ul>\n<li>NSManagedObjectModel</li>\n<li>数据结构的描述或者图示</li>\n<li>类似于类，而不是对象实例</li>\n<li>托管对象是托管对象模型的实例</li>\n</ul>\n<h3 id=\"托管对象上下文\"><a href=\"#托管对象上下文\" class=\"headerlink\" title=\"托管对象上下文\"></a>托管对象上下文</h3><ul>\n<li>包含多个托管对象</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li><code>NSManagedObject</code> (托管对象)存放在 <code>NSManagedObjectContext</code> (托管对象上下文)</li>\n<li><code>NSManagedObjectModel</code> (托管对象模型) 作为托管对象实例的模版</li>\n<li><code>NSPersistentStore</code> (持久化存储区) 存放在 <code>NSPersistentStoreCoordinator</code> (持久化存储协调器) 中</li>\n<li><code>NSManagedObjectContext</code> 和 <code>NSPersistentStoreCoordinator</code> 有联系</li>\n<li>所有对象模型绑定在持久化存储协调器</li>\n<li>可以通过模型的标示去获得实例或者直接在托管对象上下文操作数据</li>\n</ul>\n"},{"title":"git从远程库同步到本地仓库","date":"2016-02-28T17:38:04.000Z","_content":"\n# 目录\n1. [远程仓库发生改变，本地仓库没有改变](#d1)\n2. [远程仓库没有改变，本地仓库发生改变](#d2)\n3. [远程仓库，本地仓库都发生改变](#d3)\n\n# 有三种方式的情况下，如何做到没有Bug的合并代码。。。\n---\n\n\n## <span id=\"d1\">远程仓库发生改变，本地仓库没有改变</span>\n\n- 首先，查看远程仓库 `git remote -v`\n```{bash}\n$ git remote -v\norigin\tgit@github.com:{User}/Understanding_Unix-Linux_Programming.git (fetch)\norigin\tgit@github.com:{User}/Understanding_Unix-Linux_Programming.git (push)\n\n```\n\n- 把远程库更新到本地 `git fetch origin master`\n```{bash}\n$ git fetch origin master\nWarning: Permanently added the RSA host key for IP address '{IP address such as: 192.168.1.1 }' to the list of known hosts.\nFrom github.com:{User}/Understanding_Unix-Linux_Programming\n * branch            master     -> FETCH_HEAD\n\n```\n\n- 比较远程更新和本地版本库的差异 `git log master.. origin/master`\n```{bash}\n$ git log master.. origin/master\ncommit ce39f8b3eeee898a2a038444f897f2aef3673493\nAuthor: {User} <794870409@qq.com>\nDate:   Fri Feb 26 14:14:39 2016 +0800\n\n    {The context origin added ... }\n\n```\n\n\n- 合并远程库 `git merge origin/master`\n  + 有差异\n```{bash}\n$ git merge origin/master\nUpdating eb32b20..ce39f8b\nFast-forward\n README.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n```\n  + 无差异\n```{bash}\n$ git merge origin/master\nAlready up-to-date\n\n```\n---\n\n## <span id=\"d2\">远程仓库没有改变，本地仓库发生改变</span>\n\n**命令推荐**\n```{bash}\ngit status // 查看版本库的状态\ngit add .|[file you want add like README.md] // 添加修改的文件进入版本库\ngit commit -m \"the content of your modify\" // 提交版本库\ngit push -u origin master // 上传到远程版本库\n```\n\n- 首先你的文件出现了修改 `git status`\n```{bash}\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\n```\n你的文件被修改后就会出现这样的显示\n\n\n-  添加文件 `git add .|[或者某个文件]|like: README.md`\n```{bash}\n$ git add README.md\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n\tmodified:   README.md\n\n\n\n```\n文件添加后，就会出现这种\n\n\n- 提交文件 `git commit -m \"content\"`\n```{bash}\n$ git commit -m \"update content\"\n[master 7456161] update content\n Committer: {User} <wuyingqiang@wuyingqiangs-MacBook-Pro.local>\nYour name and email address were configured automatically based\non your username and hostname. Please check that they are accurate.\nYou can suppress this message by setting them explicitly. Run the\nfollowing command and follow the instructions in your editor to edit\nyour configuration file:\n\n    git config --global --edit\n\nAfter doing this, you may fix the identity used for this commit with:\n\n    git commit --amend --reset-author\n\n 1 file changed, 8 insertions(+), 3 deletions(-)\n\n```\n文件提交到你的版本库，这样本地版本就更新了\n\n- 和远程库进行同步 `git push -u origin master`\n```{bash}\n$ git push -u origin master\nCounting objects: 3, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 417 bytes | 0 bytes/s, done.\nTotal 3 (delta 1), reused 0 (delta 0)\nTo git@github.com:scofieldWyq/Understanding_Unix-Linux_Programming.git\n   ce39f8b..7456161  master -> master\nBranch master set up to track remote branch master from origin.\n\n```\n这样我们的版本库同步也就好了。\n\n---\n\n## <span id=\"d3\">远程仓库，本地仓库都发生改变</span>\n  以后再说咯。。。\n\n---\n\n# 总结\n\n- 掌握 `git` 远程和本地的同步很重要的。\n- 还有解决同步产生的问题也是锻炼自己的一个机会。\n","source":"_posts/git从远程库同步到本地仓库.md","raw":"title: git从远程库同步到本地仓库\ndate: 2016-02-29 01:38:04\ntags:\n\n- git\n- 远程仓库\n- merge\n\n---\n\n# 目录\n1. [远程仓库发生改变，本地仓库没有改变](#d1)\n2. [远程仓库没有改变，本地仓库发生改变](#d2)\n3. [远程仓库，本地仓库都发生改变](#d3)\n\n# 有三种方式的情况下，如何做到没有Bug的合并代码。。。\n---\n\n\n## <span id=\"d1\">远程仓库发生改变，本地仓库没有改变</span>\n\n- 首先，查看远程仓库 `git remote -v`\n```{bash}\n$ git remote -v\norigin\tgit@github.com:{User}/Understanding_Unix-Linux_Programming.git (fetch)\norigin\tgit@github.com:{User}/Understanding_Unix-Linux_Programming.git (push)\n\n```\n\n- 把远程库更新到本地 `git fetch origin master`\n```{bash}\n$ git fetch origin master\nWarning: Permanently added the RSA host key for IP address '{IP address such as: 192.168.1.1 }' to the list of known hosts.\nFrom github.com:{User}/Understanding_Unix-Linux_Programming\n * branch            master     -> FETCH_HEAD\n\n```\n\n- 比较远程更新和本地版本库的差异 `git log master.. origin/master`\n```{bash}\n$ git log master.. origin/master\ncommit ce39f8b3eeee898a2a038444f897f2aef3673493\nAuthor: {User} <794870409@qq.com>\nDate:   Fri Feb 26 14:14:39 2016 +0800\n\n    {The context origin added ... }\n\n```\n\n\n- 合并远程库 `git merge origin/master`\n  + 有差异\n```{bash}\n$ git merge origin/master\nUpdating eb32b20..ce39f8b\nFast-forward\n README.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n```\n  + 无差异\n```{bash}\n$ git merge origin/master\nAlready up-to-date\n\n```\n---\n\n## <span id=\"d2\">远程仓库没有改变，本地仓库发生改变</span>\n\n**命令推荐**\n```{bash}\ngit status // 查看版本库的状态\ngit add .|[file you want add like README.md] // 添加修改的文件进入版本库\ngit commit -m \"the content of your modify\" // 提交版本库\ngit push -u origin master // 上传到远程版本库\n```\n\n- 首先你的文件出现了修改 `git status`\n```{bash}\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\n```\n你的文件被修改后就会出现这样的显示\n\n\n-  添加文件 `git add .|[或者某个文件]|like: README.md`\n```{bash}\n$ git add README.md\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n\tmodified:   README.md\n\n\n\n```\n文件添加后，就会出现这种\n\n\n- 提交文件 `git commit -m \"content\"`\n```{bash}\n$ git commit -m \"update content\"\n[master 7456161] update content\n Committer: {User} <wuyingqiang@wuyingqiangs-MacBook-Pro.local>\nYour name and email address were configured automatically based\non your username and hostname. Please check that they are accurate.\nYou can suppress this message by setting them explicitly. Run the\nfollowing command and follow the instructions in your editor to edit\nyour configuration file:\n\n    git config --global --edit\n\nAfter doing this, you may fix the identity used for this commit with:\n\n    git commit --amend --reset-author\n\n 1 file changed, 8 insertions(+), 3 deletions(-)\n\n```\n文件提交到你的版本库，这样本地版本就更新了\n\n- 和远程库进行同步 `git push -u origin master`\n```{bash}\n$ git push -u origin master\nCounting objects: 3, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 417 bytes | 0 bytes/s, done.\nTotal 3 (delta 1), reused 0 (delta 0)\nTo git@github.com:scofieldWyq/Understanding_Unix-Linux_Programming.git\n   ce39f8b..7456161  master -> master\nBranch master set up to track remote branch master from origin.\n\n```\n这样我们的版本库同步也就好了。\n\n---\n\n## <span id=\"d3\">远程仓库，本地仓库都发生改变</span>\n  以后再说咯。。。\n\n---\n\n# 总结\n\n- 掌握 `git` 远程和本地的同步很重要的。\n- 还有解决同步产生的问题也是锻炼自己的一个机会。\n","slug":"git从远程库同步到本地仓库","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzem007lpe3q0zwvuiqo","content":"<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><ol>\n<li><a href=\"#d1\">远程仓库发生改变，本地仓库没有改变</a></li>\n<li><a href=\"#d2\">远程仓库没有改变，本地仓库发生改变</a></li>\n<li><a href=\"#d3\">远程仓库，本地仓库都发生改变</a></li>\n</ol>\n<h1 id=\"有三种方式的情况下，如何做到没有Bug的合并代码。。。\"><a href=\"#有三种方式的情况下，如何做到没有Bug的合并代码。。。\" class=\"headerlink\" title=\"有三种方式的情况下，如何做到没有Bug的合并代码。。。\"></a>有三种方式的情况下，如何做到没有Bug的合并代码。。。</h1><hr>\n<h2 id=\"远程仓库发生改变，本地仓库没有改变\"><a href=\"#远程仓库发生改变，本地仓库没有改变\" class=\"headerlink\" title=\"远程仓库发生改变，本地仓库没有改变\"></a><span id=\"d1\">远程仓库发生改变，本地仓库没有改变</span></h2><ul>\n<li><p>首先，查看远程仓库 <code>git remote -v</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin\tgit@github.com:&#123;User&#125;/Understanding_Unix-Linux_Programming.git (fetch)</span><br><span class=\"line\">origin\tgit@github.com:&#123;User&#125;/Understanding_Unix-Linux_Programming.git (push)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把远程库更新到本地 <code>git fetch origin master</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git fetch origin master</span><br><span class=\"line\">Warning: Permanently added the RSA host key for IP address &apos;&#123;IP address such as: 192.168.1.1 &#125;&apos; to the list of known hosts.</span><br><span class=\"line\">From github.com:&#123;User&#125;/Understanding_Unix-Linux_Programming</span><br><span class=\"line\"> * branch            master     -&gt; FETCH_HEAD</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>比较远程更新和本地版本库的差异 <code>git log master.. origin/master</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log master.. origin/master</span><br><span class=\"line\">commit ce39f8b3eeee898a2a038444f897f2aef3673493</span><br><span class=\"line\">Author: &#123;User&#125; &lt;794870409@qq.com&gt;</span><br><span class=\"line\">Date:   Fri Feb 26 14:14:39 2016 +0800</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;The context origin added ... &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>合并远程库 <code>git merge origin/master</code></p>\n<ul>\n<li><p>有差异</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge origin/master</span><br><span class=\"line\">Updating eb32b20..ce39f8b</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> README.md | 2 +-</span><br><span class=\"line\"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>无差异</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge origin/master</span><br><span class=\"line\">Already up-to-date</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"远程仓库没有改变，本地仓库发生改变\"><a href=\"#远程仓库没有改变，本地仓库发生改变\" class=\"headerlink\" title=\"远程仓库没有改变，本地仓库发生改变\"></a><span id=\"d2\">远程仓库没有改变，本地仓库发生改变</span></h2><p><strong>命令推荐</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status // 查看版本库的状态</span><br><span class=\"line\">git add .|[file you want add like README.md] // 添加修改的文件进入版本库</span><br><span class=\"line\">git commit -m &quot;the content of your modify&quot; // 提交版本库</span><br><span class=\"line\">git push -u origin master // 上传到远程版本库</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>首先你的文件出现了修改 <code>git status</code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is up-to-date with &apos;origin/master&apos;.</span><br><span class=\"line\">Changes not staged for commit:</span><br><span class=\"line\">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class=\"line\">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class=\"line\"></span><br><span class=\"line\">\tmodified:   README.md</span><br><span class=\"line\"></span><br><span class=\"line\">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>你的文件被修改后就会出现这样的显示</p>\n<ul>\n<li>添加文件 <code>git add .|[或者某个文件]|like: README.md</code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add README.md</span><br><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is up-to-date with &apos;origin/master&apos;.</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">\tmodified:   README.md</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>文件添加后，就会出现这种</p>\n<ul>\n<li>提交文件 <code>git commit -m &quot;content&quot;</code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -m &quot;update content&quot;</span><br><span class=\"line\">[master 7456161] update content</span><br><span class=\"line\"> Committer: &#123;User&#125; &lt;wuyingqiang@wuyingqiangs-MacBook-Pro.local&gt;</span><br><span class=\"line\">Your name and email address were configured automatically based</span><br><span class=\"line\">on your username and hostname. Please check that they are accurate.</span><br><span class=\"line\">You can suppress this message by setting them explicitly. Run the</span><br><span class=\"line\">following command and follow the instructions in your editor to edit</span><br><span class=\"line\">your configuration file:</span><br><span class=\"line\"></span><br><span class=\"line\">    git config --global --edit</span><br><span class=\"line\"></span><br><span class=\"line\">After doing this, you may fix the identity used for this commit with:</span><br><span class=\"line\"></span><br><span class=\"line\">    git commit --amend --reset-author</span><br><span class=\"line\"></span><br><span class=\"line\"> 1 file changed, 8 insertions(+), 3 deletions(-)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>文件提交到你的版本库，这样本地版本就更新了</p>\n<ul>\n<li>和远程库进行同步 <code>git push -u origin master</code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push -u origin master</span><br><span class=\"line\">Counting objects: 3, done.</span><br><span class=\"line\">Delta compression using up to 8 threads.</span><br><span class=\"line\">Compressing objects: 100% (2/2), done.</span><br><span class=\"line\">Writing objects: 100% (3/3), 417 bytes | 0 bytes/s, done.</span><br><span class=\"line\">Total 3 (delta 1), reused 0 (delta 0)</span><br><span class=\"line\">To git@github.com:scofieldWyq/Understanding_Unix-Linux_Programming.git</span><br><span class=\"line\">   ce39f8b..7456161  master -&gt; master</span><br><span class=\"line\">Branch master set up to track remote branch master from origin.</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这样我们的版本库同步也就好了。</p>\n<hr>\n<h2 id=\"远程仓库，本地仓库都发生改变\"><a href=\"#远程仓库，本地仓库都发生改变\" class=\"headerlink\" title=\"远程仓库，本地仓库都发生改变\"></a><span id=\"d3\">远程仓库，本地仓库都发生改变</span></h2><p>  以后再说咯。。。</p>\n<hr>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><ul>\n<li>掌握 <code>git</code> 远程和本地的同步很重要的。</li>\n<li>还有解决同步产生的问题也是锻炼自己的一个机会。</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><ol>\n<li><a href=\"#d1\">远程仓库发生改变，本地仓库没有改变</a></li>\n<li><a href=\"#d2\">远程仓库没有改变，本地仓库发生改变</a></li>\n<li><a href=\"#d3\">远程仓库，本地仓库都发生改变</a></li>\n</ol>\n<h1 id=\"有三种方式的情况下，如何做到没有Bug的合并代码。。。\"><a href=\"#有三种方式的情况下，如何做到没有Bug的合并代码。。。\" class=\"headerlink\" title=\"有三种方式的情况下，如何做到没有Bug的合并代码。。。\"></a>有三种方式的情况下，如何做到没有Bug的合并代码。。。</h1><hr>\n<h2 id=\"远程仓库发生改变，本地仓库没有改变\"><a href=\"#远程仓库发生改变，本地仓库没有改变\" class=\"headerlink\" title=\"远程仓库发生改变，本地仓库没有改变\"></a><span id=\"d1\">远程仓库发生改变，本地仓库没有改变</span></h2><ul>\n<li><p>首先，查看远程仓库 <code>git remote -v</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin\tgit@github.com:&#123;User&#125;/Understanding_Unix-Linux_Programming.git (fetch)</span><br><span class=\"line\">origin\tgit@github.com:&#123;User&#125;/Understanding_Unix-Linux_Programming.git (push)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把远程库更新到本地 <code>git fetch origin master</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git fetch origin master</span><br><span class=\"line\">Warning: Permanently added the RSA host key for IP address &apos;&#123;IP address such as: 192.168.1.1 &#125;&apos; to the list of known hosts.</span><br><span class=\"line\">From github.com:&#123;User&#125;/Understanding_Unix-Linux_Programming</span><br><span class=\"line\"> * branch            master     -&gt; FETCH_HEAD</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>比较远程更新和本地版本库的差异 <code>git log master.. origin/master</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log master.. origin/master</span><br><span class=\"line\">commit ce39f8b3eeee898a2a038444f897f2aef3673493</span><br><span class=\"line\">Author: &#123;User&#125; &lt;794870409@qq.com&gt;</span><br><span class=\"line\">Date:   Fri Feb 26 14:14:39 2016 +0800</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;The context origin added ... &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>合并远程库 <code>git merge origin/master</code></p>\n<ul>\n<li><p>有差异</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge origin/master</span><br><span class=\"line\">Updating eb32b20..ce39f8b</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> README.md | 2 +-</span><br><span class=\"line\"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>无差异</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge origin/master</span><br><span class=\"line\">Already up-to-date</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"远程仓库没有改变，本地仓库发生改变\"><a href=\"#远程仓库没有改变，本地仓库发生改变\" class=\"headerlink\" title=\"远程仓库没有改变，本地仓库发生改变\"></a><span id=\"d2\">远程仓库没有改变，本地仓库发生改变</span></h2><p><strong>命令推荐</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status // 查看版本库的状态</span><br><span class=\"line\">git add .|[file you want add like README.md] // 添加修改的文件进入版本库</span><br><span class=\"line\">git commit -m &quot;the content of your modify&quot; // 提交版本库</span><br><span class=\"line\">git push -u origin master // 上传到远程版本库</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>首先你的文件出现了修改 <code>git status</code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is up-to-date with &apos;origin/master&apos;.</span><br><span class=\"line\">Changes not staged for commit:</span><br><span class=\"line\">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class=\"line\">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class=\"line\"></span><br><span class=\"line\">\tmodified:   README.md</span><br><span class=\"line\"></span><br><span class=\"line\">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>你的文件被修改后就会出现这样的显示</p>\n<ul>\n<li>添加文件 <code>git add .|[或者某个文件]|like: README.md</code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add README.md</span><br><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is up-to-date with &apos;origin/master&apos;.</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">\tmodified:   README.md</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>文件添加后，就会出现这种</p>\n<ul>\n<li>提交文件 <code>git commit -m &quot;content&quot;</code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -m &quot;update content&quot;</span><br><span class=\"line\">[master 7456161] update content</span><br><span class=\"line\"> Committer: &#123;User&#125; &lt;wuyingqiang@wuyingqiangs-MacBook-Pro.local&gt;</span><br><span class=\"line\">Your name and email address were configured automatically based</span><br><span class=\"line\">on your username and hostname. Please check that they are accurate.</span><br><span class=\"line\">You can suppress this message by setting them explicitly. Run the</span><br><span class=\"line\">following command and follow the instructions in your editor to edit</span><br><span class=\"line\">your configuration file:</span><br><span class=\"line\"></span><br><span class=\"line\">    git config --global --edit</span><br><span class=\"line\"></span><br><span class=\"line\">After doing this, you may fix the identity used for this commit with:</span><br><span class=\"line\"></span><br><span class=\"line\">    git commit --amend --reset-author</span><br><span class=\"line\"></span><br><span class=\"line\"> 1 file changed, 8 insertions(+), 3 deletions(-)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>文件提交到你的版本库，这样本地版本就更新了</p>\n<ul>\n<li>和远程库进行同步 <code>git push -u origin master</code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push -u origin master</span><br><span class=\"line\">Counting objects: 3, done.</span><br><span class=\"line\">Delta compression using up to 8 threads.</span><br><span class=\"line\">Compressing objects: 100% (2/2), done.</span><br><span class=\"line\">Writing objects: 100% (3/3), 417 bytes | 0 bytes/s, done.</span><br><span class=\"line\">Total 3 (delta 1), reused 0 (delta 0)</span><br><span class=\"line\">To git@github.com:scofieldWyq/Understanding_Unix-Linux_Programming.git</span><br><span class=\"line\">   ce39f8b..7456161  master -&gt; master</span><br><span class=\"line\">Branch master set up to track remote branch master from origin.</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这样我们的版本库同步也就好了。</p>\n<hr>\n<h2 id=\"远程仓库，本地仓库都发生改变\"><a href=\"#远程仓库，本地仓库都发生改变\" class=\"headerlink\" title=\"远程仓库，本地仓库都发生改变\"></a><span id=\"d3\">远程仓库，本地仓库都发生改变</span></h2><p>  以后再说咯。。。</p>\n<hr>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><ul>\n<li>掌握 <code>git</code> 远程和本地的同步很重要的。</li>\n<li>还有解决同步产生的问题也是锻炼自己的一个机会。</li>\n</ul>\n"},{"title":"node 安装","date":"2016-03-01T03:15:33.000Z","_content":"# 关于Node\n\n> Node 是一个服务器端 JavaScript 解释器，它将改变服务器应该如何工作的概念。它的目标是帮助程序员构建高度可伸缩的应用程序，编写能够处理数万条同时连接到一个（只有一个）物理机的连接代码。\n\n---\n\n> Node.js® is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js' package ecosystem, npm, is the largest ecosystem of open source libraries in the world.\n\n---\n\n# 安装Node\n\n## Node for Mac\n\n   - 安装 `Homebrew`\n   ![node_install_p_2](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/node_install_p_2.png?raw=true)\n    [安装Homebrew](http://brew.sh/)\n   - 安装 node\n    ```{bash}\n    $ brew install node\n    $ node --version\n    v5.5.0\n    ```\n   **这样在 Mac 下的 Node 就安装好了**\n\n## Node for Windows\n  - 下载安装文件\n\n  ![image](https://nodejs.org/static/images/logos/nodejs-new-white-pantone.png)\n  [官网](http://www.nodejs.org/download/)\n  ![node_install_p_1](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/node_install_p_1.png?raw=true)\n\n  - 安装Node\n\n    双击它，默认是安装在`C:\\Program Files\\nodejs`下面\n\n    打开`C:\\Program Files\\nodejs`目录你会发现里面自带了npm,直接用npm安装相环境既可进入`node.js command prompt` 命令窗口进入nodejs 安装目录 `C:\\Program Files\\nodejs`\n\n    键入命令：`cd C:\\Program Files\\nodejs` 既可\n\n  - 现在开始安装相关环境\n\n    键入命令：`npm install express` 回车等待安装 `express`........\n\n    键入命令：`npm install mysql` 回车等待安装 `mysql`........\n\n    ........安装什么组件，取决于环境搭建需求\n\n    默认情况下上述组件都是安装在`C:\\Program Files\\nodejs\\node_modules`文件夹下 这也是nodejs相关组件的自动查找路径\n\n  **这样在 Windows 下的 Node 就安装好了**\n\n## Node for Linux\n\n  - 下载 `Node`\n    ```{bash}\n    $ wget http://nodejs.org/dist/v0.8.7/node-v0.8.7.tar.gz\n    ```\n\n  - 解压文件\n    ```{bash}\n    $ tar -zxvf node-v0.8.7.tar.gz\n    ```\n\n  - 检查所需要配置\n    ```{bash}\n    $ ./configure\n\n     出现错误提示：\n     Exception: Call to '(echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E -\n\n     > /dev/null 2>&1) && echo \"-m32\" || true' returned exit status 0. while\n\n    loading dependencies of /opt/node-v0.8.7/node.gyp while trying to load\n\n    /opt/node-v0.8.7/node.gyp\n    ```\n    + 如出现以上错误，安装gcc-c++\n    ```{bash}\n    $ yum install gcc-c++\n    ```\n  - 进行安装(时间比较长)：\n    ```{bash}\n    $ make install\n    ```\n\n  - 检查是否成功安装，输入命令：\n    ```{bash}\n    $ node -v\n    v5.5.0\n    ```\n    **这样在 Linux 下的 Node 就安装好了**\n\n**安装完 node 后 npm 也就安装完了**\n\n---\n\n# 参考链接\n\n- [Node](https://nodejs.org/en/)\n- [下载Node](https://nodejs.org/en/download/)\n- [Node.js 教程](http://www.runoob.com/nodejs/nodejs-tutorial.html)\n- [Node.js 究竟是什么？](http://www.ibm.com/developerworks/cn/opensource/os-nodejs/)\n- [windows 下安装nodejs及其配置环境](http://www.cnblogs.com/pigtail/archive/2013/01/08/2850486.html)\n","source":"_posts/node-安装.md","raw":"title: node 安装\ndate: 2016-03-01 11:15:33\ntags:\n- node\n- install\n\n---\n# 关于Node\n\n> Node 是一个服务器端 JavaScript 解释器，它将改变服务器应该如何工作的概念。它的目标是帮助程序员构建高度可伸缩的应用程序，编写能够处理数万条同时连接到一个（只有一个）物理机的连接代码。\n\n---\n\n> Node.js® is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js' package ecosystem, npm, is the largest ecosystem of open source libraries in the world.\n\n---\n\n# 安装Node\n\n## Node for Mac\n\n   - 安装 `Homebrew`\n   ![node_install_p_2](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/node_install_p_2.png?raw=true)\n    [安装Homebrew](http://brew.sh/)\n   - 安装 node\n    ```{bash}\n    $ brew install node\n    $ node --version\n    v5.5.0\n    ```\n   **这样在 Mac 下的 Node 就安装好了**\n\n## Node for Windows\n  - 下载安装文件\n\n  ![image](https://nodejs.org/static/images/logos/nodejs-new-white-pantone.png)\n  [官网](http://www.nodejs.org/download/)\n  ![node_install_p_1](https://github.com/scofieldWyq/wyqBlog/blob/master/picture/node_install_p_1.png?raw=true)\n\n  - 安装Node\n\n    双击它，默认是安装在`C:\\Program Files\\nodejs`下面\n\n    打开`C:\\Program Files\\nodejs`目录你会发现里面自带了npm,直接用npm安装相环境既可进入`node.js command prompt` 命令窗口进入nodejs 安装目录 `C:\\Program Files\\nodejs`\n\n    键入命令：`cd C:\\Program Files\\nodejs` 既可\n\n  - 现在开始安装相关环境\n\n    键入命令：`npm install express` 回车等待安装 `express`........\n\n    键入命令：`npm install mysql` 回车等待安装 `mysql`........\n\n    ........安装什么组件，取决于环境搭建需求\n\n    默认情况下上述组件都是安装在`C:\\Program Files\\nodejs\\node_modules`文件夹下 这也是nodejs相关组件的自动查找路径\n\n  **这样在 Windows 下的 Node 就安装好了**\n\n## Node for Linux\n\n  - 下载 `Node`\n    ```{bash}\n    $ wget http://nodejs.org/dist/v0.8.7/node-v0.8.7.tar.gz\n    ```\n\n  - 解压文件\n    ```{bash}\n    $ tar -zxvf node-v0.8.7.tar.gz\n    ```\n\n  - 检查所需要配置\n    ```{bash}\n    $ ./configure\n\n     出现错误提示：\n     Exception: Call to '(echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E -\n\n     > /dev/null 2>&1) && echo \"-m32\" || true' returned exit status 0. while\n\n    loading dependencies of /opt/node-v0.8.7/node.gyp while trying to load\n\n    /opt/node-v0.8.7/node.gyp\n    ```\n    + 如出现以上错误，安装gcc-c++\n    ```{bash}\n    $ yum install gcc-c++\n    ```\n  - 进行安装(时间比较长)：\n    ```{bash}\n    $ make install\n    ```\n\n  - 检查是否成功安装，输入命令：\n    ```{bash}\n    $ node -v\n    v5.5.0\n    ```\n    **这样在 Linux 下的 Node 就安装好了**\n\n**安装完 node 后 npm 也就安装完了**\n\n---\n\n# 参考链接\n\n- [Node](https://nodejs.org/en/)\n- [下载Node](https://nodejs.org/en/download/)\n- [Node.js 教程](http://www.runoob.com/nodejs/nodejs-tutorial.html)\n- [Node.js 究竟是什么？](http://www.ibm.com/developerworks/cn/opensource/os-nodejs/)\n- [windows 下安装nodejs及其配置环境](http://www.cnblogs.com/pigtail/archive/2013/01/08/2850486.html)\n","slug":"node-安装","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzen007npe3qqcrzatii","content":"<h1 id=\"关于Node\"><a href=\"#关于Node\" class=\"headerlink\" title=\"关于Node\"></a>关于Node</h1><blockquote>\n<p>Node 是一个服务器端 JavaScript 解释器，它将改变服务器应该如何工作的概念。它的目标是帮助程序员构建高度可伸缩的应用程序，编写能够处理数万条同时连接到一个（只有一个）物理机的连接代码。</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js’ package ecosystem, npm, is the largest ecosystem of open source libraries in the world.</p>\n</blockquote>\n<hr>\n<h1 id=\"安装Node\"><a href=\"#安装Node\" class=\"headerlink\" title=\"安装Node\"></a>安装Node</h1><h2 id=\"Node-for-Mac\"><a href=\"#Node-for-Mac\" class=\"headerlink\" title=\"Node for Mac\"></a>Node for Mac</h2><ul>\n<li>安装 <code>Homebrew</code><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/node_install_p_2.png?raw=true\" alt=\"node_install_p_2\"><br><a href=\"http://brew.sh/\" target=\"_blank\" rel=\"external\">安装Homebrew</a></li>\n<li><p>安装 node</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install node</span><br><span class=\"line\">$ node --version</span><br><span class=\"line\">v5.5.0</span><br></pre></td></tr></table></figure>\n<p><strong>这样在 Mac 下的 Node 就安装好了</strong></p>\n</li>\n</ul>\n<h2 id=\"Node-for-Windows\"><a href=\"#Node-for-Windows\" class=\"headerlink\" title=\"Node for Windows\"></a>Node for Windows</h2><ul>\n<li><p>下载安装文件</p>\n<p><img src=\"https://nodejs.org/static/images/logos/nodejs-new-white-pantone.png\" alt=\"image\"><br><a href=\"http://www.nodejs.org/download/\" target=\"_blank\" rel=\"external\">官网</a><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/node_install_p_1.png?raw=true\" alt=\"node_install_p_1\"></p>\n</li>\n<li><p>安装Node</p>\n<p>双击它，默认是安装在<code>C:\\Program Files\\nodejs</code>下面</p>\n<p>打开<code>C:\\Program Files\\nodejs</code>目录你会发现里面自带了npm,直接用npm安装相环境既可进入<code>node.js command prompt</code> 命令窗口进入nodejs 安装目录 <code>C:\\Program Files\\nodejs</code></p>\n<p>键入命令：<code>cd C:\\Program Files\\nodejs</code> 既可</p>\n</li>\n<li><p>现在开始安装相关环境</p>\n<p>键入命令：<code>npm install express</code> 回车等待安装 <code>express</code>……..</p>\n<p>键入命令：<code>npm install mysql</code> 回车等待安装 <code>mysql</code>……..</p>\n<p>……..安装什么组件，取决于环境搭建需求</p>\n<p>默认情况下上述组件都是安装在<code>C:\\Program Files\\nodejs\\node_modules</code>文件夹下 这也是nodejs相关组件的自动查找路径</p>\n<p><strong>这样在 Windows 下的 Node 就安装好了</strong></p>\n</li>\n</ul>\n<h2 id=\"Node-for-Linux\"><a href=\"#Node-for-Linux\" class=\"headerlink\" title=\"Node for Linux\"></a>Node for Linux</h2><ul>\n<li><p>下载 <code>Node</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget http://nodejs.org/dist/v0.8.7/node-v0.8.7.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tar -zxvf node-v0.8.7.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>检查所需要配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./configure</span><br><span class=\"line\"></span><br><span class=\"line\"> 出现错误提示：</span><br><span class=\"line\"> Exception: Call to &apos;(echo | $(echo $&#123;CXX_host:-$(which g++)&#125;) -m32 -E -</span><br><span class=\"line\"></span><br><span class=\"line\"> &gt; /dev/null 2&gt;&amp;1) &amp;&amp; echo &quot;-m32&quot; || true&apos; returned exit status 0. while</span><br><span class=\"line\"></span><br><span class=\"line\">loading dependencies of /opt/node-v0.8.7/node.gyp while trying to load</span><br><span class=\"line\"></span><br><span class=\"line\">/opt/node-v0.8.7/node.gyp</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如出现以上错误，安装gcc-c++<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install gcc-c++</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>进行安装(时间比较长)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>检查是否成功安装，输入命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node -v</span><br><span class=\"line\">v5.5.0</span><br></pre></td></tr></table></figure>\n<p><strong>这样在 Linux 下的 Node 就安装好了</strong></p>\n</li>\n</ul>\n<p><strong>安装完 node 后 npm 也就安装完了</strong></p>\n<hr>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><ul>\n<li><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node</a></li>\n<li><a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"external\">下载Node</a></li>\n<li><a href=\"http://www.runoob.com/nodejs/nodejs-tutorial.html\" target=\"_blank\" rel=\"external\">Node.js 教程</a></li>\n<li><a href=\"http://www.ibm.com/developerworks/cn/opensource/os-nodejs/\" target=\"_blank\" rel=\"external\">Node.js 究竟是什么？</a></li>\n<li><a href=\"http://www.cnblogs.com/pigtail/archive/2013/01/08/2850486.html\" target=\"_blank\" rel=\"external\">windows 下安装nodejs及其配置环境</a></li>\n</ul>\n","excerpt":"","more":"<h1 id=\"关于Node\"><a href=\"#关于Node\" class=\"headerlink\" title=\"关于Node\"></a>关于Node</h1><blockquote>\n<p>Node 是一个服务器端 JavaScript 解释器，它将改变服务器应该如何工作的概念。它的目标是帮助程序员构建高度可伸缩的应用程序，编写能够处理数万条同时连接到一个（只有一个）物理机的连接代码。</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js’ package ecosystem, npm, is the largest ecosystem of open source libraries in the world.</p>\n</blockquote>\n<hr>\n<h1 id=\"安装Node\"><a href=\"#安装Node\" class=\"headerlink\" title=\"安装Node\"></a>安装Node</h1><h2 id=\"Node-for-Mac\"><a href=\"#Node-for-Mac\" class=\"headerlink\" title=\"Node for Mac\"></a>Node for Mac</h2><ul>\n<li>安装 <code>Homebrew</code><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/node_install_p_2.png?raw=true\" alt=\"node_install_p_2\"><br><a href=\"http://brew.sh/\">安装Homebrew</a></li>\n<li><p>安装 node</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install node</span><br><span class=\"line\">$ node --version</span><br><span class=\"line\">v5.5.0</span><br></pre></td></tr></table></figure>\n<p><strong>这样在 Mac 下的 Node 就安装好了</strong></p>\n</li>\n</ul>\n<h2 id=\"Node-for-Windows\"><a href=\"#Node-for-Windows\" class=\"headerlink\" title=\"Node for Windows\"></a>Node for Windows</h2><ul>\n<li><p>下载安装文件</p>\n<p><img src=\"https://nodejs.org/static/images/logos/nodejs-new-white-pantone.png\" alt=\"image\"><br><a href=\"http://www.nodejs.org/download/\">官网</a><br><img src=\"https://github.com/scofieldWyq/wyqBlog/blob/master/picture/node_install_p_1.png?raw=true\" alt=\"node_install_p_1\"></p>\n</li>\n<li><p>安装Node</p>\n<p>双击它，默认是安装在<code>C:\\Program Files\\nodejs</code>下面</p>\n<p>打开<code>C:\\Program Files\\nodejs</code>目录你会发现里面自带了npm,直接用npm安装相环境既可进入<code>node.js command prompt</code> 命令窗口进入nodejs 安装目录 <code>C:\\Program Files\\nodejs</code></p>\n<p>键入命令：<code>cd C:\\Program Files\\nodejs</code> 既可</p>\n</li>\n<li><p>现在开始安装相关环境</p>\n<p>键入命令：<code>npm install express</code> 回车等待安装 <code>express</code>……..</p>\n<p>键入命令：<code>npm install mysql</code> 回车等待安装 <code>mysql</code>……..</p>\n<p>……..安装什么组件，取决于环境搭建需求</p>\n<p>默认情况下上述组件都是安装在<code>C:\\Program Files\\nodejs\\node_modules</code>文件夹下 这也是nodejs相关组件的自动查找路径</p>\n<p><strong>这样在 Windows 下的 Node 就安装好了</strong></p>\n</li>\n</ul>\n<h2 id=\"Node-for-Linux\"><a href=\"#Node-for-Linux\" class=\"headerlink\" title=\"Node for Linux\"></a>Node for Linux</h2><ul>\n<li><p>下载 <code>Node</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget http://nodejs.org/dist/v0.8.7/node-v0.8.7.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tar -zxvf node-v0.8.7.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>检查所需要配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./configure</span><br><span class=\"line\"></span><br><span class=\"line\"> 出现错误提示：</span><br><span class=\"line\"> Exception: Call to &apos;(echo | $(echo $&#123;CXX_host:-$(which g++)&#125;) -m32 -E -</span><br><span class=\"line\"></span><br><span class=\"line\"> &gt; /dev/null 2&gt;&amp;1) &amp;&amp; echo &quot;-m32&quot; || true&apos; returned exit status 0. while</span><br><span class=\"line\"></span><br><span class=\"line\">loading dependencies of /opt/node-v0.8.7/node.gyp while trying to load</span><br><span class=\"line\"></span><br><span class=\"line\">/opt/node-v0.8.7/node.gyp</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如出现以上错误，安装gcc-c++<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install gcc-c++</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>进行安装(时间比较长)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>检查是否成功安装，输入命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node -v</span><br><span class=\"line\">v5.5.0</span><br></pre></td></tr></table></figure>\n<p><strong>这样在 Linux 下的 Node 就安装好了</strong></p>\n</li>\n</ul>\n<p><strong>安装完 node 后 npm 也就安装完了</strong></p>\n<hr>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><ul>\n<li><a href=\"https://nodejs.org/en/\">Node</a></li>\n<li><a href=\"https://nodejs.org/en/download/\">下载Node</a></li>\n<li><a href=\"http://www.runoob.com/nodejs/nodejs-tutorial.html\">Node.js 教程</a></li>\n<li><a href=\"http://www.ibm.com/developerworks/cn/opensource/os-nodejs/\">Node.js 究竟是什么？</a></li>\n<li><a href=\"http://www.cnblogs.com/pigtail/archive/2013/01/08/2850486.html\">windows 下安装nodejs及其配置环境</a></li>\n</ul>\n"},{"title":"软件下载的网站","date":"2016-03-12T01:16:07.000Z","_content":"\n## 国外的比较好的下载软件的网站\n\n - [soft32](http://www.soft32.com/?rel=logo)\n\n - [卡巴斯基官方网站](http://www.kaspersky.com)\n\n - [SourceForge](https://sourceforge.net)\n    快速，安全和免费下载最大的开放源码应用程序和软件目录。\n\n - [BrotherSoft](http://www.brothersoft.com)\n    超过60000免费软件下载，共享软件下载。\n\n - [Download3K](http://www.download3k.com)\n    免费Windows软件下载。\n\n - [Softpedia](http://www.softpedia.com)\n    超过500000免费软件及试用软件下载，为Windows, Unix系统/Linux系统, 苹果机，\n\n - [Toocharger.com](http://www.toocharger.com)\n    下载成千上万的免费软件。\n\n - [Jetelecharge.com](http://www.jetelecharge.com)\n    法国免费软件下载网站。\n\n - [其他参考这个](http://www.baiju.org/i/c-all-40-1.html)\n\n## 国内软件下载的网站\n\n - [西西软件园](http://www.cr173.com/top/)\n\n - [ZOL软件下载](http://xiazai.zol.com.cn)\n\n - [下载吧](http://www.xiazaiba.com)\n    虽然软件不是很多，但基本上你需要的它里面都有，软件质量很高，也都无毒，很安全，大多收费的都是经过破解的.\n\n - [华军软件园](http://www.onlinedown.net)\n\n - [太平洋电脑网](http://dl.pconline.com.cn/sort/1.html)\n\n - [绿色联盟](http://www.xdowns.com)\n","source":"_posts/软件下载的网站.md","raw":"title: 软件下载的网站\ndate: 2016-03-12 09:16:07\ntags:\n- 网站\n- 软件下载\n\n---\n\n## 国外的比较好的下载软件的网站\n\n - [soft32](http://www.soft32.com/?rel=logo)\n\n - [卡巴斯基官方网站](http://www.kaspersky.com)\n\n - [SourceForge](https://sourceforge.net)\n    快速，安全和免费下载最大的开放源码应用程序和软件目录。\n\n - [BrotherSoft](http://www.brothersoft.com)\n    超过60000免费软件下载，共享软件下载。\n\n - [Download3K](http://www.download3k.com)\n    免费Windows软件下载。\n\n - [Softpedia](http://www.softpedia.com)\n    超过500000免费软件及试用软件下载，为Windows, Unix系统/Linux系统, 苹果机，\n\n - [Toocharger.com](http://www.toocharger.com)\n    下载成千上万的免费软件。\n\n - [Jetelecharge.com](http://www.jetelecharge.com)\n    法国免费软件下载网站。\n\n - [其他参考这个](http://www.baiju.org/i/c-all-40-1.html)\n\n## 国内软件下载的网站\n\n - [西西软件园](http://www.cr173.com/top/)\n\n - [ZOL软件下载](http://xiazai.zol.com.cn)\n\n - [下载吧](http://www.xiazaiba.com)\n    虽然软件不是很多，但基本上你需要的它里面都有，软件质量很高，也都无毒，很安全，大多收费的都是经过破解的.\n\n - [华军软件园](http://www.onlinedown.net)\n\n - [太平洋电脑网](http://dl.pconline.com.cn/sort/1.html)\n\n - [绿色联盟](http://www.xdowns.com)\n","slug":"软件下载的网站","published":1,"updated":"2016-05-16T06:03:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio9luzf10085pe3qxfaue42l","content":"<h2 id=\"国外的比较好的下载软件的网站\"><a href=\"#国外的比较好的下载软件的网站\" class=\"headerlink\" title=\"国外的比较好的下载软件的网站\"></a>国外的比较好的下载软件的网站</h2><ul>\n<li><p><a href=\"http://www.soft32.com/?rel=logo\" target=\"_blank\" rel=\"external\">soft32</a></p>\n</li>\n<li><p><a href=\"http://www.kaspersky.com\" target=\"_blank\" rel=\"external\">卡巴斯基官方网站</a></p>\n</li>\n<li><p><a href=\"https://sourceforge.net\" target=\"_blank\" rel=\"external\">SourceForge</a><br> 快速，安全和免费下载最大的开放源码应用程序和软件目录。</p>\n</li>\n<li><p><a href=\"http://www.brothersoft.com\" target=\"_blank\" rel=\"external\">BrotherSoft</a><br> 超过60000免费软件下载，共享软件下载。</p>\n</li>\n<li><p><a href=\"http://www.download3k.com\" target=\"_blank\" rel=\"external\">Download3K</a><br> 免费Windows软件下载。</p>\n</li>\n<li><p><a href=\"http://www.softpedia.com\" target=\"_blank\" rel=\"external\">Softpedia</a><br> 超过500000免费软件及试用软件下载，为Windows, Unix系统/Linux系统, 苹果机，</p>\n</li>\n<li><p><a href=\"http://www.toocharger.com\" target=\"_blank\" rel=\"external\">Toocharger.com</a><br> 下载成千上万的免费软件。</p>\n</li>\n<li><p><a href=\"http://www.jetelecharge.com\" target=\"_blank\" rel=\"external\">Jetelecharge.com</a><br> 法国免费软件下载网站。</p>\n</li>\n<li><p><a href=\"http://www.baiju.org/i/c-all-40-1.html\" target=\"_blank\" rel=\"external\">其他参考这个</a></p>\n</li>\n</ul>\n<h2 id=\"国内软件下载的网站\"><a href=\"#国内软件下载的网站\" class=\"headerlink\" title=\"国内软件下载的网站\"></a>国内软件下载的网站</h2><ul>\n<li><p><a href=\"http://www.cr173.com/top/\" target=\"_blank\" rel=\"external\">西西软件园</a></p>\n</li>\n<li><p><a href=\"http://xiazai.zol.com.cn\" target=\"_blank\" rel=\"external\">ZOL软件下载</a></p>\n</li>\n<li><p><a href=\"http://www.xiazaiba.com\" target=\"_blank\" rel=\"external\">下载吧</a><br> 虽然软件不是很多，但基本上你需要的它里面都有，软件质量很高，也都无毒，很安全，大多收费的都是经过破解的.</p>\n</li>\n<li><p><a href=\"http://www.onlinedown.net\" target=\"_blank\" rel=\"external\">华军软件园</a></p>\n</li>\n<li><p><a href=\"http://dl.pconline.com.cn/sort/1.html\" target=\"_blank\" rel=\"external\">太平洋电脑网</a></p>\n</li>\n<li><p><a href=\"http://www.xdowns.com\" target=\"_blank\" rel=\"external\">绿色联盟</a></p>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"国外的比较好的下载软件的网站\"><a href=\"#国外的比较好的下载软件的网站\" class=\"headerlink\" title=\"国外的比较好的下载软件的网站\"></a>国外的比较好的下载软件的网站</h2><ul>\n<li><p><a href=\"http://www.soft32.com/?rel=logo\">soft32</a></p>\n</li>\n<li><p><a href=\"http://www.kaspersky.com\">卡巴斯基官方网站</a></p>\n</li>\n<li><p><a href=\"https://sourceforge.net\">SourceForge</a><br> 快速，安全和免费下载最大的开放源码应用程序和软件目录。</p>\n</li>\n<li><p><a href=\"http://www.brothersoft.com\">BrotherSoft</a><br> 超过60000免费软件下载，共享软件下载。</p>\n</li>\n<li><p><a href=\"http://www.download3k.com\">Download3K</a><br> 免费Windows软件下载。</p>\n</li>\n<li><p><a href=\"http://www.softpedia.com\">Softpedia</a><br> 超过500000免费软件及试用软件下载，为Windows, Unix系统/Linux系统, 苹果机，</p>\n</li>\n<li><p><a href=\"http://www.toocharger.com\">Toocharger.com</a><br> 下载成千上万的免费软件。</p>\n</li>\n<li><p><a href=\"http://www.jetelecharge.com\">Jetelecharge.com</a><br> 法国免费软件下载网站。</p>\n</li>\n<li><p><a href=\"http://www.baiju.org/i/c-all-40-1.html\">其他参考这个</a></p>\n</li>\n</ul>\n<h2 id=\"国内软件下载的网站\"><a href=\"#国内软件下载的网站\" class=\"headerlink\" title=\"国内软件下载的网站\"></a>国内软件下载的网站</h2><ul>\n<li><p><a href=\"http://www.cr173.com/top/\">西西软件园</a></p>\n</li>\n<li><p><a href=\"http://xiazai.zol.com.cn\">ZOL软件下载</a></p>\n</li>\n<li><p><a href=\"http://www.xiazaiba.com\">下载吧</a><br> 虽然软件不是很多，但基本上你需要的它里面都有，软件质量很高，也都无毒，很安全，大多收费的都是经过破解的.</p>\n</li>\n<li><p><a href=\"http://www.onlinedown.net\">华军软件园</a></p>\n</li>\n<li><p><a href=\"http://dl.pconline.com.cn/sort/1.html\">太平洋电脑网</a></p>\n</li>\n<li><p><a href=\"http://www.xdowns.com\">绿色联盟</a></p>\n</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cio9luzar0001pe3q1aetkcj8","tag_id":"cio9luzax0003pe3q6h1f42ee","_id":"cio9luzbc000bpe3q9cwv1kuf"},{"post_id":"cio9luzar0001pe3q1aetkcj8","tag_id":"cio9luzb40006pe3qxxs5dry1","_id":"cio9luzbe000dpe3qxd9dytfb"},{"post_id":"cio9luzav0002pe3quspzj5p2","tag_id":"cio9luzbb000ape3ql8a0m0k5","_id":"cio9luzbl000kpe3qrlhwsbze"},{"post_id":"cio9luzav0002pe3quspzj5p2","tag_id":"cio9luzbf000fpe3qnbqgh0eu","_id":"cio9luzbp000mpe3qafif252o"},{"post_id":"cio9luzb10004pe3qqdy5i24x","tag_id":"cio9luzbj000ipe3qyphjwfb0","_id":"cio9luzbz000wpe3q05ycvol4"},{"post_id":"cio9luzb10004pe3qqdy5i24x","tag_id":"cio9luzbp000npe3q7fsrmx9n","_id":"cio9luzc1000ype3qnogxnc3p"},{"post_id":"cio9luzb10004pe3qqdy5i24x","tag_id":"cio9luzbv000rpe3q7ncxt74f","_id":"cio9luzc20011pe3q6w7gzrpq"},{"post_id":"cio9luzb30005pe3qwwrhlzga","tag_id":"cio9luzbj000ipe3qyphjwfb0","_id":"cio9luzcf001bpe3qu0l2z1wh"},{"post_id":"cio9luzb30005pe3qwwrhlzga","tag_id":"cio9luzc1000zpe3qno2t3llg","_id":"cio9luzcg001dpe3qij4k962z"},{"post_id":"cio9luzb30005pe3qwwrhlzga","tag_id":"cio9luzc30013pe3qd0nt0gvw","_id":"cio9luzcj001gpe3qlmay08v7"},{"post_id":"cio9luzb30005pe3qwwrhlzga","tag_id":"cio9luzbp000npe3q7fsrmx9n","_id":"cio9luzck001ipe3qnehwy7vx"},{"post_id":"cio9luzb40007pe3qm8dqvggf","tag_id":"cio9luzbj000ipe3qyphjwfb0","_id":"cio9luzct001rpe3qwikq124x"},{"post_id":"cio9luzb40007pe3qm8dqvggf","tag_id":"cio9luzcg001epe3q3ohr2l8f","_id":"cio9luzct001spe3qo70rho58"},{"post_id":"cio9luzb40007pe3qm8dqvggf","tag_id":"cio9luzcl001kpe3qxcigi5eh","_id":"cio9luzct001upe3qujhv826s"},{"post_id":"cio9luzb40007pe3qm8dqvggf","tag_id":"cio9luzcr001npe3q6s2hmivt","_id":"cio9luzct001vpe3qa9hnbtis"},{"post_id":"cio9luzb40007pe3qm8dqvggf","tag_id":"cio9luzcs001ppe3qu9aqeho7","_id":"cio9luzcu001xpe3qauutnbpi"},{"post_id":"cio9luzb70008pe3qoopyy9pt","tag_id":"cio9luzcs001qpe3qijvgbs07","_id":"cio9luzcv001ype3q222qhjv5"},{"post_id":"cio9luzb70008pe3qoopyy9pt","tag_id":"cio9luzct001tpe3q45g86pkt","_id":"cio9luzcv0020pe3qidwyi1n3"},{"post_id":"cio9luzba0009pe3qkn2fqso7","tag_id":"cio9luzct001wpe3qqyb1xhqm","_id":"cio9luzcw0024pe3qz7x8imp8"},{"post_id":"cio9luzba0009pe3qkn2fqso7","tag_id":"cio9luzcv001zpe3qirbxceby","_id":"cio9luzcx0025pe3qts0cwjco"},{"post_id":"cio9luzba0009pe3qkn2fqso7","tag_id":"cio9luzcv0021pe3qz3rwp5qv","_id":"cio9luzcz0027pe3q29ubgtzu"},{"post_id":"cio9luzba0009pe3qkn2fqso7","tag_id":"cio9luzcw0022pe3qurn1pnmq","_id":"cio9luzcz0028pe3qe95fu5q1"},{"post_id":"cio9luzbc000cpe3qr68l68yt","tag_id":"cio9luzct001wpe3qqyb1xhqm","_id":"cio9luzd1002cpe3qmdpy6674"},{"post_id":"cio9luzbc000cpe3qr68l68yt","tag_id":"cio9luzcx0026pe3qw9vk4xlz","_id":"cio9luzd2002dpe3qdgrdyqgr"},{"post_id":"cio9luzbc000cpe3qr68l68yt","tag_id":"cio9luzcz0029pe3qixcj2qi0","_id":"cio9luzd3002fpe3qqqmo6m7c"},{"post_id":"cio9luzbc000cpe3qr68l68yt","tag_id":"cio9luzd1002ape3q7zwvfmtd","_id":"cio9luzd3002gpe3qz54nbhyu"},{"post_id":"cio9luzbe000epe3qxhpet7n0","tag_id":"cio9luzct001wpe3qqyb1xhqm","_id":"cio9luzd4002lpe3q1m3g5x77"},{"post_id":"cio9luzbe000epe3qxhpet7n0","tag_id":"cio9luzcw0022pe3qurn1pnmq","_id":"cio9luzd4002mpe3q1cp5dpha"},{"post_id":"cio9luzbe000epe3qxhpet7n0","tag_id":"cio9luzd3002hpe3q9rc7sqei","_id":"cio9luzd4002ope3qsuxcoruj"},{"post_id":"cio9luzbe000epe3qxhpet7n0","tag_id":"cio9luzd3002ipe3qkcti6wrw","_id":"cio9luzd4002ppe3qeexui9lh"},{"post_id":"cio9luzbe000epe3qxhpet7n0","tag_id":"cio9luzd3002jpe3q44ax5b3a","_id":"cio9luzd5002rpe3qpyaizz9x"},{"post_id":"cio9luzbg000gpe3qywhzg4zv","tag_id":"cio9luzd3002kpe3qh6akjhhg","_id":"cio9luzd5002spe3q0onzcekh"},{"post_id":"cio9luzbg000gpe3qywhzg4zv","tag_id":"cio9luzct001wpe3qqyb1xhqm","_id":"cio9luzd5002upe3q9xh529fu"},{"post_id":"cio9luzbi000hpe3qwcqrwizy","tag_id":"cio9luzcw0022pe3qurn1pnmq","_id":"cio9luzd6002ype3q4kk8d391"},{"post_id":"cio9luzbi000hpe3qwcqrwizy","tag_id":"cio9luzct001wpe3qqyb1xhqm","_id":"cio9luzd6002zpe3q1qrc1jqo"},{"post_id":"cio9luzbi000hpe3qwcqrwizy","tag_id":"cio9luzd5002vpe3q04gqx285","_id":"cio9luzd60031pe3qgzdupb4r"},{"post_id":"cio9luzbi000hpe3qwcqrwizy","tag_id":"cio9luzd5002wpe3qelpanrvt","_id":"cio9luzd60032pe3qtme3tl7c"},{"post_id":"cio9luzbk000jpe3qt6fkuvly","tag_id":"cio9luzcw0022pe3qurn1pnmq","_id":"cio9luzd80036pe3qmzz1ppkd"},{"post_id":"cio9luzbk000jpe3qt6fkuvly","tag_id":"cio9luzct001wpe3qqyb1xhqm","_id":"cio9luzd80037pe3qff4v92gu"},{"post_id":"cio9luzbk000jpe3qt6fkuvly","tag_id":"cio9luzd5002vpe3q04gqx285","_id":"cio9luzd80039pe3qdjo6djc8"},{"post_id":"cio9luzbk000jpe3qt6fkuvly","tag_id":"cio9luzd70034pe3qh3ebdgdh","_id":"cio9luzd8003ape3qsb0ztuo5"},{"post_id":"cio9luzbl000lpe3q54c6klwv","tag_id":"cio9luzct001wpe3qqyb1xhqm","_id":"cio9luzda003fpe3qjkbzrgdb"},{"post_id":"cio9luzbl000lpe3q54c6klwv","tag_id":"cio9luzd80038pe3qqcz724pq","_id":"cio9luzda003gpe3q64v7pdlm"},{"post_id":"cio9luzbl000lpe3q54c6klwv","tag_id":"cio9luzd8003bpe3qucwssc4t","_id":"cio9luzda003ipe3qy5lbzpf8"},{"post_id":"cio9luzbl000lpe3q54c6klwv","tag_id":"cio9luzd8003cpe3qd433s99b","_id":"cio9luzdb003jpe3q2nv4rcxe"},{"post_id":"cio9luzbl000lpe3q54c6klwv","tag_id":"cio9luzd8003dpe3q2cy0u7dw","_id":"cio9luzdb003lpe3qb1no6fr9"},{"post_id":"cio9luzbp000ope3q72hyn4ro","tag_id":"cio9luzcw0022pe3qurn1pnmq","_id":"cio9luzdc003npe3qo2emlf9o"},{"post_id":"cio9luzbp000ope3q72hyn4ro","tag_id":"cio9luzct001wpe3qqyb1xhqm","_id":"cio9luzdc003ope3qzcc2ulh5"},{"post_id":"cio9luzbp000ope3q72hyn4ro","tag_id":"cio9luzdb003kpe3q65pxj8ay","_id":"cio9luzdd003qpe3q9kfakf8w"},{"post_id":"cio9luzbq000ppe3qgne7xwhp","tag_id":"cio9luzdb003mpe3q62ajs1we","_id":"cio9luzde003tpe3q618bxtiy"},{"post_id":"cio9luzbq000ppe3qgne7xwhp","tag_id":"cio9luzct001wpe3qqyb1xhqm","_id":"cio9luzde003upe3q3znbfbqf"},{"post_id":"cio9luzbq000ppe3qgne7xwhp","tag_id":"cio9luzdd003rpe3qly3nv44t","_id":"cio9luzde003wpe3qact7lcmk"},{"post_id":"cio9luzbu000qpe3qgjbhclst","tag_id":"cio9luzcs001ppe3qu9aqeho7","_id":"cio9luzdf0040pe3qk6orqy78"},{"post_id":"cio9luzbu000qpe3qgjbhclst","tag_id":"cio9luzde003vpe3qrkp8dzdx","_id":"cio9luzdf0041pe3qm9u0bzn5"},{"post_id":"cio9luzbu000qpe3qgjbhclst","tag_id":"cio9luzde003xpe3q0esny734","_id":"cio9luzdf0043pe3qb3c4j8gm"},{"post_id":"cio9luzbu000qpe3qgjbhclst","tag_id":"cio9luzde003ype3qspgijogb","_id":"cio9luzdf0044pe3qjmx1pttv"},{"post_id":"cio9luzbv000spe3qaph9s7ht","tag_id":"cio9luzcs001ppe3qu9aqeho7","_id":"cio9luzdg0047pe3qff6uu92c"},{"post_id":"cio9luzbv000spe3qaph9s7ht","tag_id":"cio9luzdf0042pe3q4jujfdxj","_id":"cio9luzdg0048pe3q11x1mmje"},{"post_id":"cio9luzbv000spe3qaph9s7ht","tag_id":"cio9luzde003ype3qspgijogb","_id":"cio9luzdg004ape3qyn86hjg2"},{"post_id":"cio9luzbx000tpe3qk84rzh5u","tag_id":"cio9luzcs001ppe3qu9aqeho7","_id":"cio9luzdj004epe3q46ngwkgk"},{"post_id":"cio9luzbx000tpe3qk84rzh5u","tag_id":"cio9luzdg0049pe3qrcgepy7k","_id":"cio9luzdj004fpe3q3v7bsg2i"},{"post_id":"cio9luzbx000tpe3qk84rzh5u","tag_id":"cio9luzde003xpe3q0esny734","_id":"cio9luzdk004hpe3qb22gwx8h"},{"post_id":"cio9luzbx000tpe3qk84rzh5u","tag_id":"cio9luzdi004cpe3qfyei0sbg","_id":"cio9luzdk004ipe3qvuroy90f"},{"post_id":"cio9luzbz000vpe3qlqfp96kw","tag_id":"cio9luzcs001ppe3qu9aqeho7","_id":"cio9luzdm004ppe3qpewpadt3"},{"post_id":"cio9luzbz000vpe3qlqfp96kw","tag_id":"cio9luzdg0049pe3qrcgepy7k","_id":"cio9luzdm004qpe3qfpci3em3"},{"post_id":"cio9luzbz000vpe3qlqfp96kw","tag_id":"cio9luzdk004jpe3qq28s4zvd","_id":"cio9luzdn004spe3qnx4y01fq"},{"post_id":"cio9luzbz000vpe3qlqfp96kw","tag_id":"cio9luzdl004kpe3qdn1sfxth","_id":"cio9luzdn004tpe3qzojmfl7v"},{"post_id":"cio9luzbz000vpe3qlqfp96kw","tag_id":"cio9luzdl004lpe3qvaeeg9zl","_id":"cio9luzdn004vpe3qit30i8lr"},{"post_id":"cio9luzbz000vpe3qlqfp96kw","tag_id":"cio9luzdl004mpe3qh4646r8p","_id":"cio9luzdn004wpe3qthneqn3y"},{"post_id":"cio9luzbz000vpe3qlqfp96kw","tag_id":"cio9luzdl004npe3q224i6pff","_id":"cio9luzdo004ype3qb5og6yam"},{"post_id":"cio9luzc0000xpe3qv4vatcdu","tag_id":"cio9luzcl001kpe3qxcigi5eh","_id":"cio9luzdo004zpe3qyb0ulfr4"},{"post_id":"cio9luzc0000xpe3qv4vatcdu","tag_id":"cio9luzdn004rpe3qu7cw9zl3","_id":"cio9luzdo0051pe3q0b95rnkr"},{"post_id":"cio9luzc10010pe3q0khs1pru","tag_id":"cio9luzcs001ppe3qu9aqeho7","_id":"cio9luzdp0054pe3qwcbq8l49"},{"post_id":"cio9luzc10010pe3q0khs1pru","tag_id":"cio9luzdn004xpe3qcla14x4n","_id":"cio9luzdp0055pe3ql1ydpkob"},{"post_id":"cio9luzc10010pe3q0khs1pru","tag_id":"cio9luzdo0050pe3qnuyotqai","_id":"cio9luzdp0057pe3qm1atav66"},{"post_id":"cio9luzc10010pe3q0khs1pru","tag_id":"cio9luzdo0052pe3qfv1xgk5n","_id":"cio9luzdp0058pe3qyn1xw92m"},{"post_id":"cio9luzc20012pe3qs1pf574a","tag_id":"cio9luzdo0053pe3qrm89uujl","_id":"cio9luzdq005ape3qriwk9q19"},{"post_id":"cio9luzc20012pe3qs1pf574a","tag_id":"cio9luzdp0056pe3qgjyu38x5","_id":"cio9luzdq005bpe3qrgsn5bi1"},{"post_id":"cio9luzc30014pe3qruchj4s3","tag_id":"cio9luzdo0053pe3qrm89uujl","_id":"cio9luzdr005epe3qu6uwmasg"},{"post_id":"cio9luzc30014pe3qruchj4s3","tag_id":"cio9luzdq005cpe3q5oj1aftj","_id":"cio9luzdr005fpe3qka5a02sd"},{"post_id":"cio9luzc50015pe3qi2gi9dqq","tag_id":"cio9luzdo0053pe3qrm89uujl","_id":"cio9luzdt005kpe3q02lj4zdg"},{"post_id":"cio9luzc50015pe3qi2gi9dqq","tag_id":"cio9luzdr005gpe3qo5x6co57","_id":"cio9luzdt005lpe3qavvvqhyg"},{"post_id":"cio9luzc50015pe3qi2gi9dqq","tag_id":"cio9luzdr005hpe3q0ce0bhzs","_id":"cio9luzdt005npe3qierzopgo"},{"post_id":"cio9luzc50015pe3qi2gi9dqq","tag_id":"cio9luzdp0056pe3qgjyu38x5","_id":"cio9luzdt005ope3qb1epx3en"},{"post_id":"cio9luzc80017pe3q8bjz873j","tag_id":"cio9luzdo0053pe3qrm89uujl","_id":"cio9luzdv005tpe3q0xz2oup5"},{"post_id":"cio9luzc80017pe3q8bjz873j","tag_id":"cio9luzdr005gpe3qo5x6co57","_id":"cio9luzdv005upe3q2u90jf5w"},{"post_id":"cio9luzc80017pe3q8bjz873j","tag_id":"cio9luzdt005ppe3qpyactxtg","_id":"cio9luzdw005wpe3qcpfarogp"},{"post_id":"cio9luzc80017pe3q8bjz873j","tag_id":"cio9luzdp0056pe3qgjyu38x5","_id":"cio9luzdw005xpe3qwyk4g09j"},{"post_id":"cio9luzc80017pe3q8bjz873j","tag_id":"cio9luzdr005hpe3q0ce0bhzs","_id":"cio9luzdx005zpe3qikp2z4wg"},{"post_id":"cio9luzc90018pe3qcdw83omv","tag_id":"cio9luzdo0053pe3qrm89uujl","_id":"cio9luzdx0060pe3qduch6vdc"},{"post_id":"cio9luzc90018pe3qcdw83omv","tag_id":"cio9luzdv005vpe3qqvqs81hj","_id":"cio9luzdx0062pe3qp0n5qy28"},{"post_id":"cio9luzcb001ape3qgya3bdzm","tag_id":"cio9luzdo0053pe3qrm89uujl","_id":"cio9luzdy0065pe3q7g02h3ng"},{"post_id":"cio9luzcb001ape3qgya3bdzm","tag_id":"cio9luzdx0061pe3qj4qcil40","_id":"cio9luzdy0066pe3qytga2x4l"},{"post_id":"cio9luzcb001ape3qgya3bdzm","tag_id":"cio9luzdx0063pe3qq9ukq6u5","_id":"cio9luzdz0068pe3qvitgp7js"},{"post_id":"cio9luzcf001cpe3qnk0csgu4","tag_id":"cio9luzdo0053pe3qrm89uujl","_id":"cio9luze0006cpe3qery8h1vo"},{"post_id":"cio9luzcf001cpe3qnk0csgu4","tag_id":"cio9luzdr005hpe3q0ce0bhzs","_id":"cio9luze0006dpe3q9gjemkxf"},{"post_id":"cio9luzcf001cpe3qnk0csgu4","tag_id":"cio9luzdz0069pe3qv28v6b30","_id":"cio9luze1006fpe3qm2nzcstj"},{"post_id":"cio9luzcf001cpe3qnk0csgu4","tag_id":"cio9luzdp0056pe3qgjyu38x5","_id":"cio9luze1006gpe3qx5k9pzpc"},{"post_id":"cio9luzcg001fpe3qxajkz18q","tag_id":"cio9luze0006bpe3qs1argwzn","_id":"cio9luze2006kpe3qh5ctrtuc"},{"post_id":"cio9luzcg001fpe3qxajkz18q","tag_id":"cio9luze0006epe3qjf4hci5o","_id":"cio9luze2006lpe3qs482aqx6"},{"post_id":"cio9luzcg001fpe3qxajkz18q","tag_id":"cio9luze1006hpe3qn20ud6bw","_id":"cio9luze2006npe3qpnkowpdg"},{"post_id":"cio9luzcg001fpe3qxajkz18q","tag_id":"cio9luze1006ipe3qtz4hwjf2","_id":"cio9luze2006ope3qrwvgzqhs"},{"post_id":"cio9luzcj001hpe3qf0nxo7g8","tag_id":"cio9luze0006bpe3qs1argwzn","_id":"cio9luze3006qpe3qjpwh5lrz"},{"post_id":"cio9luzcj001hpe3qf0nxo7g8","tag_id":"cio9luze2006mpe3quwyulwxa","_id":"cio9luze3006rpe3q5pyc3m9z"},{"post_id":"cio9luzcm001lpe3qd0iiwsri","tag_id":"cio9luze0006bpe3qs1argwzn","_id":"cio9luze4006vpe3qo9cb5sk2"},{"post_id":"cio9luzcm001lpe3qd0iiwsri","tag_id":"cio9luze3006spe3q8dg7mbyh","_id":"cio9luze4006wpe3qk3o4mysh"},{"post_id":"cio9luzcm001lpe3qd0iiwsri","tag_id":"cio9luze3006tpe3qmmj7x776","_id":"cio9luze4006ype3q64vtyfcc"},{"post_id":"cio9luzco001mpe3qq1ruiw9u","tag_id":"cio9luze0006bpe3qs1argwzn","_id":"cio9luze50071pe3qe2wf0cnd"},{"post_id":"cio9luzco001mpe3qq1ruiw9u","tag_id":"cio9luze0006epe3qjf4hci5o","_id":"cio9luze50072pe3qwn3gxyzg"},{"post_id":"cio9luzco001mpe3qq1ruiw9u","tag_id":"cio9luze1006hpe3qn20ud6bw","_id":"cio9luze50074pe3qbv415cs0"},{"post_id":"cio9luzcr001ope3qwnctotqg","tag_id":"cio9luze0006bpe3qs1argwzn","_id":"cio9luze70078pe3q9zcq5zyc"},{"post_id":"cio9luzcr001ope3qwnctotqg","tag_id":"cio9luze50073pe3q8v1opecg","_id":"cio9luze70079pe3qcc2krw93"},{"post_id":"cio9luzcr001ope3qwnctotqg","tag_id":"cio9luze0006epe3qjf4hci5o","_id":"cio9luze7007ape3q17548ohi"},{"post_id":"cio9luzcr001ope3qwnctotqg","tag_id":"cio9luze1006hpe3qn20ud6bw","_id":"cio9luze7007bpe3q471neh4c"},{"post_id":"cio9luzcr001ope3qwnctotqg","tag_id":"cio9luze60077pe3qwzty4i1b","_id":"cio9luze7007cpe3qm2btoyzk"},{"post_id":"cio9luzed007dpe3qnyayciau","tag_id":"cio9luze0006bpe3qs1argwzn","_id":"cio9luzem007kpe3qjnsgv1dr"},{"post_id":"cio9luzed007dpe3qnyayciau","tag_id":"cio9luzeg007fpe3qw90i4mlw","_id":"cio9luzen007mpe3qq4p3835v"},{"post_id":"cio9luzeh007gpe3q3jmymtft","tag_id":"cio9luze0006bpe3qs1argwzn","_id":"cio9luzeq007ppe3qi9lwiv5z"},{"post_id":"cio9luzeh007gpe3q3jmymtft","tag_id":"cio9luzdo0053pe3qrm89uujl","_id":"cio9luzeq007qpe3qq06b4tpp"},{"post_id":"cio9luzeh007gpe3q3jmymtft","tag_id":"cio9luzel007ipe3qgfrkkvb4","_id":"cio9luzeq007spe3q8j9ellzu"},{"post_id":"cio9luzeh007gpe3q3jmymtft","tag_id":"cio9luzdr005hpe3q0ce0bhzs","_id":"cio9luzer007tpe3qehlgmgk5"},{"post_id":"cio9luzeh007gpe3q3jmymtft","tag_id":"cio9luzdp0056pe3qgjyu38x5","_id":"cio9luzer007vpe3qj5w9pbrx"},{"post_id":"cio9luzek007hpe3qsl6h18vy","tag_id":"cio9luzct001wpe3qqyb1xhqm","_id":"cio9luzer007wpe3qn5lg5nby"},{"post_id":"cio9luzek007hpe3qsl6h18vy","tag_id":"cio9luzep007ope3qvvlpc57b","_id":"cio9luzer007ype3q1hdyodbt"},{"post_id":"cio9luzem007lpe3q0zwvuiqo","tag_id":"cio9luzeq007rpe3qtfcdg5vj","_id":"cio9luzes0080pe3qj4yjtcoo"},{"post_id":"cio9luzem007lpe3q0zwvuiqo","tag_id":"cio9luzer007upe3qrzc5119f","_id":"cio9luzes0081pe3qoxwfl87k"},{"post_id":"cio9luzem007lpe3q0zwvuiqo","tag_id":"cio9luzer007xpe3qx3gei6jm","_id":"cio9luzes0082pe3qrsjynkbn"},{"post_id":"cio9luzen007npe3qqcrzatii","tag_id":"cio9luzer007zpe3q97vy6ke1","_id":"cio9luzet0083pe3qv16pb12x"},{"post_id":"cio9luzen007npe3qqcrzatii","tag_id":"cio9luzcg001epe3q3ohr2l8f","_id":"cio9luzet0084pe3qagouhr7z"},{"post_id":"cio9luzf10085pe3qxfaue42l","tag_id":"cio9luzf40086pe3qj96ah0nh","_id":"cio9luzf50088pe3qtvc9516a"},{"post_id":"cio9luzf10085pe3qxfaue42l","tag_id":"cio9luzf40087pe3q8msfkseu","_id":"cio9luzf50089pe3qkd33l57h"}],"Tag":[{"name":"百度网盘","_id":"cio9luzax0003pe3q6h1f42ee"},{"name":"外部链接","_id":"cio9luzb40006pe3qxxs5dry1"},{"name":"AFNetworking","_id":"cio9luzbb000ape3ql8a0m0k5"},{"name":"学习笔记","_id":"cio9luzbf000fpe3qnbqgh0eu"},{"name":"Git","_id":"cio9luzbj000ipe3qyphjwfb0"},{"name":"branch","_id":"cio9luzbp000npe3q7fsrmx9n"},{"name":"search","_id":"cio9luzbv000rpe3q7ncxt74f"},{"name":"fetch","_id":"cio9luzc1000zpe3qno2t3llg"},{"name":"checkout","_id":"cio9luzc30013pe3qd0nt0gvw"},{"name":"install","_id":"cio9luzcg001epe3q3ohr2l8f"},{"name":"Mac","_id":"cio9luzcl001kpe3qxcigi5eh"},{"name":"Windows","_id":"cio9luzcr001npe3q6s2hmivt"},{"name":"Linux","_id":"cio9luzcs001ppe3qu9aqeho7"},{"name":"github","_id":"cio9luzcs001qpe3qijvgbs07"},{"name":"图片外链","_id":"cio9luzct001tpe3q45g86pkt"},{"name":"IOS","_id":"cio9luzct001wpe3qqyb1xhqm"},{"name":"Key-Value","_id":"cio9luzcv001zpe3qirbxceby"},{"name":"编程","_id":"cio9luzcv0021pe3qz3rwp5qv"},{"name":"KVC","_id":"cio9luzcw0022pe3qurn1pnmq"},{"name":"CLLocationManager","_id":"cio9luzcx0026pe3qw9vk4xlz"},{"name":"Location","_id":"cio9luzcz0029pe3qixcj2qi0"},{"name":"Delegate","_id":"cio9luzd1002ape3q7zwvfmtd"},{"name":"字典","_id":"cio9luzd3002hpe3q9rc7sqei"},{"name":"数组","_id":"cio9luzd3002ipe3qkcti6wrw"},{"name":"键值编码","_id":"cio9luzd3002jpe3q44ax5b3a"},{"name":"UIStoryboard","_id":"cio9luzd3002kpe3qh6akjhhg"},{"name":"Objective-c","_id":"cio9luzd5002vpe3q04gqx285"},{"name":"setValue","_id":"cio9luzd5002wpe3qelpanrvt"},{"name":"valueForKey","_id":"cio9luzd70034pe3qh3ebdgdh"},{"name":"audio player","_id":"cio9luzd80038pe3qqcz724pq"},{"name":"local","_id":"cio9luzd8003bpe3qucwssc4t"},{"name":"MPMusicPlayerController","_id":"cio9luzd8003cpe3qd433s99b"},{"name":"MPMediaQuery","_id":"cio9luzd8003dpe3q2cy0u7dw"},{"name":"keyPath","_id":"cio9luzdb003kpe3q65pxj8ay"},{"name":"KVO","_id":"cio9luzdb003mpe3q62ajs1we"},{"name":"键值观察","_id":"cio9luzdd003rpe3qly3nv44t"},{"name":"file","_id":"cio9luzde003vpe3qrkp8dzdx"},{"name":"struct","_id":"cio9luzde003xpe3q0esny734"},{"name":"stat","_id":"cio9luzde003ype3qspgijogb"},{"name":"file attribute","_id":"cio9luzdf0042pe3q4jujfdxj"},{"name":"Directory","_id":"cio9luzdg0049pe3qrcgepy7k"},{"name":"dirent","_id":"cio9luzdi004cpe3qfyei0sbg"},{"name":"opendir","_id":"cio9luzdk004jpe3qq28s4zvd"},{"name":"readdir","_id":"cio9luzdl004kpe3qdn1sfxth"},{"name":"closedir","_id":"cio9luzdl004lpe3qvaeeg9zl"},{"name":"seekdir","_id":"cio9luzdl004mpe3qh4646r8p"},{"name":"Directory_operation","_id":"cio9luzdl004npe3q224i6pff"},{"name":"快捷键","_id":"cio9luzdn004rpe3qu7cw9zl3"},{"name":"Man","_id":"cio9luzdn004xpe3qcla14x4n"},{"name":"command line","_id":"cio9luzdo0050pe3qnuyotqai"},{"name":"keyword -k","_id":"cio9luzdo0052pe3qfv1xgk5n"},{"name":"Mysql","_id":"cio9luzdo0053pe3qrm89uujl"},{"name":"database","_id":"cio9luzdp0056pe3qgjyu38x5"},{"name":"table","_id":"cio9luzdq005cpe3q5oj1aftj"},{"name":"数据类型","_id":"cio9luzdr005gpe3qo5x6co57"},{"name":"数据库","_id":"cio9luzdr005hpe3q0ce0bhzs"},{"name":"属性","_id":"cio9luzdt005ppe3qpyactxtg"},{"name":"INSERT","_id":"cio9luzdv005vpe3qqvqs81hj"},{"name":"VIEW","_id":"cio9luzdx0061pe3qj4qcil40"},{"name":"视图","_id":"cio9luzdx0063pe3qq9ukq6u5"},{"name":"login","_id":"cio9luzdz0069pe3qv28v6b30"},{"name":"Python","_id":"cio9luze0006bpe3qs1argwzn"},{"name":"dict","_id":"cio9luze0006epe3qjf4hci5o"},{"name":"dictionary","_id":"cio9luze1006hpe3qn20ud6bw"},{"name":"Error","_id":"cio9luze1006ipe3qtz4hwjf2"},{"name":"setattr","_id":"cio9luze2006mpe3quwyulwxa"},{"name":"函数","_id":"cio9luze3006spe3q8dg7mbyh"},{"name":"多值返回","_id":"cio9luze3006tpe3qmmj7x776"},{"name":"string","_id":"cio9luze50073pe3q8v1opecg"},{"name":"str","_id":"cio9luze60077pe3qwzty4i1b"},{"name":"类型判断","_id":"cio9luzeg007fpe3qw90i4mlw"},{"name":"MySQLdb","_id":"cio9luzel007ipe3qgfrkkvb4"},{"name":"XML","_id":"cio9luzep007ope3qvvlpc57b"},{"name":"git","_id":"cio9luzeq007rpe3qtfcdg5vj"},{"name":"远程仓库","_id":"cio9luzer007upe3qrzc5119f"},{"name":"merge","_id":"cio9luzer007xpe3qx3gei6jm"},{"name":"node","_id":"cio9luzer007zpe3q97vy6ke1"},{"name":"网站","_id":"cio9luzf40086pe3qj96ah0nh"},{"name":"软件下载","_id":"cio9luzf40087pe3q8msfkseu"}]}}